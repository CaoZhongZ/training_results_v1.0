+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node070 node071 node072 '
+ echo 'hosts=node070 node071 node072 '
hosts=node070 node071 node072 
+ for node in $hosts
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1621610626729, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621610626735, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621610626735, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621610626735, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621610626736, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "3xDSS8440x8A100-PCIE-40GB", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 87}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node070 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node070
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621610635163, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node071 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node071
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621610647037, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node072 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node072
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621610662696, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ export SEED=14774
+ SEED=14774
+ MPIRUN='mpirun --allow-run-as-root --bind-to none -report-bindings -np 24'
+ mpirun --allow-run-as-root --bind-to none -report-bindings -np 24 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif bash ./run_and_time_multi.sh
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:32 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:33 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
running benchmark
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:24:34 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14774 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node070:1036074] MCW rank 7 is not bound (or bound to all available processors)
[node070:1036211] MCW rank 4 is not bound (or bound to all available processors)
[node070:1036170] MCW rank 5 is not bound (or bound to all available processors)
[node070:1036173] MCW rank 0 is not bound (or bound to all available processors)
[node070:1036172] MCW rank 6 is not bound (or bound to all available processors)
[node070:1036171] MCW rank 3 is not bound (or bound to all available processors)
[node070:1036168] MCW rank 2 is not bound (or bound to all available processors)
[node070:1036050] MCW rank 1 is not bound (or bound to all available processors)
[node071:1702161] MCW rank 9 is not bound (or bound to all available processors)
[node071:1702139] MCW rank 13 is not bound (or bound to all available processors)
[node071:1702138] MCW rank 11 is not bound (or bound to all available processors)
[node071:1702135] MCW rank 12 is not bound (or bound to all available processors)
[node071:1702134] MCW rank 10 is not bound (or bound to all available processors)
[node071:1702136] MCW rank 8 is not bound (or bound to all available processors)
[node071:1702133] MCW rank 15 is not bound (or bound to all available processors)
[node071:1702137] MCW rank 14 is not bound (or bound to all available processors)
[node072:609077] MCW rank 16 is not bound (or bound to all available processors)
[node072:609079] MCW rank 19 is not bound (or bound to all available processors)
[node072:609103] MCW rank 18 is not bound (or bound to all available processors)
[node072:609056] MCW rank 17 is not bound (or bound to all available processors)
[node072:609078] MCW rank 20 is not bound (or bound to all available processors)
[node072:609080] MCW rank 21 is not bound (or bound to all available processors)
[node072:609081] MCW rank 23 is not bound (or bound to all available processors)
[node072:608979] MCW rank 22 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680106, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680106, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680104, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621610680105, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621610704111, "event_type": "POINT_IN_TIME", "key": "seed", "value": 14774, "metadata": {"file": "train_imagenet.py", "lineno": 178}}
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:25:07] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.9.8+cuda11.3
:::MLLOG {"namespace": "", "time_ms": 1621610712703, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 256, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 286}}
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621610718545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 82, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621610718586, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv3_weight"}}
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:18] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:25:19] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621610721213, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,213 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35583, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,213 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31122, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,213 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25915, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48098, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49216, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56094, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53255, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22074, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7701, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14880, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51151, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61467, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60758, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,214 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64512, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23976, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63376, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12776, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54409, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2252, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10974, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22195, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=149, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,215 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18889, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621610721214, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 691}}
:::MLLOG {"namespace": "", "time_ms": 1621610721216, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 692}}
:::MLLOG {"namespace": "", "time_ms": 1621610721216, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 693}}
:::MLLOG {"namespace": "", "time_ms": 1621610721216, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 694}}
:::MLLOG {"namespace": "", "time_ms": 1621610721216, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1212}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1213}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1214}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1215}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 6144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1216}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1217}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1219}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1220}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1226}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1228}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1230}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:25:21,216 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11437, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.8, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1233}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1234}}
:::MLLOG {"namespace": "", "time_ms": 1621610721217, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 44, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1235}}
:::MLLOG {"namespace": "", "time_ms": 1621610737683, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1291}}
:::MLLOG {"namespace": "", "time_ms": 1621610737684, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 463}}
:::MLLOG {"namespace": "", "time_ms": 1621610737919, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 482}}
:::MLLOG {"namespace": "", "time_ms": 1621610737920, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 877, "first_epoch_num": 1, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610737920, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 1}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:25:40,792 Node[0] Epoch[0] Batch [0-20]	Speed: 47923.53 samples/sec	accuracy=nan
2021-05-21 10:25:43,078 Node[0] Epoch[0] Batch [20-40]	Speed: 53771.13 samples/sec	accuracy=nan
2021-05-21 10:25:45,408 Node[0] Epoch[0] Batch [40-60]	Speed: 52734.69 samples/sec	accuracy=nan
2021-05-21 10:25:47,664 Node[0] Epoch[0] Batch [60-80]	Speed: 54471.86 samples/sec	accuracy=nan
2021-05-21 10:25:50,011 Node[0] Epoch[0] Batch [80-100]	Speed: 52351.48 samples/sec	accuracy=nan
2021-05-21 10:25:52,331 Node[0] Epoch[0] Batch [100-120]	Speed: 52971.39 samples/sec	accuracy=nan
2021-05-21 10:25:54,592 Node[0] Epoch[0] Batch [120-140]	Speed: 54368.52 samples/sec	accuracy=nan
2021-05-21 10:25:56,843 Node[0] Epoch[0] Batch [140-160]	Speed: 54592.38 samples/sec	accuracy=nan
2021-05-21 10:25:59,128 Node[0] Epoch[0] Batch [160-180]	Speed: 53766.85 samples/sec	accuracy=nan
2021-05-21 10:26:01,393 Node[0] Epoch[0] Batch [180-200]	Speed: 54262.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610762268, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 1}}
2021-05-21 10:26:02,269 Node[0] Epoch[0] Time cost=24.349
:::MLLOG {"namespace": "", "time_ms": 1621610762269, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 52617.507847876645}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621610762269, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 52617.507847876645, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610762269, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 2}}
2021-05-21 10:26:04,506 Node[0] Epoch[1] Batch [0-20]	Speed: 57700.34 samples/sec	accuracy=nan
2021-05-21 10:26:06,633 Node[0] Epoch[1] Batch [20-40]	Speed: 57763.96 samples/sec	accuracy=nan
2021-05-21 10:26:08,782 Node[0] Epoch[1] Batch [40-60]	Speed: 57184.19 samples/sec	accuracy=nan
2021-05-21 10:26:10,983 Node[0] Epoch[1] Batch [60-80]	Speed: 55853.61 samples/sec	accuracy=nan
2021-05-21 10:26:13,255 Node[0] Epoch[1] Batch [80-100]	Speed: 54078.75 samples/sec	accuracy=nan
2021-05-21 10:26:15,517 Node[0] Epoch[1] Batch [100-120]	Speed: 54334.70 samples/sec	accuracy=nan
2021-05-21 10:26:17,774 Node[0] Epoch[1] Batch [120-140]	Speed: 54443.15 samples/sec	accuracy=nan
2021-05-21 10:26:20,042 Node[0] Epoch[1] Batch [140-160]	Speed: 54174.69 samples/sec	accuracy=nan
2021-05-21 10:26:22,304 Node[0] Epoch[1] Batch [160-180]	Speed: 54332.86 samples/sec	accuracy=nan
2021-05-21 10:26:24,569 Node[0] Epoch[1] Batch [180-200]	Speed: 54256.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610785437, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 2}}
2021-05-21 10:26:25,437 Node[0] Epoch[1] Time cost=23.168
:::MLLOG {"namespace": "", "time_ms": 1621610785437, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55299.17156236595}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621610785437, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55299.17156236595, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610785437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 3}}
2021-05-21 10:26:27,678 Node[0] Epoch[2] Batch [0-20]	Speed: 57600.09 samples/sec	accuracy=nan
2021-05-21 10:26:29,810 Node[0] Epoch[2] Batch [20-40]	Speed: 57636.64 samples/sec	accuracy=nan
2021-05-21 10:26:31,959 Node[0] Epoch[2] Batch [40-60]	Speed: 57176.96 samples/sec	accuracy=nan
2021-05-21 10:26:34,167 Node[0] Epoch[2] Batch [60-80]	Speed: 55670.11 samples/sec	accuracy=nan
2021-05-21 10:26:36,427 Node[0] Epoch[2] Batch [80-100]	Speed: 54374.82 samples/sec	accuracy=nan
2021-05-21 10:26:38,689 Node[0] Epoch[2] Batch [100-120]	Speed: 54318.85 samples/sec	accuracy=nan
2021-05-21 10:26:40,961 Node[0] Epoch[2] Batch [120-140]	Speed: 54093.51 samples/sec	accuracy=nan
2021-05-21 10:26:43,232 Node[0] Epoch[2] Batch [140-160]	Speed: 54124.80 samples/sec	accuracy=nan
2021-05-21 10:26:45,532 Node[0] Epoch[2] Batch [160-180]	Speed: 53426.61 samples/sec	accuracy=nan
2021-05-21 10:26:47,803 Node[0] Epoch[2] Batch [180-200]	Speed: 54115.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610808669, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 3}}
2021-05-21 10:26:48,670 Node[0] Epoch[2] Time cost=23.233
:::MLLOG {"namespace": "", "time_ms": 1621610808670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55145.193073232644}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621610808670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55145.193073232644, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610808670, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 4}}
2021-05-21 10:26:50,908 Node[0] Epoch[3] Batch [0-20]	Speed: 57668.73 samples/sec	accuracy=nan
2021-05-21 10:26:53,040 Node[0] Epoch[3] Batch [20-40]	Speed: 57644.64 samples/sec	accuracy=nan
2021-05-21 10:26:55,192 Node[0] Epoch[3] Batch [40-60]	Speed: 57094.89 samples/sec	accuracy=nan
2021-05-21 10:26:57,404 Node[0] Epoch[3] Batch [60-80]	Speed: 55555.61 samples/sec	accuracy=nan
2021-05-21 10:26:59,668 Node[0] Epoch[3] Batch [80-100]	Speed: 54290.02 samples/sec	accuracy=nan
2021-05-21 10:27:01,931 Node[0] Epoch[3] Batch [100-120]	Speed: 54299.33 samples/sec	accuracy=nan
2021-05-21 10:27:04,184 Node[0] Epoch[3] Batch [120-140]	Speed: 54537.42 samples/sec	accuracy=nan
2021-05-21 10:27:06,452 Node[0] Epoch[3] Batch [140-160]	Speed: 54184.69 samples/sec	accuracy=nan
2021-05-21 10:27:08,731 Node[0] Epoch[3] Batch [160-180]	Speed: 53931.61 samples/sec	accuracy=nan
2021-05-21 10:27:11,000 Node[0] Epoch[3] Batch [180-200]	Speed: 54166.71 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610831861, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 4}}
2021-05-21 10:27:11,861 Node[0] Epoch[3] Time cost=23.191
:::MLLOG {"namespace": "", "time_ms": 1621610831861, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55244.306065695215}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610831862, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55244.306065695215, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,962 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,963 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:27:11,964 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1621610831964, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 4}}
2021-05-21 10:27:11,964 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 10:27:12,532 Node[0] Epoch[3] Validation-accuracy=0.368219
2021-05-21 10:27:12,532 Node[0] Epoch[3] Validation-correct-count=767.000000
2021-05-21 10:27:12,532 Node[0] Epoch[3] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610832549, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610832549, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.37642, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610832550, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621610832550, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 5, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610832550, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 5}}
2021-05-21 10:27:14,694 Node[0] Epoch[4] Batch [0-20]	Speed: 57506.49 samples/sec	accuracy=nan
2021-05-21 10:27:16,824 Node[0] Epoch[4] Batch [20-40]	Speed: 57683.43 samples/sec	accuracy=nan
2021-05-21 10:27:18,973 Node[0] Epoch[4] Batch [40-60]	Speed: 57197.05 samples/sec	accuracy=nan
2021-05-21 10:27:21,182 Node[0] Epoch[4] Batch [60-80]	Speed: 55638.82 samples/sec	accuracy=nan
2021-05-21 10:27:23,451 Node[0] Epoch[4] Batch [80-100]	Speed: 54166.83 samples/sec	accuracy=nan
2021-05-21 10:27:25,726 Node[0] Epoch[4] Batch [100-120]	Speed: 54013.82 samples/sec	accuracy=nan
2021-05-21 10:27:28,006 Node[0] Epoch[4] Batch [120-140]	Speed: 53892.17 samples/sec	accuracy=nan
2021-05-21 10:27:30,277 Node[0] Epoch[4] Batch [140-160]	Speed: 54116.44 samples/sec	accuracy=nan
2021-05-21 10:27:32,545 Node[0] Epoch[4] Batch [160-180]	Speed: 54186.35 samples/sec	accuracy=nan
2021-05-21 10:27:34,811 Node[0] Epoch[4] Batch [180-200]	Speed: 54237.53 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610855663, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 5}}
2021-05-21 10:27:35,663 Node[0] Epoch[4] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621610855663, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55429.832508777006}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621610855663, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55429.832508777006, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610855663, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 6}}
2021-05-21 10:27:37,900 Node[0] Epoch[5] Batch [0-20]	Speed: 57690.12 samples/sec	accuracy=nan
2021-05-21 10:27:40,032 Node[0] Epoch[5] Batch [20-40]	Speed: 57650.55 samples/sec	accuracy=nan
2021-05-21 10:27:42,187 Node[0] Epoch[5] Batch [40-60]	Speed: 57014.49 samples/sec	accuracy=nan
2021-05-21 10:27:44,423 Node[0] Epoch[5] Batch [60-80]	Speed: 54968.33 samples/sec	accuracy=nan
2021-05-21 10:27:46,689 Node[0] Epoch[5] Batch [80-100]	Speed: 54224.87 samples/sec	accuracy=nan
2021-05-21 10:27:48,959 Node[0] Epoch[5] Batch [100-120]	Speed: 54155.76 samples/sec	accuracy=nan
2021-05-21 10:27:51,231 Node[0] Epoch[5] Batch [120-140]	Speed: 54094.16 samples/sec	accuracy=nan
2021-05-21 10:27:53,496 Node[0] Epoch[5] Batch [140-160]	Speed: 54236.00 samples/sec	accuracy=nan
2021-05-21 10:27:55,771 Node[0] Epoch[5] Batch [160-180]	Speed: 54026.70 samples/sec	accuracy=nan
2021-05-21 10:27:58,047 Node[0] Epoch[5] Batch [180-200]	Speed: 54000.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610878899, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 6}}
2021-05-21 10:27:58,899 Node[0] Epoch[5] Time cost=23.236
:::MLLOG {"namespace": "", "time_ms": 1621610878899, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55137.75175556501}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621610878899, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55137.75175556501, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610878900, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 7}}
2021-05-21 10:28:01,137 Node[0] Epoch[6] Batch [0-20]	Speed: 57676.92 samples/sec	accuracy=nan
2021-05-21 10:28:03,267 Node[0] Epoch[6] Batch [20-40]	Speed: 57692.90 samples/sec	accuracy=nan
2021-05-21 10:28:05,427 Node[0] Epoch[6] Batch [40-60]	Speed: 56911.46 samples/sec	accuracy=nan
2021-05-21 10:28:07,652 Node[0] Epoch[6] Batch [60-80]	Speed: 55231.28 samples/sec	accuracy=nan
2021-05-21 10:28:09,916 Node[0] Epoch[6] Batch [80-100]	Speed: 54277.68 samples/sec	accuracy=nan
2021-05-21 10:28:12,172 Node[0] Epoch[6] Batch [100-120]	Speed: 54457.42 samples/sec	accuracy=nan
2021-05-21 10:28:14,439 Node[0] Epoch[6] Batch [120-140]	Speed: 54223.75 samples/sec	accuracy=nan
2021-05-21 10:28:16,700 Node[0] Epoch[6] Batch [140-160]	Speed: 54359.47 samples/sec	accuracy=nan
2021-05-21 10:28:18,972 Node[0] Epoch[6] Batch [160-180]	Speed: 54085.49 samples/sec	accuracy=nan
2021-05-21 10:28:21,238 Node[0] Epoch[6] Batch [180-200]	Speed: 54233.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610902092, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 7}}
2021-05-21 10:28:22,092 Node[0] Epoch[6] Time cost=23.193
:::MLLOG {"namespace": "", "time_ms": 1621610902092, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55240.24041749157}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621610902093, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55240.24041749157, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610902093, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 8}}
2021-05-21 10:28:24,326 Node[0] Epoch[7] Batch [0-20]	Speed: 57777.85 samples/sec	accuracy=nan
2021-05-21 10:28:26,454 Node[0] Epoch[7] Batch [20-40]	Speed: 57746.71 samples/sec	accuracy=nan
2021-05-21 10:28:28,612 Node[0] Epoch[7] Batch [40-60]	Speed: 56953.86 samples/sec	accuracy=nan
2021-05-21 10:28:30,830 Node[0] Epoch[7] Batch [60-80]	Speed: 55411.27 samples/sec	accuracy=nan
2021-05-21 10:28:33,086 Node[0] Epoch[7] Batch [80-100]	Speed: 54473.31 samples/sec	accuracy=nan
2021-05-21 10:28:35,353 Node[0] Epoch[7] Batch [100-120]	Speed: 54217.42 samples/sec	accuracy=nan
2021-05-21 10:28:37,620 Node[0] Epoch[7] Batch [120-140]	Speed: 54205.32 samples/sec	accuracy=nan
2021-05-21 10:28:39,883 Node[0] Epoch[7] Batch [140-160]	Speed: 54304.12 samples/sec	accuracy=nan
2021-05-21 10:28:42,165 Node[0] Epoch[7] Batch [160-180]	Speed: 53842.24 samples/sec	accuracy=nan
2021-05-21 10:28:44,426 Node[0] Epoch[7] Batch [180-200]	Speed: 54366.89 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610925278, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 8}}
2021-05-21 10:28:45,278 Node[0] Epoch[7] Time cost=23.185
:::MLLOG {"namespace": "", "time_ms": 1621610925278, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55257.78167198928}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621610925278, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55257.78167198928, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610925381, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 8}}
2021-05-21 10:28:45,718 Node[0] Epoch[7] Validation-accuracy=0.501680
2021-05-21 10:28:45,718 Node[0] Epoch[7] Validation-correct-count=1045.000000
2021-05-21 10:28:45,718 Node[0] Epoch[7] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610925767, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621610925768, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.50824, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621610925768, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621610925768, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 9, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610925768, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 9}}
2021-05-21 10:28:47,916 Node[0] Epoch[8] Batch [0-20]	Speed: 57442.08 samples/sec	accuracy=nan
2021-05-21 10:28:50,048 Node[0] Epoch[8] Batch [20-40]	Speed: 57660.60 samples/sec	accuracy=nan
2021-05-21 10:28:52,205 Node[0] Epoch[8] Batch [40-60]	Speed: 56968.95 samples/sec	accuracy=nan
2021-05-21 10:28:54,424 Node[0] Epoch[8] Batch [60-80]	Speed: 55366.77 samples/sec	accuracy=nan
2021-05-21 10:28:56,697 Node[0] Epoch[8] Batch [80-100]	Speed: 54076.19 samples/sec	accuracy=nan
2021-05-21 10:28:58,960 Node[0] Epoch[8] Batch [100-120]	Speed: 54303.04 samples/sec	accuracy=nan
2021-05-21 10:29:01,239 Node[0] Epoch[8] Batch [120-140]	Speed: 53922.80 samples/sec	accuracy=nan
2021-05-21 10:29:03,507 Node[0] Epoch[8] Batch [140-160]	Speed: 54174.21 samples/sec	accuracy=nan
2021-05-21 10:29:05,774 Node[0] Epoch[8] Batch [160-180]	Speed: 54219.10 samples/sec	accuracy=nan
2021-05-21 10:29:08,040 Node[0] Epoch[8] Batch [180-200]	Speed: 54232.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610948892, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 9}}
2021-05-21 10:29:08,893 Node[0] Epoch[8] Time cost=23.125
:::MLLOG {"namespace": "", "time_ms": 1621610948893, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55401.74196131469}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621610948893, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55401.74196131469, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610948893, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 10}}
2021-05-21 10:29:11,131 Node[0] Epoch[9] Batch [0-20]	Speed: 57661.16 samples/sec	accuracy=nan
2021-05-21 10:29:13,263 Node[0] Epoch[9] Batch [20-40]	Speed: 57631.70 samples/sec	accuracy=nan
2021-05-21 10:29:15,423 Node[0] Epoch[9] Batch [40-60]	Speed: 56906.75 samples/sec	accuracy=nan
2021-05-21 10:29:17,644 Node[0] Epoch[9] Batch [60-80]	Speed: 55328.06 samples/sec	accuracy=nan
2021-05-21 10:29:19,913 Node[0] Epoch[9] Batch [80-100]	Speed: 54153.80 samples/sec	accuracy=nan
2021-05-21 10:29:22,181 Node[0] Epoch[9] Batch [100-120]	Speed: 54205.85 samples/sec	accuracy=nan
2021-05-21 10:29:24,441 Node[0] Epoch[9] Batch [120-140]	Speed: 54357.57 samples/sec	accuracy=nan
2021-05-21 10:29:26,698 Node[0] Epoch[9] Batch [140-160]	Speed: 54456.23 samples/sec	accuracy=nan
2021-05-21 10:29:28,964 Node[0] Epoch[9] Batch [160-180]	Speed: 54229.49 samples/sec	accuracy=nan
2021-05-21 10:29:31,215 Node[0] Epoch[9] Batch [180-200]	Speed: 54595.78 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610972067, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 10}}
2021-05-21 10:29:32,068 Node[0] Epoch[9] Time cost=23.175
:::MLLOG {"namespace": "", "time_ms": 1621610972068, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55283.005945315934}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621610972068, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55283.005945315934, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610972068, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 11}}
2021-05-21 10:29:34,307 Node[0] Epoch[10] Batch [0-20]	Speed: 57640.44 samples/sec	accuracy=nan
2021-05-21 10:29:36,437 Node[0] Epoch[10] Batch [20-40]	Speed: 57686.26 samples/sec	accuracy=nan
2021-05-21 10:29:38,597 Node[0] Epoch[10] Batch [40-60]	Speed: 56902.48 samples/sec	accuracy=nan
2021-05-21 10:29:40,828 Node[0] Epoch[10] Batch [60-80]	Speed: 55073.59 samples/sec	accuracy=nan
2021-05-21 10:29:43,100 Node[0] Epoch[10] Batch [80-100]	Speed: 54094.08 samples/sec	accuracy=nan
2021-05-21 10:29:45,371 Node[0] Epoch[10] Batch [100-120]	Speed: 54118.46 samples/sec	accuracy=nan
2021-05-21 10:29:47,635 Node[0] Epoch[10] Batch [120-140]	Speed: 54289.15 samples/sec	accuracy=nan
2021-05-21 10:29:49,898 Node[0] Epoch[10] Batch [140-160]	Speed: 54302.22 samples/sec	accuracy=nan
2021-05-21 10:29:52,168 Node[0] Epoch[10] Batch [160-180]	Speed: 54139.23 samples/sec	accuracy=nan
2021-05-21 10:29:54,421 Node[0] Epoch[10] Batch [180-200]	Speed: 54533.31 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610995272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 11}}
2021-05-21 10:29:55,272 Node[0] Epoch[10] Time cost=23.204
:::MLLOG {"namespace": "", "time_ms": 1621610995272, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55214.08045958599}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621610995272, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55214.08045958599, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610995272, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 12}}
2021-05-21 10:29:57,511 Node[0] Epoch[11] Batch [0-20]	Speed: 57655.69 samples/sec	accuracy=nan
2021-05-21 10:29:59,640 Node[0] Epoch[11] Batch [20-40]	Speed: 57723.77 samples/sec	accuracy=nan
2021-05-21 10:30:01,801 Node[0] Epoch[11] Batch [40-60]	Speed: 56873.94 samples/sec	accuracy=nan
2021-05-21 10:30:04,033 Node[0] Epoch[11] Batch [60-80]	Speed: 55058.22 samples/sec	accuracy=nan
2021-05-21 10:30:06,297 Node[0] Epoch[11] Batch [80-100]	Speed: 54294.95 samples/sec	accuracy=nan
2021-05-21 10:30:08,572 Node[0] Epoch[11] Batch [100-120]	Speed: 54010.55 samples/sec	accuracy=nan
2021-05-21 10:30:10,837 Node[0] Epoch[11] Batch [120-140]	Speed: 54245.33 samples/sec	accuracy=nan
2021-05-21 10:30:13,101 Node[0] Epoch[11] Batch [140-160]	Speed: 54295.05 samples/sec	accuracy=nan
2021-05-21 10:30:15,368 Node[0] Epoch[11] Batch [160-180]	Speed: 54199.15 samples/sec	accuracy=nan
2021-05-21 10:30:17,614 Node[0] Epoch[11] Batch [180-200]	Speed: 54719.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611018467, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 12}}
2021-05-21 10:30:18,467 Node[0] Epoch[11] Time cost=23.195
:::MLLOG {"namespace": "", "time_ms": 1621611018467, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55235.03755614944}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621611018467, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55235.03755614944, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611018570, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 12}}
2021-05-21 10:30:18,843 Node[0] Epoch[11] Validation-accuracy=0.530965
2021-05-21 10:30:18,844 Node[0] Epoch[11] Validation-correct-count=1106.000000
2021-05-21 10:30:18,844 Node[0] Epoch[11] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611018868, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621611018868, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53234, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621611018868, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621611018868, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 13, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611018868, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 13}}
2021-05-21 10:30:21,023 Node[0] Epoch[12] Batch [0-20]	Speed: 57288.98 samples/sec	accuracy=nan
2021-05-21 10:30:23,154 Node[0] Epoch[12] Batch [20-40]	Speed: 57668.21 samples/sec	accuracy=nan
2021-05-21 10:30:25,320 Node[0] Epoch[12] Batch [40-60]	Speed: 56728.33 samples/sec	accuracy=nan
2021-05-21 10:30:27,544 Node[0] Epoch[12] Batch [60-80]	Speed: 55265.85 samples/sec	accuracy=nan
2021-05-21 10:30:29,813 Node[0] Epoch[12] Batch [80-100]	Speed: 54164.31 samples/sec	accuracy=nan
2021-05-21 10:30:32,081 Node[0] Epoch[12] Batch [100-120]	Speed: 54163.95 samples/sec	accuracy=nan
2021-05-21 10:30:34,363 Node[0] Epoch[12] Batch [120-140]	Speed: 53869.86 samples/sec	accuracy=nan
2021-05-21 10:30:36,636 Node[0] Epoch[12] Batch [140-160]	Speed: 54051.81 samples/sec	accuracy=nan
2021-05-21 10:30:38,913 Node[0] Epoch[12] Batch [160-180]	Speed: 53979.72 samples/sec	accuracy=nan
2021-05-21 10:30:41,163 Node[0] Epoch[12] Batch [180-200]	Speed: 54610.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611042015, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 13}}
2021-05-21 10:30:42,016 Node[0] Epoch[12] Time cost=23.148
:::MLLOG {"namespace": "", "time_ms": 1621611042016, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55346.96756564568}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621611042016, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55346.96756564568, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611042017, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 14}}
2021-05-21 10:30:44,252 Node[0] Epoch[13] Batch [0-20]	Speed: 57709.40 samples/sec	accuracy=nan
2021-05-21 10:30:46,382 Node[0] Epoch[13] Batch [20-40]	Speed: 57689.19 samples/sec	accuracy=nan
2021-05-21 10:30:48,551 Node[0] Epoch[13] Batch [40-60]	Speed: 56669.70 samples/sec	accuracy=nan
2021-05-21 10:30:50,780 Node[0] Epoch[13] Batch [60-80]	Speed: 55114.28 samples/sec	accuracy=nan
2021-05-21 10:30:53,049 Node[0] Epoch[13] Batch [80-100]	Speed: 54186.76 samples/sec	accuracy=nan
2021-05-21 10:30:55,314 Node[0] Epoch[13] Batch [100-120]	Speed: 54245.69 samples/sec	accuracy=nan
2021-05-21 10:30:57,589 Node[0] Epoch[13] Batch [120-140]	Speed: 54023.64 samples/sec	accuracy=nan
2021-05-21 10:30:59,860 Node[0] Epoch[13] Batch [140-160]	Speed: 54096.01 samples/sec	accuracy=nan
2021-05-21 10:31:02,132 Node[0] Epoch[13] Batch [160-180]	Speed: 54096.17 samples/sec	accuracy=nan
2021-05-21 10:31:04,387 Node[0] Epoch[13] Batch [180-200]	Speed: 54499.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611065240, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 14}}
2021-05-21 10:31:05,240 Node[0] Epoch[13] Time cost=23.224
:::MLLOG {"namespace": "", "time_ms": 1621611065240, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55166.354452811465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621611065241, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55166.354452811465, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611065241, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 15}}
2021-05-21 10:31:07,479 Node[0] Epoch[14] Batch [0-20]	Speed: 57649.32 samples/sec	accuracy=nan
2021-05-21 10:31:09,610 Node[0] Epoch[14] Batch [20-40]	Speed: 57667.93 samples/sec	accuracy=nan
2021-05-21 10:31:11,777 Node[0] Epoch[14] Batch [40-60]	Speed: 56720.46 samples/sec	accuracy=nan
2021-05-21 10:31:14,007 Node[0] Epoch[14] Batch [60-80]	Speed: 55104.75 samples/sec	accuracy=nan
2021-05-21 10:31:16,276 Node[0] Epoch[14] Batch [80-100]	Speed: 54154.09 samples/sec	accuracy=nan
2021-05-21 10:31:18,563 Node[0] Epoch[14] Batch [100-120]	Speed: 53733.47 samples/sec	accuracy=nan
2021-05-21 10:31:20,841 Node[0] Epoch[14] Batch [120-140]	Speed: 53954.75 samples/sec	accuracy=nan
2021-05-21 10:31:23,108 Node[0] Epoch[14] Batch [140-160]	Speed: 54213.84 samples/sec	accuracy=nan
2021-05-21 10:31:25,381 Node[0] Epoch[14] Batch [160-180]	Speed: 54054.03 samples/sec	accuracy=nan
2021-05-21 10:31:27,616 Node[0] Epoch[14] Batch [180-200]	Speed: 54980.69 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611088468, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 15}}
2021-05-21 10:31:28,469 Node[0] Epoch[14] Time cost=23.228
:::MLLOG {"namespace": "", "time_ms": 1621611088469, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55156.2492682123}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621611088469, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55156.2492682123, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611088469, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 16}}
2021-05-21 10:31:30,706 Node[0] Epoch[15] Batch [0-20]	Speed: 57679.32 samples/sec	accuracy=nan
2021-05-21 10:31:32,837 Node[0] Epoch[15] Batch [20-40]	Speed: 57671.18 samples/sec	accuracy=nan
2021-05-21 10:31:35,006 Node[0] Epoch[15] Batch [40-60]	Speed: 56669.54 samples/sec	accuracy=nan
2021-05-21 10:31:37,236 Node[0] Epoch[15] Batch [60-80]	Speed: 55100.23 samples/sec	accuracy=nan
2021-05-21 10:31:39,507 Node[0] Epoch[15] Batch [80-100]	Speed: 54099.30 samples/sec	accuracy=nan
2021-05-21 10:31:41,764 Node[0] Epoch[15] Batch [100-120]	Speed: 54453.33 samples/sec	accuracy=nan
2021-05-21 10:31:44,025 Node[0] Epoch[15] Batch [120-140]	Speed: 54354.23 samples/sec	accuracy=nan
2021-05-21 10:31:46,291 Node[0] Epoch[15] Batch [140-160]	Speed: 54239.59 samples/sec	accuracy=nan
2021-05-21 10:31:48,562 Node[0] Epoch[15] Batch [160-180]	Speed: 54108.98 samples/sec	accuracy=nan
2021-05-21 10:31:50,813 Node[0] Epoch[15] Batch [180-200]	Speed: 54601.55 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611111660, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 16}}
2021-05-21 10:31:51,661 Node[0] Epoch[15] Time cost=23.192
:::MLLOG {"namespace": "", "time_ms": 1621611111661, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55241.64705611198}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621611111661, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55241.64705611198, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611111764, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 16}}
2021-05-21 10:31:52,034 Node[0] Epoch[15] Validation-accuracy=0.600576
2021-05-21 10:31:52,034 Node[0] Epoch[15] Validation-correct-count=1251.000000
2021-05-21 10:31:52,034 Node[0] Epoch[15] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611112042, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621611112043, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59572, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621611112043, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621611112043, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 17, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611112043, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 17}}
2021-05-21 10:31:54,204 Node[0] Epoch[16] Batch [0-20]	Speed: 57068.29 samples/sec	accuracy=nan
2021-05-21 10:31:56,328 Node[0] Epoch[16] Batch [20-40]	Speed: 57857.27 samples/sec	accuracy=nan
2021-05-21 10:31:58,503 Node[0] Epoch[16] Batch [40-60]	Speed: 56518.13 samples/sec	accuracy=nan
2021-05-21 10:32:00,736 Node[0] Epoch[16] Batch [60-80]	Speed: 55032.50 samples/sec	accuracy=nan
2021-05-21 10:32:03,005 Node[0] Epoch[16] Batch [80-100]	Speed: 54154.19 samples/sec	accuracy=nan
2021-05-21 10:32:05,262 Node[0] Epoch[16] Batch [100-120]	Speed: 54440.99 samples/sec	accuracy=nan
2021-05-21 10:32:07,524 Node[0] Epoch[16] Batch [120-140]	Speed: 54334.02 samples/sec	accuracy=nan
2021-05-21 10:32:09,791 Node[0] Epoch[16] Batch [140-160]	Speed: 54217.07 samples/sec	accuracy=nan
2021-05-21 10:32:12,073 Node[0] Epoch[16] Batch [160-180]	Speed: 53846.90 samples/sec	accuracy=nan
2021-05-21 10:32:14,305 Node[0] Epoch[16] Batch [180-200]	Speed: 55049.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611135153, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 17}}
2021-05-21 10:32:15,153 Node[0] Epoch[16] Time cost=23.110
:::MLLOG {"namespace": "", "time_ms": 1621611135154, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55436.91650271302}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621611135154, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55436.91650271302, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611135154, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 18}}
2021-05-21 10:32:17,385 Node[0] Epoch[17] Batch [0-20]	Speed: 57847.61 samples/sec	accuracy=nan
2021-05-21 10:32:19,510 Node[0] Epoch[17] Batch [20-40]	Speed: 57841.55 samples/sec	accuracy=nan
2021-05-21 10:32:21,678 Node[0] Epoch[17] Batch [40-60]	Speed: 56683.42 samples/sec	accuracy=nan
2021-05-21 10:32:23,912 Node[0] Epoch[17] Batch [60-80]	Speed: 54997.39 samples/sec	accuracy=nan
2021-05-21 10:32:26,182 Node[0] Epoch[17] Batch [80-100]	Speed: 54145.06 samples/sec	accuracy=nan
2021-05-21 10:32:28,448 Node[0] Epoch[17] Batch [100-120]	Speed: 54227.38 samples/sec	accuracy=nan
2021-05-21 10:32:30,718 Node[0] Epoch[17] Batch [120-140]	Speed: 54143.44 samples/sec	accuracy=nan
2021-05-21 10:32:32,991 Node[0] Epoch[17] Batch [140-160]	Speed: 54061.79 samples/sec	accuracy=nan
2021-05-21 10:32:35,260 Node[0] Epoch[17] Batch [160-180]	Speed: 54156.41 samples/sec	accuracy=nan
2021-05-21 10:32:37,491 Node[0] Epoch[17] Batch [180-200]	Speed: 55090.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611158340, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 18}}
2021-05-21 10:32:38,341 Node[0] Epoch[17] Time cost=23.187
:::MLLOG {"namespace": "", "time_ms": 1621611158341, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55253.33793237318}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621611158341, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55253.33793237318, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611158341, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 19}}
2021-05-21 10:32:40,572 Node[0] Epoch[18] Batch [0-20]	Speed: 57837.67 samples/sec	accuracy=nan
2021-05-21 10:32:42,696 Node[0] Epoch[18] Batch [20-40]	Speed: 57854.37 samples/sec	accuracy=nan
2021-05-21 10:32:44,870 Node[0] Epoch[18] Batch [40-60]	Speed: 56525.94 samples/sec	accuracy=nan
2021-05-21 10:32:47,108 Node[0] Epoch[18] Batch [60-80]	Speed: 54916.09 samples/sec	accuracy=nan
2021-05-21 10:32:49,374 Node[0] Epoch[18] Batch [80-100]	Speed: 54226.62 samples/sec	accuracy=nan
2021-05-21 10:32:51,643 Node[0] Epoch[18] Batch [100-120]	Speed: 54167.61 samples/sec	accuracy=nan
2021-05-21 10:32:53,906 Node[0] Epoch[18] Batch [120-140]	Speed: 54310.42 samples/sec	accuracy=nan
2021-05-21 10:32:56,174 Node[0] Epoch[18] Batch [140-160]	Speed: 54172.97 samples/sec	accuracy=nan
2021-05-21 10:32:58,452 Node[0] Epoch[18] Batch [160-180]	Speed: 53959.71 samples/sec	accuracy=nan
2021-05-21 10:33:00,681 Node[0] Epoch[18] Batch [180-200]	Speed: 55139.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611181529, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 19}}
2021-05-21 10:33:01,530 Node[0] Epoch[18] Time cost=23.189
:::MLLOG {"namespace": "", "time_ms": 1621611181530, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55249.6668892273}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621611181530, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55249.6668892273, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611181530, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 20}}
2021-05-21 10:33:03,762 Node[0] Epoch[19] Batch [0-20]	Speed: 57818.49 samples/sec	accuracy=nan
2021-05-21 10:33:05,887 Node[0] Epoch[19] Batch [20-40]	Speed: 57843.92 samples/sec	accuracy=nan
2021-05-21 10:33:08,068 Node[0] Epoch[19] Batch [40-60]	Speed: 56331.29 samples/sec	accuracy=nan
2021-05-21 10:33:10,299 Node[0] Epoch[19] Batch [60-80]	Speed: 55088.27 samples/sec	accuracy=nan
2021-05-21 10:33:12,558 Node[0] Epoch[19] Batch [80-100]	Speed: 54412.66 samples/sec	accuracy=nan
2021-05-21 10:33:14,832 Node[0] Epoch[19] Batch [100-120]	Speed: 54031.16 samples/sec	accuracy=nan
2021-05-21 10:33:17,102 Node[0] Epoch[19] Batch [120-140]	Speed: 54139.08 samples/sec	accuracy=nan
2021-05-21 10:33:19,367 Node[0] Epoch[19] Batch [140-160]	Speed: 54258.02 samples/sec	accuracy=nan
2021-05-21 10:33:21,637 Node[0] Epoch[19] Batch [160-180]	Speed: 54148.39 samples/sec	accuracy=nan
2021-05-21 10:33:23,851 Node[0] Epoch[19] Batch [180-200]	Speed: 55492.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611204699, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 20}}
2021-05-21 10:33:24,699 Node[0] Epoch[19] Time cost=23.169
:::MLLOG {"namespace": "", "time_ms": 1621611204700, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55296.513527986535}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621611204700, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55296.513527986535, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611204802, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 20}}
2021-05-21 10:33:25,068 Node[0] Epoch[19] Validation-accuracy=0.648104
2021-05-21 10:33:25,069 Node[0] Epoch[19] Validation-correct-count=1350.000000
2021-05-21 10:33:25,069 Node[0] Epoch[19] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611205076, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621611205077, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64108, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621611205077, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621611205077, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 21, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611205077, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 21}}
2021-05-21 10:33:27,236 Node[0] Epoch[20] Batch [0-20]	Speed: 57102.11 samples/sec	accuracy=nan
2021-05-21 10:33:29,362 Node[0] Epoch[20] Batch [20-40]	Speed: 57803.35 samples/sec	accuracy=nan
2021-05-21 10:33:31,537 Node[0] Epoch[20] Batch [40-60]	Speed: 56508.19 samples/sec	accuracy=nan
2021-05-21 10:33:33,773 Node[0] Epoch[20] Batch [60-80]	Speed: 54965.54 samples/sec	accuracy=nan
2021-05-21 10:33:36,039 Node[0] Epoch[20] Batch [80-100]	Speed: 54223.69 samples/sec	accuracy=nan
2021-05-21 10:33:38,305 Node[0] Epoch[20] Batch [100-120]	Speed: 54229.64 samples/sec	accuracy=nan
2021-05-21 10:33:40,577 Node[0] Epoch[20] Batch [120-140]	Speed: 54096.93 samples/sec	accuracy=nan
2021-05-21 10:33:42,841 Node[0] Epoch[20] Batch [140-160]	Speed: 54275.16 samples/sec	accuracy=nan
2021-05-21 10:33:45,114 Node[0] Epoch[20] Batch [160-180]	Speed: 54068.49 samples/sec	accuracy=nan
2021-05-21 10:33:47,339 Node[0] Epoch[20] Batch [180-200]	Speed: 55233.95 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611228188, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 21}}
2021-05-21 10:33:48,189 Node[0] Epoch[20] Time cost=23.112
:::MLLOG {"namespace": "", "time_ms": 1621611228189, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55433.67735799174}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621611228189, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55433.67735799174, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611228189, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 22}}
2021-05-21 10:33:50,419 Node[0] Epoch[21] Batch [0-20]	Speed: 57883.46 samples/sec	accuracy=nan
2021-05-21 10:33:52,541 Node[0] Epoch[21] Batch [20-40]	Speed: 57912.37 samples/sec	accuracy=nan
2021-05-21 10:33:54,718 Node[0] Epoch[21] Batch [40-60]	Speed: 56433.36 samples/sec	accuracy=nan
2021-05-21 10:33:56,960 Node[0] Epoch[21] Batch [60-80]	Speed: 54830.78 samples/sec	accuracy=nan
2021-05-21 10:33:59,228 Node[0] Epoch[21] Batch [80-100]	Speed: 54180.71 samples/sec	accuracy=nan
2021-05-21 10:34:01,500 Node[0] Epoch[21] Batch [100-120]	Speed: 54086.93 samples/sec	accuracy=nan
2021-05-21 10:34:03,776 Node[0] Epoch[21] Batch [120-140]	Speed: 54001.71 samples/sec	accuracy=nan
2021-05-21 10:34:06,051 Node[0] Epoch[21] Batch [140-160]	Speed: 54017.87 samples/sec	accuracy=nan
2021-05-21 10:34:08,337 Node[0] Epoch[21] Batch [160-180]	Speed: 53738.71 samples/sec	accuracy=nan
2021-05-21 10:34:10,552 Node[0] Epoch[21] Batch [180-200]	Speed: 55477.30 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611251403, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 22}}
2021-05-21 10:34:11,404 Node[0] Epoch[21] Time cost=23.215
:::MLLOG {"namespace": "", "time_ms": 1621611251404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55187.73952264304}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621611251404, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55187.73952264304, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611251404, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 23}}
2021-05-21 10:34:13,634 Node[0] Epoch[22] Batch [0-20]	Speed: 57847.81 samples/sec	accuracy=nan
2021-05-21 10:34:15,761 Node[0] Epoch[22] Batch [20-40]	Speed: 57801.76 samples/sec	accuracy=nan
2021-05-21 10:34:17,943 Node[0] Epoch[22] Batch [40-60]	Speed: 56310.21 samples/sec	accuracy=nan
2021-05-21 10:34:20,191 Node[0] Epoch[22] Batch [60-80]	Speed: 54656.28 samples/sec	accuracy=nan
2021-05-21 10:34:22,464 Node[0] Epoch[22] Batch [80-100]	Speed: 54065.69 samples/sec	accuracy=nan
2021-05-21 10:34:24,737 Node[0] Epoch[22] Batch [100-120]	Speed: 54070.10 samples/sec	accuracy=nan
2021-05-21 10:34:27,008 Node[0] Epoch[22] Batch [120-140]	Speed: 54113.01 samples/sec	accuracy=nan
2021-05-21 10:34:29,263 Node[0] Epoch[22] Batch [140-160]	Speed: 54507.02 samples/sec	accuracy=nan
2021-05-21 10:34:31,536 Node[0] Epoch[22] Batch [160-180]	Speed: 54057.99 samples/sec	accuracy=nan
2021-05-21 10:34:33,753 Node[0] Epoch[22] Batch [180-200]	Speed: 55450.71 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611274602, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 23}}
2021-05-21 10:34:34,603 Node[0] Epoch[22] Time cost=23.199
:::MLLOG {"namespace": "", "time_ms": 1621611274603, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55226.251187690876}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621611274603, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55226.251187690876, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611274603, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 24}}
2021-05-21 10:34:36,834 Node[0] Epoch[23] Batch [0-20]	Speed: 57839.85 samples/sec	accuracy=nan
2021-05-21 10:34:38,962 Node[0] Epoch[23] Batch [20-40]	Speed: 57768.40 samples/sec	accuracy=nan
2021-05-21 10:34:41,144 Node[0] Epoch[23] Batch [40-60]	Speed: 56317.22 samples/sec	accuracy=nan
2021-05-21 10:34:43,385 Node[0] Epoch[23] Batch [60-80]	Speed: 54835.67 samples/sec	accuracy=nan
2021-05-21 10:34:45,652 Node[0] Epoch[23] Batch [80-100]	Speed: 54204.81 samples/sec	accuracy=nan
2021-05-21 10:34:47,915 Node[0] Epoch[23] Batch [100-120]	Speed: 54302.02 samples/sec	accuracy=nan
2021-05-21 10:34:50,182 Node[0] Epoch[23] Batch [120-140]	Speed: 54203.80 samples/sec	accuracy=nan
2021-05-21 10:34:52,465 Node[0] Epoch[23] Batch [140-160]	Speed: 53850.54 samples/sec	accuracy=nan
2021-05-21 10:34:54,740 Node[0] Epoch[23] Batch [160-180]	Speed: 54002.86 samples/sec	accuracy=nan
2021-05-21 10:34:56,946 Node[0] Epoch[23] Batch [180-200]	Speed: 55704.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611297796, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 24}}
2021-05-21 10:34:57,797 Node[0] Epoch[23] Time cost=23.193
:::MLLOG {"namespace": "", "time_ms": 1621611297797, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55238.296682338034}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621611297797, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55238.296682338034, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611297899, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 24}}
2021-05-21 10:34:58,167 Node[0] Epoch[23] Validation-accuracy=0.686030
2021-05-21 10:34:58,167 Node[0] Epoch[23] Validation-correct-count=1429.000000
2021-05-21 10:34:58,167 Node[0] Epoch[23] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611298174, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621611298174, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68068, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621611298174, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621611298174, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 25, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611298174, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 25}}
2021-05-21 10:35:00,345 Node[0] Epoch[24] Batch [0-20]	Speed: 56808.46 samples/sec	accuracy=nan
2021-05-21 10:35:02,480 Node[0] Epoch[24] Batch [20-40]	Speed: 57571.55 samples/sec	accuracy=nan
2021-05-21 10:35:04,661 Node[0] Epoch[24] Batch [40-60]	Speed: 56329.88 samples/sec	accuracy=nan
2021-05-21 10:35:06,906 Node[0] Epoch[24] Batch [60-80]	Speed: 54741.75 samples/sec	accuracy=nan
2021-05-21 10:35:09,173 Node[0] Epoch[24] Batch [80-100]	Speed: 54216.86 samples/sec	accuracy=nan
2021-05-21 10:35:11,429 Node[0] Epoch[24] Batch [100-120]	Speed: 54466.80 samples/sec	accuracy=nan
2021-05-21 10:35:13,699 Node[0] Epoch[24] Batch [120-140]	Speed: 54141.47 samples/sec	accuracy=nan
2021-05-21 10:35:15,970 Node[0] Epoch[24] Batch [140-160]	Speed: 54114.35 samples/sec	accuracy=nan
2021-05-21 10:35:18,265 Node[0] Epoch[24] Batch [160-180]	Speed: 53540.71 samples/sec	accuracy=nan
2021-05-21 10:35:20,476 Node[0] Epoch[24] Batch [180-200]	Speed: 55587.47 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611321328, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 25}}
2021-05-21 10:35:21,329 Node[0] Epoch[24] Time cost=23.155
:::MLLOG {"namespace": "", "time_ms": 1621611321329, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55331.214399713695}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621611321329, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55331.214399713695, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611321329, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 26}}
2021-05-21 10:35:23,567 Node[0] Epoch[25] Batch [0-20]	Speed: 57632.79 samples/sec	accuracy=nan
2021-05-21 10:35:25,698 Node[0] Epoch[25] Batch [20-40]	Speed: 57675.97 samples/sec	accuracy=nan
2021-05-21 10:35:27,880 Node[0] Epoch[25] Batch [40-60]	Speed: 56311.90 samples/sec	accuracy=nan
2021-05-21 10:35:30,126 Node[0] Epoch[25] Batch [60-80]	Speed: 54732.27 samples/sec	accuracy=nan
2021-05-21 10:35:32,387 Node[0] Epoch[25] Batch [80-100]	Speed: 54351.01 samples/sec	accuracy=nan
2021-05-21 10:35:34,660 Node[0] Epoch[25] Batch [100-120]	Speed: 54046.87 samples/sec	accuracy=nan
2021-05-21 10:35:36,934 Node[0] Epoch[25] Batch [120-140]	Speed: 54051.02 samples/sec	accuracy=nan
2021-05-21 10:35:39,203 Node[0] Epoch[25] Batch [140-160]	Speed: 54160.21 samples/sec	accuracy=nan
2021-05-21 10:35:41,472 Node[0] Epoch[25] Batch [160-180]	Speed: 54154.60 samples/sec	accuracy=nan
2021-05-21 10:35:43,670 Node[0] Epoch[25] Batch [180-200]	Speed: 55928.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611344523, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 26}}
2021-05-21 10:35:44,523 Node[0] Epoch[25] Time cost=23.194
:::MLLOG {"namespace": "", "time_ms": 1621611344523, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55237.48243254324}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621611344523, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55237.48243254324, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611344523, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 27}}
2021-05-21 10:35:46,762 Node[0] Epoch[26] Batch [0-20]	Speed: 57666.24 samples/sec	accuracy=nan
2021-05-21 10:35:48,896 Node[0] Epoch[26] Batch [20-40]	Speed: 57586.15 samples/sec	accuracy=nan
2021-05-21 10:35:51,085 Node[0] Epoch[26] Batch [40-60]	Speed: 56125.34 samples/sec	accuracy=nan
2021-05-21 10:35:53,330 Node[0] Epoch[26] Batch [60-80]	Speed: 54744.27 samples/sec	accuracy=nan
2021-05-21 10:35:55,599 Node[0] Epoch[26] Batch [80-100]	Speed: 54168.06 samples/sec	accuracy=nan
2021-05-21 10:35:57,864 Node[0] Epoch[26] Batch [100-120]	Speed: 54242.95 samples/sec	accuracy=nan
2021-05-21 10:36:00,133 Node[0] Epoch[26] Batch [120-140]	Speed: 54173.11 samples/sec	accuracy=nan
2021-05-21 10:36:02,401 Node[0] Epoch[26] Batch [140-160]	Speed: 54179.91 samples/sec	accuracy=nan
2021-05-21 10:36:04,677 Node[0] Epoch[26] Batch [160-180]	Speed: 53998.17 samples/sec	accuracy=nan
2021-05-21 10:36:06,878 Node[0] Epoch[26] Batch [180-200]	Speed: 55831.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611367729, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 27}}
2021-05-21 10:36:07,730 Node[0] Epoch[26] Time cost=23.206
:::MLLOG {"namespace": "", "time_ms": 1621611367730, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55208.13720638233}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621611367730, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55208.13720638233, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611367730, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 28}}
2021-05-21 10:36:09,967 Node[0] Epoch[27] Batch [0-20]	Speed: 57665.69 samples/sec	accuracy=nan
2021-05-21 10:36:12,101 Node[0] Epoch[27] Batch [20-40]	Speed: 57597.30 samples/sec	accuracy=nan
2021-05-21 10:36:14,288 Node[0] Epoch[27] Batch [40-60]	Speed: 56196.03 samples/sec	accuracy=nan
2021-05-21 10:36:16,543 Node[0] Epoch[27] Batch [60-80]	Speed: 54496.75 samples/sec	accuracy=nan
2021-05-21 10:36:18,816 Node[0] Epoch[27] Batch [80-100]	Speed: 54055.59 samples/sec	accuracy=nan
2021-05-21 10:36:21,094 Node[0] Epoch[27] Batch [100-120]	Speed: 53942.68 samples/sec	accuracy=nan
2021-05-21 10:36:23,374 Node[0] Epoch[27] Batch [120-140]	Speed: 53915.95 samples/sec	accuracy=nan
2021-05-21 10:36:25,660 Node[0] Epoch[27] Batch [140-160]	Speed: 53742.65 samples/sec	accuracy=nan
2021-05-21 10:36:27,949 Node[0] Epoch[27] Batch [160-180]	Speed: 53688.28 samples/sec	accuracy=nan
2021-05-21 10:36:30,149 Node[0] Epoch[27] Batch [180-200]	Speed: 55865.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611391001, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 28}}
2021-05-21 10:36:31,002 Node[0] Epoch[27] Time cost=23.272
:::MLLOG {"namespace": "", "time_ms": 1621611391002, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55050.8833850999}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621611391003, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55050.8833850999, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611391106, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 28}}
2021-05-21 10:36:31,370 Node[0] Epoch[27] Validation-accuracy=0.711474
2021-05-21 10:36:31,370 Node[0] Epoch[27] Validation-correct-count=1482.000000
2021-05-21 10:36:31,370 Node[0] Epoch[27] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611391389, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621611391390, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.71284, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621611391390, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621611391390, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 29, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611391390, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 29}}
2021-05-21 10:36:33,550 Node[0] Epoch[28] Batch [0-20]	Speed: 57129.73 samples/sec	accuracy=nan
2021-05-21 10:36:35,678 Node[0] Epoch[28] Batch [20-40]	Speed: 57751.51 samples/sec	accuracy=nan
2021-05-21 10:36:37,871 Node[0] Epoch[28] Batch [40-60]	Speed: 56024.52 samples/sec	accuracy=nan
2021-05-21 10:36:40,112 Node[0] Epoch[28] Batch [60-80]	Speed: 54842.96 samples/sec	accuracy=nan
2021-05-21 10:36:42,384 Node[0] Epoch[28] Batch [80-100]	Speed: 54082.32 samples/sec	accuracy=nan
2021-05-21 10:36:44,653 Node[0] Epoch[28] Batch [100-120]	Speed: 54170.10 samples/sec	accuracy=nan
2021-05-21 10:36:46,923 Node[0] Epoch[28] Batch [120-140]	Speed: 54127.96 samples/sec	accuracy=nan
2021-05-21 10:36:49,188 Node[0] Epoch[28] Batch [140-160]	Speed: 54261.94 samples/sec	accuracy=nan
2021-05-21 10:36:51,470 Node[0] Epoch[28] Batch [160-180]	Speed: 53852.99 samples/sec	accuracy=nan
2021-05-21 10:36:53,664 Node[0] Epoch[28] Batch [180-200]	Speed: 56008.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611414513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 29}}
2021-05-21 10:36:54,514 Node[0] Epoch[28] Time cost=23.124
:::MLLOG {"namespace": "", "time_ms": 1621611414514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55404.66375626049}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621611414514, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55404.66375626049, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611414514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 30}}
2021-05-21 10:36:56,746 Node[0] Epoch[29] Batch [0-20]	Speed: 57843.42 samples/sec	accuracy=nan
2021-05-21 10:36:58,871 Node[0] Epoch[29] Batch [20-40]	Speed: 57812.96 samples/sec	accuracy=nan
2021-05-21 10:37:01,063 Node[0] Epoch[29] Batch [40-60]	Speed: 56070.08 samples/sec	accuracy=nan
2021-05-21 10:37:03,303 Node[0] Epoch[29] Batch [60-80]	Speed: 54861.42 samples/sec	accuracy=nan
2021-05-21 10:37:05,571 Node[0] Epoch[29] Batch [80-100]	Speed: 54175.97 samples/sec	accuracy=nan
2021-05-21 10:37:07,840 Node[0] Epoch[29] Batch [100-120]	Speed: 54178.25 samples/sec	accuracy=nan
2021-05-21 10:37:10,109 Node[0] Epoch[29] Batch [120-140]	Speed: 54148.07 samples/sec	accuracy=nan
2021-05-21 10:37:12,380 Node[0] Epoch[29] Batch [140-160]	Speed: 54131.45 samples/sec	accuracy=nan
2021-05-21 10:37:14,649 Node[0] Epoch[29] Batch [160-180]	Speed: 54151.27 samples/sec	accuracy=nan
2021-05-21 10:37:16,840 Node[0] Epoch[29] Batch [180-200]	Speed: 56084.51 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611437691, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 30}}
2021-05-21 10:37:17,692 Node[0] Epoch[29] Time cost=23.178
:::MLLOG {"namespace": "", "time_ms": 1621611437692, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55275.48588350424}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621611437692, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55275.48588350424, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611437692, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 31}}
2021-05-21 10:37:19,922 Node[0] Epoch[30] Batch [0-20]	Speed: 57855.34 samples/sec	accuracy=nan
2021-05-21 10:37:22,052 Node[0] Epoch[30] Batch [20-40]	Speed: 57695.37 samples/sec	accuracy=nan
2021-05-21 10:37:24,245 Node[0] Epoch[30] Batch [40-60]	Speed: 56055.81 samples/sec	accuracy=nan
2021-05-21 10:37:26,498 Node[0] Epoch[30] Batch [60-80]	Speed: 54535.22 samples/sec	accuracy=nan
2021-05-21 10:37:28,774 Node[0] Epoch[30] Batch [80-100]	Speed: 54008.02 samples/sec	accuracy=nan
2021-05-21 10:37:31,045 Node[0] Epoch[30] Batch [100-120]	Speed: 54110.65 samples/sec	accuracy=nan
2021-05-21 10:37:33,321 Node[0] Epoch[30] Batch [120-140]	Speed: 53981.03 samples/sec	accuracy=nan
2021-05-21 10:37:35,595 Node[0] Epoch[30] Batch [140-160]	Speed: 54052.88 samples/sec	accuracy=nan
2021-05-21 10:37:37,864 Node[0] Epoch[30] Batch [160-180]	Speed: 54160.35 samples/sec	accuracy=nan
2021-05-21 10:37:40,056 Node[0] Epoch[30] Batch [180-200]	Speed: 56058.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611460905, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 31}}
2021-05-21 10:37:40,906 Node[0] Epoch[30] Time cost=23.213
:::MLLOG {"namespace": "", "time_ms": 1621611460906, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55190.6382214881}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621611460906, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55190.6382214881, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611460906, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 32}}
2021-05-21 10:37:43,138 Node[0] Epoch[31] Batch [0-20]	Speed: 57817.27 samples/sec	accuracy=nan
2021-05-21 10:37:45,267 Node[0] Epoch[31] Batch [20-40]	Speed: 57723.84 samples/sec	accuracy=nan
2021-05-21 10:37:47,464 Node[0] Epoch[31] Batch [40-60]	Speed: 55936.56 samples/sec	accuracy=nan
2021-05-21 10:37:49,729 Node[0] Epoch[31] Batch [60-80]	Speed: 54253.05 samples/sec	accuracy=nan
2021-05-21 10:37:52,009 Node[0] Epoch[31] Batch [80-100]	Speed: 53903.89 samples/sec	accuracy=nan
2021-05-21 10:37:54,286 Node[0] Epoch[31] Batch [100-120]	Speed: 53955.86 samples/sec	accuracy=nan
2021-05-21 10:37:56,567 Node[0] Epoch[31] Batch [120-140]	Speed: 53883.55 samples/sec	accuracy=nan
2021-05-21 10:37:58,847 Node[0] Epoch[31] Batch [140-160]	Speed: 53890.95 samples/sec	accuracy=nan
2021-05-21 10:38:01,130 Node[0] Epoch[31] Batch [160-180]	Speed: 53826.74 samples/sec	accuracy=nan
2021-05-21 10:38:03,318 Node[0] Epoch[31] Batch [180-200]	Speed: 56167.48 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611484168, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 32}}
2021-05-21 10:38:04,168 Node[0] Epoch[31] Time cost=23.262
:::MLLOG {"namespace": "", "time_ms": 1621611484168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55076.12116680528}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621611484168, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55076.12116680528, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611484271, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 32}}
2021-05-21 10:38:04,599 Node[0] Epoch[31] Validation-accuracy=0.733557
2021-05-21 10:38:04,600 Node[0] Epoch[31] Validation-correct-count=1528.000000
2021-05-21 10:38:04,600 Node[0] Epoch[31] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611484620, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621611484620, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73334, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621611484620, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621611484620, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 33, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611484620, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 33}}
2021-05-21 10:38:06,780 Node[0] Epoch[32] Batch [0-20]	Speed: 57099.27 samples/sec	accuracy=nan
2021-05-21 10:38:08,916 Node[0] Epoch[32] Batch [20-40]	Speed: 57544.05 samples/sec	accuracy=nan
2021-05-21 10:38:11,118 Node[0] Epoch[32] Batch [40-60]	Speed: 55817.71 samples/sec	accuracy=nan
2021-05-21 10:38:13,381 Node[0] Epoch[32] Batch [60-80]	Speed: 54299.63 samples/sec	accuracy=nan
2021-05-21 10:38:15,660 Node[0] Epoch[32] Batch [80-100]	Speed: 53916.52 samples/sec	accuracy=nan
2021-05-21 10:38:17,938 Node[0] Epoch[32] Batch [100-120]	Speed: 53953.14 samples/sec	accuracy=nan
2021-05-21 10:38:20,214 Node[0] Epoch[32] Batch [120-140]	Speed: 53989.55 samples/sec	accuracy=nan
2021-05-21 10:38:22,489 Node[0] Epoch[32] Batch [140-160]	Speed: 54017.80 samples/sec	accuracy=nan
2021-05-21 10:38:24,763 Node[0] Epoch[32] Batch [160-180]	Speed: 54037.78 samples/sec	accuracy=nan
2021-05-21 10:38:26,945 Node[0] Epoch[32] Batch [180-200]	Speed: 56317.60 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611507799, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 33}}
2021-05-21 10:38:27,800 Node[0] Epoch[32] Time cost=23.179
:::MLLOG {"namespace": "", "time_ms": 1621611507800, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55272.03589256616}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621611507800, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55272.03589256616, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611507800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 34}}
2021-05-21 10:38:30,038 Node[0] Epoch[33] Batch [0-20]	Speed: 57654.62 samples/sec	accuracy=nan
2021-05-21 10:38:32,174 Node[0] Epoch[33] Batch [20-40]	Speed: 57536.69 samples/sec	accuracy=nan
2021-05-21 10:38:34,377 Node[0] Epoch[33] Batch [40-60]	Speed: 55784.66 samples/sec	accuracy=nan
2021-05-21 10:38:36,637 Node[0] Epoch[33] Batch [60-80]	Speed: 54367.30 samples/sec	accuracy=nan
2021-05-21 10:38:38,915 Node[0] Epoch[33] Batch [80-100]	Speed: 53960.07 samples/sec	accuracy=nan
2021-05-21 10:38:41,192 Node[0] Epoch[33] Batch [100-120]	Speed: 53980.13 samples/sec	accuracy=nan
2021-05-21 10:38:43,456 Node[0] Epoch[33] Batch [120-140]	Speed: 54260.51 samples/sec	accuracy=nan
2021-05-21 10:38:45,729 Node[0] Epoch[33] Batch [140-160]	Speed: 54068.25 samples/sec	accuracy=nan
2021-05-21 10:38:48,005 Node[0] Epoch[33] Batch [160-180]	Speed: 53994.30 samples/sec	accuracy=nan
2021-05-21 10:38:50,179 Node[0] Epoch[33] Batch [180-200]	Speed: 56529.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611531031, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 34}}
2021-05-21 10:38:51,031 Node[0] Epoch[33] Time cost=23.231
:::MLLOG {"namespace": "", "time_ms": 1621611531031, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55148.63743490629}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621611531032, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55148.63743490629, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611531032, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 35}}
2021-05-21 10:38:53,270 Node[0] Epoch[34] Batch [0-20]	Speed: 57640.52 samples/sec	accuracy=nan
2021-05-21 10:38:55,412 Node[0] Epoch[34] Batch [20-40]	Speed: 57390.46 samples/sec	accuracy=nan
2021-05-21 10:38:57,617 Node[0] Epoch[34] Batch [40-60]	Speed: 55721.51 samples/sec	accuracy=nan
2021-05-21 10:38:59,869 Node[0] Epoch[34] Batch [60-80]	Speed: 54568.34 samples/sec	accuracy=nan
2021-05-21 10:39:02,144 Node[0] Epoch[34] Batch [80-100]	Speed: 54018.26 samples/sec	accuracy=nan
2021-05-21 10:39:04,418 Node[0] Epoch[34] Batch [100-120]	Speed: 54060.97 samples/sec	accuracy=nan
2021-05-21 10:39:06,678 Node[0] Epoch[34] Batch [120-140]	Speed: 54378.00 samples/sec	accuracy=nan
2021-05-21 10:39:08,939 Node[0] Epoch[34] Batch [140-160]	Speed: 54345.52 samples/sec	accuracy=nan
2021-05-21 10:39:11,205 Node[0] Epoch[34] Batch [160-180]	Speed: 54228.83 samples/sec	accuracy=nan
2021-05-21 10:39:13,383 Node[0] Epoch[34] Batch [180-200]	Speed: 56412.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611554236, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 35}}
2021-05-21 10:39:14,237 Node[0] Epoch[34] Time cost=23.205
:::MLLOG {"namespace": "", "time_ms": 1621611554237, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55210.702229445924}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621611554237, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55210.702229445924, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611554237, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 36}}
2021-05-21 10:39:16,478 Node[0] Epoch[35] Batch [0-20]	Speed: 57589.71 samples/sec	accuracy=nan
2021-05-21 10:39:18,618 Node[0] Epoch[35] Batch [20-40]	Speed: 57438.67 samples/sec	accuracy=nan
2021-05-21 10:39:20,825 Node[0] Epoch[35] Batch [40-60]	Speed: 55684.47 samples/sec	accuracy=nan
2021-05-21 10:39:23,087 Node[0] Epoch[35] Batch [60-80]	Speed: 54317.75 samples/sec	accuracy=nan
2021-05-21 10:39:25,345 Node[0] Epoch[35] Batch [80-100]	Speed: 54425.12 samples/sec	accuracy=nan
2021-05-21 10:39:27,615 Node[0] Epoch[35] Batch [100-120]	Speed: 54144.90 samples/sec	accuracy=nan
2021-05-21 10:39:29,885 Node[0] Epoch[35] Batch [120-140]	Speed: 54127.04 samples/sec	accuracy=nan
2021-05-21 10:39:32,144 Node[0] Epoch[35] Batch [140-160]	Speed: 54398.48 samples/sec	accuracy=nan
2021-05-21 10:39:34,423 Node[0] Epoch[35] Batch [160-180]	Speed: 53928.44 samples/sec	accuracy=nan
2021-05-21 10:39:36,591 Node[0] Epoch[35] Batch [180-200]	Speed: 56698.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611577442, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 36}}
2021-05-21 10:39:37,443 Node[0] Epoch[35] Time cost=23.205
:::MLLOG {"namespace": "", "time_ms": 1621611577443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55210.07541609083}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621611577443, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55210.07541609083, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611577545, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 36}}
2021-05-21 10:39:37,914 Node[0] Epoch[35] Validation-accuracy=0.757561
2021-05-21 10:39:37,914 Node[0] Epoch[35] Validation-correct-count=1578.000000
2021-05-21 10:39:37,914 Node[0] Epoch[35] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611577965, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621611577965, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621611577965, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621611577965, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 37, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611577965, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 37}}
2021-05-21 10:39:40,107 Node[0] Epoch[36] Batch [0-20]	Speed: 57571.03 samples/sec	accuracy=nan
2021-05-21 10:39:42,240 Node[0] Epoch[36] Batch [20-40]	Speed: 57592.49 samples/sec	accuracy=nan
2021-05-21 10:39:44,449 Node[0] Epoch[36] Batch [40-60]	Speed: 55645.48 samples/sec	accuracy=nan
2021-05-21 10:39:46,710 Node[0] Epoch[36] Batch [60-80]	Speed: 54344.54 samples/sec	accuracy=nan
2021-05-21 10:39:48,971 Node[0] Epoch[36] Batch [80-100]	Speed: 54366.18 samples/sec	accuracy=nan
2021-05-21 10:39:51,243 Node[0] Epoch[36] Batch [100-120]	Speed: 54086.50 samples/sec	accuracy=nan
2021-05-21 10:39:53,506 Node[0] Epoch[36] Batch [120-140]	Speed: 54298.58 samples/sec	accuracy=nan
2021-05-21 10:39:55,777 Node[0] Epoch[36] Batch [140-160]	Speed: 54107.14 samples/sec	accuracy=nan
2021-05-21 10:39:58,052 Node[0] Epoch[36] Batch [160-180]	Speed: 54018.96 samples/sec	accuracy=nan
2021-05-21 10:40:00,232 Node[0] Epoch[36] Batch [180-200]	Speed: 56383.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611601082, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 37}}
2021-05-21 10:40:01,083 Node[0] Epoch[36] Time cost=23.118
:::MLLOG {"namespace": "", "time_ms": 1621611601083, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55419.08588552619}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621611601084, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55419.08588552619, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611601084, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 38}}
2021-05-21 10:40:03,313 Node[0] Epoch[37] Batch [0-20]	Speed: 57876.69 samples/sec	accuracy=nan
2021-05-21 10:40:05,449 Node[0] Epoch[37] Batch [20-40]	Speed: 57537.81 samples/sec	accuracy=nan
2021-05-21 10:40:07,651 Node[0] Epoch[37] Batch [40-60]	Speed: 55800.88 samples/sec	accuracy=nan
2021-05-21 10:40:09,900 Node[0] Epoch[37] Batch [60-80]	Speed: 54640.71 samples/sec	accuracy=nan
2021-05-21 10:40:12,161 Node[0] Epoch[37] Batch [80-100]	Speed: 54370.94 samples/sec	accuracy=nan
2021-05-21 10:40:14,430 Node[0] Epoch[37] Batch [100-120]	Speed: 54148.74 samples/sec	accuracy=nan
2021-05-21 10:40:16,690 Node[0] Epoch[37] Batch [120-140]	Speed: 54375.02 samples/sec	accuracy=nan
2021-05-21 10:40:18,955 Node[0] Epoch[37] Batch [140-160]	Speed: 54256.06 samples/sec	accuracy=nan
2021-05-21 10:40:21,235 Node[0] Epoch[37] Batch [160-180]	Speed: 53898.31 samples/sec	accuracy=nan
2021-05-21 10:40:23,396 Node[0] Epoch[37] Batch [180-200]	Speed: 56868.57 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611624247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 38}}
2021-05-21 10:40:24,247 Node[0] Epoch[37] Time cost=23.163
:::MLLOG {"namespace": "", "time_ms": 1621611624247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55310.217860281875}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621611624247, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55310.217860281875, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611624247, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 39}}
2021-05-21 10:40:26,478 Node[0] Epoch[38] Batch [0-20]	Speed: 57829.79 samples/sec	accuracy=nan
2021-05-21 10:40:28,615 Node[0] Epoch[38] Batch [20-40]	Speed: 57506.76 samples/sec	accuracy=nan
2021-05-21 10:40:30,821 Node[0] Epoch[38] Batch [40-60]	Speed: 55724.57 samples/sec	accuracy=nan
2021-05-21 10:40:33,087 Node[0] Epoch[38] Batch [60-80]	Speed: 54221.35 samples/sec	accuracy=nan
2021-05-21 10:40:35,349 Node[0] Epoch[38] Batch [80-100]	Speed: 54327.69 samples/sec	accuracy=nan
2021-05-21 10:40:37,620 Node[0] Epoch[38] Batch [100-120]	Speed: 54126.86 samples/sec	accuracy=nan
2021-05-21 10:40:39,889 Node[0] Epoch[38] Batch [120-140]	Speed: 54142.37 samples/sec	accuracy=nan
2021-05-21 10:40:42,144 Node[0] Epoch[38] Batch [140-160]	Speed: 54499.39 samples/sec	accuracy=nan
2021-05-21 10:40:44,412 Node[0] Epoch[38] Batch [160-180]	Speed: 54200.93 samples/sec	accuracy=nan
2021-05-21 10:40:46,564 Node[0] Epoch[38] Batch [180-200]	Speed: 57089.83 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611647415, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 39}}
2021-05-21 10:40:47,416 Node[0] Epoch[38] Time cost=23.168
:::MLLOG {"namespace": "", "time_ms": 1621611647416, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55298.590540092904}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621611647416, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55298.590540092904, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611647416, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 40}}
2021-05-21 10:40:49,648 Node[0] Epoch[39] Batch [0-20]	Speed: 57807.16 samples/sec	accuracy=nan
2021-05-21 10:40:51,784 Node[0] Epoch[39] Batch [20-40]	Speed: 57538.55 samples/sec	accuracy=nan
2021-05-21 10:40:53,989 Node[0] Epoch[39] Batch [40-60]	Speed: 55740.49 samples/sec	accuracy=nan
2021-05-21 10:40:56,251 Node[0] Epoch[39] Batch [60-80]	Speed: 54317.54 samples/sec	accuracy=nan
2021-05-21 10:40:58,527 Node[0] Epoch[39] Batch [80-100]	Speed: 54004.14 samples/sec	accuracy=nan
2021-05-21 10:41:00,793 Node[0] Epoch[39] Batch [100-120]	Speed: 54236.76 samples/sec	accuracy=nan
2021-05-21 10:41:03,058 Node[0] Epoch[39] Batch [120-140]	Speed: 54233.80 samples/sec	accuracy=nan
2021-05-21 10:41:05,332 Node[0] Epoch[39] Batch [140-160]	Speed: 54050.22 samples/sec	accuracy=nan
2021-05-21 10:41:07,612 Node[0] Epoch[39] Batch [160-180]	Speed: 53901.68 samples/sec	accuracy=nan
2021-05-21 10:41:09,768 Node[0] Epoch[39] Batch [180-200]	Speed: 56989.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611670618, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 40}}
2021-05-21 10:41:10,619 Node[0] Epoch[39] Time cost=23.203
:::MLLOG {"namespace": "", "time_ms": 1621611670619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55215.81086350156}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621611670619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55215.81086350156, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611670721, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 40}}
2021-05-21 10:41:11,112 Node[0] Epoch[39] Validation-accuracy=0.770523
2021-05-21 10:41:11,112 Node[0] Epoch[39] Validation-correct-count=1605.000000
2021-05-21 10:41:11,112 Node[0] Epoch[39] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611671173, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621611671173, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76016, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621611671174, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621611671174, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "status": "success"}}
ENDING TIMING RUN AT 2021-05-21 10:41:18 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:18 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:18 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:18 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1007,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1007,root,2021-05-21 10:24:32 AM
RESULT,IMAGE_CLASSIFICATION,,1007,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1007,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:33 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 10:24:34 AM
ENDING TIMING RUN AT 2021-05-21 10:41:19 AM
RESULT,IMAGE_CLASSIFICATION,,1007,root,2021-05-21 10:24:32 AM
ENDING TIMING RUN AT 2021-05-21 10:41:20 AM
RESULT,IMAGE_CLASSIFICATION,,1006,root,2021-05-21 10:24:34 AM
