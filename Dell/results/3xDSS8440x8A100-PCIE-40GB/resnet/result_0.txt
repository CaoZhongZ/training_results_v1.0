+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node070 node071 node072 '
+ echo 'hosts=node070 node071 node072 '
hosts=node070 node071 node072 
+ for node in $hosts
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1621609574545, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621609574551, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621609574551, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621609574552, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621609574552, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "3xDSS8440x8A100-PCIE-40GB", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 87}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node070 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node070
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621609582963, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node071 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node071
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621609594746, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node072 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node072
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621609610409, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ export SEED=14320
+ SEED=14320
+ MPIRUN='mpirun --allow-run-as-root --bind-to none -report-bindings -np 24'
+ mpirun --allow-run-as-root --bind-to none -report-bindings -np 24 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif bash ./run_and_time_multi.sh
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:00 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
STARTING TIMING RUN AT 2021-05-21 10:07:01 AM
running benchmark
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:07:02 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 14320 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node070:1032328] MCW rank 4 is not bound (or bound to all available processors)
[node070:1032327] MCW rank 5 is not bound (or bound to all available processors)
[node070:1032372] MCW rank 1 is not bound (or bound to all available processors)
[node070:1032332] MCW rank 7 is not bound (or bound to all available processors)
[node070:1032210] MCW rank 0 is not bound (or bound to all available processors)
[node070:1032234] MCW rank 6 is not bound (or bound to all available processors)
[node070:1032331] MCW rank 2 is not bound (or bound to all available processors)
[node070:1032329] MCW rank 3 is not bound (or bound to all available processors)
[node071:1699652] MCW rank 14 is not bound (or bound to all available processors)
[node071:1699656] MCW rank 11 is not bound (or bound to all available processors)
[node071:1699678] MCW rank 10 is not bound (or bound to all available processors)
[node071:1699654] MCW rank 9 is not bound (or bound to all available processors)
[node071:1699655] MCW rank 12 is not bound (or bound to all available processors)
[node071:1699650] MCW rank 8 is not bound (or bound to all available processors)
[node071:1699653] MCW rank 15 is not bound (or bound to all available processors)
[node071:1699651] MCW rank 13 is not bound (or bound to all available processors)
[node072:606599] MCW rank 23 is not bound (or bound to all available processors)
[node072:606600] MCW rank 20 is not bound (or bound to all available processors)
[node072:606601] MCW rank 17 is not bound (or bound to all available processors)
[node072:606603] MCW rank 21 is not bound (or bound to all available processors)
[node072:606502] MCW rank 19 is not bound (or bound to all available processors)
[node072:606602] MCW rank 18 is not bound (or bound to all available processors)
[node072:606626] MCW rank 16 is not bound (or bound to all available processors)
[node072:606604] MCW rank 22 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627658, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627660, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627659, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621609627659, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:30] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621609651002, "event_type": "POINT_IN_TIME", "key": "seed", "value": 14320, "metadata": {"file": "train_imagenet.py", "lineno": 178}}
[10:07:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:07:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.9.8+cuda11.3
:::MLLOG {"namespace": "", "time_ms": 1621609659661, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 256, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 286}}
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621609665784, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665785, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 82, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665786, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665787, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665788, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665789, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665798, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665798, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665798, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665798, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665799, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665799, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665799, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665799, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665800, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665800, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665800, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665800, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665801, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665801, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665801, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665801, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665802, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665802, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665802, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665802, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665803, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665803, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665803, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665803, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665804, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665804, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665804, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665805, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665805, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665805, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665805, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665806, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665806, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665806, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665806, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665807, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665807, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665807, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665808, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665808, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665808, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665808, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665809, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665809, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665809, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665809, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665810, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665810, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665810, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665810, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665811, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665811, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665811, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665811, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665812, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665812, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665812, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665812, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665813, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665813, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665813, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665813, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665814, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665814, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665814, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665815, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665815, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665815, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665815, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665816, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665816, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665816, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665816, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665817, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665817, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665817, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665817, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665818, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665818, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665818, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665818, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665819, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665819, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665819, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665819, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665820, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665820, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665820, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665820, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665821, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665821, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665821, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665821, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665822, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665822, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665822, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665822, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665823, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665823, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665823, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665823, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665824, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665824, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665824, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665824, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665825, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665825, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665825, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665825, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621609665826, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv3_weight"}}
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:07:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,014 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33596, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,015 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62462, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,015 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25718, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,015 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48525, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,015 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61533, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621609668016, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34191, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37103, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63503, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53098, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33287, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23548, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44741, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53911, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40311, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41182, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27668, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11933, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54002, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34618, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,016 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35823, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36052, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53713, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57128, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:07:48,017 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23977, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621609668017, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 691}}
:::MLLOG {"namespace": "", "time_ms": 1621609668019, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 692}}
:::MLLOG {"namespace": "", "time_ms": 1621609668019, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 693}}
:::MLLOG {"namespace": "", "time_ms": 1621609668019, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 694}}
:::MLLOG {"namespace": "", "time_ms": 1621609668019, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1212}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1213}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1214}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1215}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 6144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1216}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1217}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1219}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1220}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1226}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1228}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1230}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1232}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.8, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1233}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1234}}
:::MLLOG {"namespace": "", "time_ms": 1621609668020, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 44, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1235}}
:::MLLOG {"namespace": "", "time_ms": 1621609684771, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1291}}
:::MLLOG {"namespace": "", "time_ms": 1621609684775, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 463}}
:::MLLOG {"namespace": "", "time_ms": 1621609685016, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 482}}
:::MLLOG {"namespace": "", "time_ms": 1621609685017, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 877, "first_epoch_num": 1, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609685017, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 1}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:08:07,870 Node[0] Epoch[0] Batch [0-20]	Speed: 48225.13 samples/sec	accuracy=nan
2021-05-21 10:08:10,145 Node[0] Epoch[0] Batch [20-40]	Speed: 54037.02 samples/sec	accuracy=nan
2021-05-21 10:08:12,440 Node[0] Epoch[0] Batch [40-60]	Speed: 53538.35 samples/sec	accuracy=nan
2021-05-21 10:08:14,708 Node[0] Epoch[0] Batch [60-80]	Speed: 54181.37 samples/sec	accuracy=nan
2021-05-21 10:08:16,972 Node[0] Epoch[0] Batch [80-100]	Speed: 54275.04 samples/sec	accuracy=nan
2021-05-21 10:08:19,236 Node[0] Epoch[0] Batch [100-120]	Speed: 54289.35 samples/sec	accuracy=nan
2021-05-21 10:08:21,485 Node[0] Epoch[0] Batch [120-140]	Speed: 54651.94 samples/sec	accuracy=nan
2021-05-21 10:08:23,737 Node[0] Epoch[0] Batch [140-160]	Speed: 54564.10 samples/sec	accuracy=nan
2021-05-21 10:08:26,042 Node[0] Epoch[0] Batch [160-180]	Speed: 53330.05 samples/sec	accuracy=nan
2021-05-21 10:08:28,293 Node[0] Epoch[0] Batch [180-200]	Speed: 54575.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609709162, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 1}}
2021-05-21 10:08:29,163 Node[0] Epoch[0] Time cost=24.146
:::MLLOG {"namespace": "", "time_ms": 1621609709163, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 53059.32120620252}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621609709163, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 53059.32120620252, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609709163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 2}}
2021-05-21 10:08:31,396 Node[0] Epoch[1] Batch [0-20]	Speed: 57792.12 samples/sec	accuracy=nan
2021-05-21 10:08:33,518 Node[0] Epoch[1] Batch [20-40]	Speed: 57909.56 samples/sec	accuracy=nan
2021-05-21 10:08:35,663 Node[0] Epoch[1] Batch [40-60]	Speed: 57286.70 samples/sec	accuracy=nan
2021-05-21 10:08:37,865 Node[0] Epoch[1] Batch [60-80]	Speed: 55820.63 samples/sec	accuracy=nan
2021-05-21 10:08:40,120 Node[0] Epoch[1] Batch [80-100]	Speed: 54494.71 samples/sec	accuracy=nan
2021-05-21 10:08:42,366 Node[0] Epoch[1] Batch [100-120]	Speed: 54729.04 samples/sec	accuracy=nan
2021-05-21 10:08:44,617 Node[0] Epoch[1] Batch [120-140]	Speed: 54619.87 samples/sec	accuracy=nan
2021-05-21 10:08:46,871 Node[0] Epoch[1] Batch [140-160]	Speed: 54522.18 samples/sec	accuracy=nan
2021-05-21 10:08:49,129 Node[0] Epoch[1] Batch [160-180]	Speed: 54439.35 samples/sec	accuracy=nan
2021-05-21 10:08:51,376 Node[0] Epoch[1] Batch [180-200]	Speed: 54694.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609732238, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 2}}
2021-05-21 10:08:52,239 Node[0] Epoch[1] Time cost=23.075
:::MLLOG {"namespace": "", "time_ms": 1621609732239, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55521.35281195725}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621609732239, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55521.35281195725, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609732239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 3}}
2021-05-21 10:08:54,474 Node[0] Epoch[2] Batch [0-20]	Speed: 57746.83 samples/sec	accuracy=nan
2021-05-21 10:08:56,602 Node[0] Epoch[2] Batch [20-40]	Speed: 57735.24 samples/sec	accuracy=nan
2021-05-21 10:08:58,749 Node[0] Epoch[2] Batch [40-60]	Speed: 57239.21 samples/sec	accuracy=nan
2021-05-21 10:09:00,961 Node[0] Epoch[2] Batch [60-80]	Speed: 55551.29 samples/sec	accuracy=nan
2021-05-21 10:09:03,214 Node[0] Epoch[2] Batch [80-100]	Speed: 54546.62 samples/sec	accuracy=nan
2021-05-21 10:09:05,468 Node[0] Epoch[2] Batch [100-120]	Speed: 54527.95 samples/sec	accuracy=nan
2021-05-21 10:09:07,713 Node[0] Epoch[2] Batch [120-140]	Speed: 54739.95 samples/sec	accuracy=nan
2021-05-21 10:09:09,961 Node[0] Epoch[2] Batch [140-160]	Speed: 54672.73 samples/sec	accuracy=nan
2021-05-21 10:09:12,222 Node[0] Epoch[2] Batch [160-180]	Speed: 54363.15 samples/sec	accuracy=nan
2021-05-21 10:09:14,465 Node[0] Epoch[2] Batch [180-200]	Speed: 54784.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609755323, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 3}}
2021-05-21 10:09:15,325 Node[0] Epoch[2] Time cost=23.086
:::MLLOG {"namespace": "", "time_ms": 1621609755325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55496.02581641534}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621609755325, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55496.02581641534, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609755325, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 4}}
2021-05-21 10:09:17,558 Node[0] Epoch[3] Batch [0-20]	Speed: 57776.35 samples/sec	accuracy=nan
2021-05-21 10:09:19,683 Node[0] Epoch[3] Batch [20-40]	Speed: 57821.41 samples/sec	accuracy=nan
2021-05-21 10:09:21,832 Node[0] Epoch[3] Batch [40-60]	Speed: 57193.26 samples/sec	accuracy=nan
2021-05-21 10:09:24,041 Node[0] Epoch[3] Batch [60-80]	Speed: 55625.87 samples/sec	accuracy=nan
2021-05-21 10:09:26,313 Node[0] Epoch[3] Batch [80-100]	Speed: 54096.34 samples/sec	accuracy=nan
2021-05-21 10:09:28,577 Node[0] Epoch[3] Batch [100-120]	Speed: 54275.10 samples/sec	accuracy=nan
2021-05-21 10:09:30,832 Node[0] Epoch[3] Batch [120-140]	Speed: 54504.60 samples/sec	accuracy=nan
2021-05-21 10:09:33,095 Node[0] Epoch[3] Batch [140-160]	Speed: 54310.11 samples/sec	accuracy=nan
2021-05-21 10:09:35,348 Node[0] Epoch[3] Batch [160-180]	Speed: 54542.55 samples/sec	accuracy=nan
2021-05-21 10:09:37,602 Node[0] Epoch[3] Batch [180-200]	Speed: 54529.16 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609778460, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 4}}
2021-05-21 10:09:38,461 Node[0] Epoch[3] Time cost=23.135
:::MLLOG {"namespace": "", "time_ms": 1621609778461, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55377.6795811391}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609778461, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55377.6795811391, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,561 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,562 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,563 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1621609778563, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 4}}
2021-05-21 10:09:38,563 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,563 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:09:38,563 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 10:09:39,193 Node[0] Epoch[3] Validation-accuracy=0.361978
2021-05-21 10:09:39,194 Node[0] Epoch[3] Validation-correct-count=754.000000
2021-05-21 10:09:39,194 Node[0] Epoch[3] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621609779194, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609779194, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.37416, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609779194, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621609779194, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 5, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609779194, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 5}}
2021-05-21 10:09:41,337 Node[0] Epoch[4] Batch [0-20]	Speed: 57603.84 samples/sec	accuracy=nan
2021-05-21 10:09:43,469 Node[0] Epoch[4] Batch [20-40]	Speed: 57639.28 samples/sec	accuracy=nan
2021-05-21 10:09:45,620 Node[0] Epoch[4] Batch [40-60]	Speed: 57109.79 samples/sec	accuracy=nan
2021-05-21 10:09:47,865 Node[0] Epoch[4] Batch [60-80]	Speed: 54745.03 samples/sec	accuracy=nan
2021-05-21 10:09:50,116 Node[0] Epoch[4] Batch [80-100]	Speed: 54613.21 samples/sec	accuracy=nan
2021-05-21 10:09:52,364 Node[0] Epoch[4] Batch [100-120]	Speed: 54657.90 samples/sec	accuracy=nan
2021-05-21 10:09:54,621 Node[0] Epoch[4] Batch [120-140]	Speed: 54458.43 samples/sec	accuracy=nan
2021-05-21 10:09:56,870 Node[0] Epoch[4] Batch [140-160]	Speed: 54640.95 samples/sec	accuracy=nan
2021-05-21 10:09:59,123 Node[0] Epoch[4] Batch [160-180]	Speed: 54545.51 samples/sec	accuracy=nan
2021-05-21 10:10:01,395 Node[0] Epoch[4] Batch [180-200]	Speed: 54088.83 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609802250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 5}}
2021-05-21 10:10:02,251 Node[0] Epoch[4] Time cost=23.057
:::MLLOG {"namespace": "", "time_ms": 1621609802251, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55566.38776124099}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621609802251, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55566.38776124099, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609802251, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 6}}
2021-05-21 10:10:04,492 Node[0] Epoch[5] Batch [0-20]	Speed: 57601.58 samples/sec	accuracy=nan
2021-05-21 10:10:06,623 Node[0] Epoch[5] Batch [20-40]	Speed: 57654.10 samples/sec	accuracy=nan
2021-05-21 10:10:08,782 Node[0] Epoch[5] Batch [40-60]	Speed: 56925.17 samples/sec	accuracy=nan
2021-05-21 10:10:10,991 Node[0] Epoch[5] Batch [60-80]	Speed: 55643.08 samples/sec	accuracy=nan
2021-05-21 10:10:13,236 Node[0] Epoch[5] Batch [80-100]	Speed: 54739.10 samples/sec	accuracy=nan
2021-05-21 10:10:15,497 Node[0] Epoch[5] Batch [100-120]	Speed: 54341.96 samples/sec	accuracy=nan
2021-05-21 10:10:17,764 Node[0] Epoch[5] Batch [120-140]	Speed: 54217.13 samples/sec	accuracy=nan
2021-05-21 10:10:20,017 Node[0] Epoch[5] Batch [140-160]	Speed: 54552.64 samples/sec	accuracy=nan
2021-05-21 10:10:22,274 Node[0] Epoch[5] Batch [160-180]	Speed: 54443.53 samples/sec	accuracy=nan
2021-05-21 10:10:24,529 Node[0] Epoch[5] Batch [180-200]	Speed: 54494.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609825389, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 6}}
2021-05-21 10:10:25,390 Node[0] Epoch[5] Time cost=23.139
:::MLLOG {"namespace": "", "time_ms": 1621609825390, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55369.279087869065}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621609825390, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55369.279087869065, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609825390, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 7}}
2021-05-21 10:10:27,629 Node[0] Epoch[6] Batch [0-20]	Speed: 57631.52 samples/sec	accuracy=nan
2021-05-21 10:10:29,762 Node[0] Epoch[6] Batch [20-40]	Speed: 57612.42 samples/sec	accuracy=nan
2021-05-21 10:10:31,917 Node[0] Epoch[6] Batch [40-60]	Speed: 57036.17 samples/sec	accuracy=nan
2021-05-21 10:10:34,134 Node[0] Epoch[6] Batch [60-80]	Speed: 55425.35 samples/sec	accuracy=nan
2021-05-21 10:10:36,391 Node[0] Epoch[6] Batch [80-100]	Speed: 54462.59 samples/sec	accuracy=nan
2021-05-21 10:10:38,644 Node[0] Epoch[6] Batch [100-120]	Speed: 54532.26 samples/sec	accuracy=nan
2021-05-21 10:10:40,894 Node[0] Epoch[6] Batch [120-140]	Speed: 54624.00 samples/sec	accuracy=nan
2021-05-21 10:10:43,157 Node[0] Epoch[6] Batch [140-160]	Speed: 54319.61 samples/sec	accuracy=nan
2021-05-21 10:10:45,416 Node[0] Epoch[6] Batch [160-180]	Speed: 54394.44 samples/sec	accuracy=nan
2021-05-21 10:10:47,672 Node[0] Epoch[6] Batch [180-200]	Speed: 54464.61 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609848525, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 7}}
2021-05-21 10:10:48,526 Node[0] Epoch[6] Time cost=23.135
:::MLLOG {"namespace": "", "time_ms": 1621609848526, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55376.92684502594}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621609848526, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55376.92684502594, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609848526, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 8}}
2021-05-21 10:10:50,762 Node[0] Epoch[7] Batch [0-20]	Speed: 57685.31 samples/sec	accuracy=nan
2021-05-21 10:10:52,894 Node[0] Epoch[7] Batch [20-40]	Speed: 57647.48 samples/sec	accuracy=nan
2021-05-21 10:10:55,053 Node[0] Epoch[7] Batch [40-60]	Speed: 56920.06 samples/sec	accuracy=nan
2021-05-21 10:10:57,263 Node[0] Epoch[7] Batch [60-80]	Speed: 55617.55 samples/sec	accuracy=nan
2021-05-21 10:10:59,523 Node[0] Epoch[7] Batch [80-100]	Speed: 54376.16 samples/sec	accuracy=nan
2021-05-21 10:11:01,773 Node[0] Epoch[7] Batch [100-120]	Speed: 54618.90 samples/sec	accuracy=nan
2021-05-21 10:11:04,035 Node[0] Epoch[7] Batch [120-140]	Speed: 54340.60 samples/sec	accuracy=nan
2021-05-21 10:11:06,306 Node[0] Epoch[7] Batch [140-160]	Speed: 54106.64 samples/sec	accuracy=nan
2021-05-21 10:11:08,559 Node[0] Epoch[7] Batch [160-180]	Speed: 54547.67 samples/sec	accuracy=nan
2021-05-21 10:11:10,827 Node[0] Epoch[7] Batch [180-200]	Speed: 54194.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609871678, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 8}}
2021-05-21 10:11:11,679 Node[0] Epoch[7] Time cost=23.152
:::MLLOG {"namespace": "", "time_ms": 1621609871679, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55336.835430485226}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621609871679, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55336.835430485226, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609871781, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 8}}
2021-05-21 10:11:12,128 Node[0] Epoch[7] Validation-accuracy=0.471435
2021-05-21 10:11:12,128 Node[0] Epoch[7] Validation-correct-count=982.000000
2021-05-21 10:11:12,128 Node[0] Epoch[7] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621609872159, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621609872159, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4716, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621609872160, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621609872160, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 9, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609872160, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 9}}
2021-05-21 10:11:14,300 Node[0] Epoch[8] Batch [0-20]	Speed: 57701.41 samples/sec	accuracy=nan
2021-05-21 10:11:16,427 Node[0] Epoch[8] Batch [20-40]	Speed: 57776.55 samples/sec	accuracy=nan
2021-05-21 10:11:18,583 Node[0] Epoch[8] Batch [40-60]	Speed: 56985.75 samples/sec	accuracy=nan
2021-05-21 10:11:20,803 Node[0] Epoch[8] Batch [60-80]	Speed: 55370.59 samples/sec	accuracy=nan
2021-05-21 10:11:23,062 Node[0] Epoch[8] Batch [80-100]	Speed: 54389.42 samples/sec	accuracy=nan
2021-05-21 10:11:25,323 Node[0] Epoch[8] Batch [100-120]	Speed: 54356.68 samples/sec	accuracy=nan
2021-05-21 10:11:27,580 Node[0] Epoch[8] Batch [120-140]	Speed: 54459.78 samples/sec	accuracy=nan
2021-05-21 10:11:29,851 Node[0] Epoch[8] Batch [140-160]	Speed: 54100.54 samples/sec	accuracy=nan
2021-05-21 10:11:32,108 Node[0] Epoch[8] Batch [160-180]	Speed: 54474.50 samples/sec	accuracy=nan
2021-05-21 10:11:34,364 Node[0] Epoch[8] Batch [180-200]	Speed: 54471.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609895215, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 9}}
2021-05-21 10:11:35,216 Node[0] Epoch[8] Time cost=23.056
:::MLLOG {"namespace": "", "time_ms": 1621609895216, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55568.797125009674}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621609895216, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55568.797125009674, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609895216, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 10}}
2021-05-21 10:11:37,446 Node[0] Epoch[9] Batch [0-20]	Speed: 57889.61 samples/sec	accuracy=nan
2021-05-21 10:11:39,571 Node[0] Epoch[9] Batch [20-40]	Speed: 57829.63 samples/sec	accuracy=nan
2021-05-21 10:11:41,729 Node[0] Epoch[9] Batch [40-60]	Speed: 56945.18 samples/sec	accuracy=nan
2021-05-21 10:11:43,956 Node[0] Epoch[9] Batch [60-80]	Speed: 55193.01 samples/sec	accuracy=nan
2021-05-21 10:11:46,215 Node[0] Epoch[9] Batch [80-100]	Speed: 54398.46 samples/sec	accuracy=nan
2021-05-21 10:11:48,475 Node[0] Epoch[9] Batch [100-120]	Speed: 54365.26 samples/sec	accuracy=nan
2021-05-21 10:11:50,736 Node[0] Epoch[9] Batch [120-140]	Speed: 54360.34 samples/sec	accuracy=nan
2021-05-21 10:11:53,003 Node[0] Epoch[9] Batch [140-160]	Speed: 54211.08 samples/sec	accuracy=nan
2021-05-21 10:11:55,256 Node[0] Epoch[9] Batch [160-180]	Speed: 54537.18 samples/sec	accuracy=nan
2021-05-21 10:11:57,514 Node[0] Epoch[9] Batch [180-200]	Speed: 54426.91 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609918364, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 10}}
2021-05-21 10:11:58,365 Node[0] Epoch[9] Time cost=23.149
:::MLLOG {"namespace": "", "time_ms": 1621609918365, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55344.1134129178}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621609918365, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55344.1134129178, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609918365, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 11}}
2021-05-21 10:12:00,597 Node[0] Epoch[10] Batch [0-20]	Speed: 57814.60 samples/sec	accuracy=nan
2021-05-21 10:12:02,720 Node[0] Epoch[10] Batch [20-40]	Speed: 57865.06 samples/sec	accuracy=nan
2021-05-21 10:12:04,879 Node[0] Epoch[10] Batch [40-60]	Speed: 56920.29 samples/sec	accuracy=nan
2021-05-21 10:12:07,096 Node[0] Epoch[10] Batch [60-80]	Speed: 55437.31 samples/sec	accuracy=nan
2021-05-21 10:12:09,353 Node[0] Epoch[10] Batch [80-100]	Speed: 54458.46 samples/sec	accuracy=nan
2021-05-21 10:12:11,613 Node[0] Epoch[10] Batch [100-120]	Speed: 54379.35 samples/sec	accuracy=nan
2021-05-21 10:12:13,874 Node[0] Epoch[10] Batch [120-140]	Speed: 54341.33 samples/sec	accuracy=nan
2021-05-21 10:12:16,122 Node[0] Epoch[10] Batch [140-160]	Speed: 54689.68 samples/sec	accuracy=nan
2021-05-21 10:12:18,373 Node[0] Epoch[10] Batch [160-180]	Speed: 54573.41 samples/sec	accuracy=nan
2021-05-21 10:12:20,600 Node[0] Epoch[10] Batch [180-200]	Speed: 55202.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609941450, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 11}}
2021-05-21 10:12:21,450 Node[0] Epoch[10] Time cost=23.085
:::MLLOG {"namespace": "", "time_ms": 1621609941450, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55498.79305774385}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621609941450, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55498.79305774385, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609941450, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 12}}
2021-05-21 10:12:23,681 Node[0] Epoch[11] Batch [0-20]	Speed: 57849.51 samples/sec	accuracy=nan
2021-05-21 10:12:25,805 Node[0] Epoch[11] Batch [20-40]	Speed: 57840.15 samples/sec	accuracy=nan
2021-05-21 10:12:27,969 Node[0] Epoch[11] Batch [40-60]	Speed: 56793.12 samples/sec	accuracy=nan
2021-05-21 10:12:30,181 Node[0] Epoch[11] Batch [60-80]	Speed: 55563.28 samples/sec	accuracy=nan
2021-05-21 10:12:32,439 Node[0] Epoch[11] Batch [80-100]	Speed: 54423.56 samples/sec	accuracy=nan
2021-05-21 10:12:34,690 Node[0] Epoch[11] Batch [100-120]	Speed: 54610.23 samples/sec	accuracy=nan
2021-05-21 10:12:36,940 Node[0] Epoch[11] Batch [120-140]	Speed: 54603.43 samples/sec	accuracy=nan
2021-05-21 10:12:39,192 Node[0] Epoch[11] Batch [140-160]	Speed: 54582.29 samples/sec	accuracy=nan
2021-05-21 10:12:41,450 Node[0] Epoch[11] Batch [160-180]	Speed: 54419.07 samples/sec	accuracy=nan
2021-05-21 10:12:43,698 Node[0] Epoch[11] Batch [180-200]	Speed: 54685.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609964548, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 12}}
2021-05-21 10:12:44,549 Node[0] Epoch[11] Time cost=23.098
:::MLLOG {"namespace": "", "time_ms": 1621609964549, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55466.50722535996}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621609964549, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55466.50722535996, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609964651, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 12}}
2021-05-21 10:12:44,929 Node[0] Epoch[11] Validation-accuracy=0.508881
2021-05-21 10:12:44,929 Node[0] Epoch[11] Validation-correct-count=1060.000000
2021-05-21 10:12:44,929 Node[0] Epoch[11] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621609964950, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621609964950, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.51152, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621609964950, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621609964950, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 13, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621609964950, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 13}}
2021-05-21 10:12:47,099 Node[0] Epoch[12] Batch [0-20]	Speed: 57516.90 samples/sec	accuracy=nan
2021-05-21 10:12:49,222 Node[0] Epoch[12] Batch [20-40]	Speed: 57867.42 samples/sec	accuracy=nan
2021-05-21 10:12:51,382 Node[0] Epoch[12] Batch [40-60]	Speed: 56902.69 samples/sec	accuracy=nan
2021-05-21 10:12:53,606 Node[0] Epoch[12] Batch [60-80]	Speed: 55269.06 samples/sec	accuracy=nan
2021-05-21 10:12:55,853 Node[0] Epoch[12] Batch [80-100]	Speed: 54676.61 samples/sec	accuracy=nan
2021-05-21 10:12:58,104 Node[0] Epoch[12] Batch [100-120]	Speed: 54614.47 samples/sec	accuracy=nan
2021-05-21 10:13:00,352 Node[0] Epoch[12] Batch [120-140]	Speed: 54661.57 samples/sec	accuracy=nan
2021-05-21 10:13:02,599 Node[0] Epoch[12] Batch [140-160]	Speed: 54683.84 samples/sec	accuracy=nan
2021-05-21 10:13:04,853 Node[0] Epoch[12] Batch [160-180]	Speed: 54535.89 samples/sec	accuracy=nan
2021-05-21 10:13:07,097 Node[0] Epoch[12] Batch [180-200]	Speed: 54753.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621609987947, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 13}}
2021-05-21 10:13:07,948 Node[0] Epoch[12] Time cost=22.997
:::MLLOG {"namespace": "", "time_ms": 1621609987948, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55709.72509679838}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621609987948, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55709.72509679838, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621609987948, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 14}}
2021-05-21 10:13:10,178 Node[0] Epoch[13] Batch [0-20]	Speed: 57859.73 samples/sec	accuracy=nan
2021-05-21 10:13:12,303 Node[0] Epoch[13] Batch [20-40]	Speed: 57829.74 samples/sec	accuracy=nan
2021-05-21 10:13:14,471 Node[0] Epoch[13] Batch [40-60]	Speed: 56704.19 samples/sec	accuracy=nan
2021-05-21 10:13:16,695 Node[0] Epoch[13] Batch [60-80]	Speed: 55237.27 samples/sec	accuracy=nan
2021-05-21 10:13:18,952 Node[0] Epoch[13] Batch [80-100]	Speed: 54469.09 samples/sec	accuracy=nan
2021-05-21 10:13:21,201 Node[0] Epoch[13] Batch [100-120]	Speed: 54627.11 samples/sec	accuracy=nan
2021-05-21 10:13:23,460 Node[0] Epoch[13] Batch [120-140]	Speed: 54411.09 samples/sec	accuracy=nan
2021-05-21 10:13:25,706 Node[0] Epoch[13] Batch [140-160]	Speed: 54700.88 samples/sec	accuracy=nan
2021-05-21 10:13:27,965 Node[0] Epoch[13] Batch [160-180]	Speed: 54401.32 samples/sec	accuracy=nan
2021-05-21 10:13:30,205 Node[0] Epoch[13] Batch [180-200]	Speed: 54868.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610011055, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 14}}
2021-05-21 10:13:31,055 Node[0] Epoch[13] Time cost=23.107
:::MLLOG {"namespace": "", "time_ms": 1621610011055, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55444.85583798954}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621610011055, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55444.85583798954, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610011056, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 15}}
2021-05-21 10:13:33,287 Node[0] Epoch[14] Batch [0-20]	Speed: 57849.98 samples/sec	accuracy=nan
2021-05-21 10:13:35,411 Node[0] Epoch[14] Batch [20-40]	Speed: 57845.05 samples/sec	accuracy=nan
2021-05-21 10:13:37,578 Node[0] Epoch[14] Batch [40-60]	Speed: 56704.78 samples/sec	accuracy=nan
2021-05-21 10:13:39,802 Node[0] Epoch[14] Batch [60-80]	Speed: 55278.88 samples/sec	accuracy=nan
2021-05-21 10:13:42,063 Node[0] Epoch[14] Batch [80-100]	Speed: 54331.28 samples/sec	accuracy=nan
2021-05-21 10:13:44,318 Node[0] Epoch[14] Batch [100-120]	Speed: 54521.84 samples/sec	accuracy=nan
2021-05-21 10:13:46,572 Node[0] Epoch[14] Batch [120-140]	Speed: 54523.54 samples/sec	accuracy=nan
2021-05-21 10:13:48,828 Node[0] Epoch[14] Batch [140-160]	Speed: 54472.57 samples/sec	accuracy=nan
2021-05-21 10:13:51,080 Node[0] Epoch[14] Batch [160-180]	Speed: 54549.09 samples/sec	accuracy=nan
2021-05-21 10:13:53,308 Node[0] Epoch[14] Batch [180-200]	Speed: 55179.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610034157, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 15}}
2021-05-21 10:13:54,158 Node[0] Epoch[14] Time cost=23.102
:::MLLOG {"namespace": "", "time_ms": 1621610034158, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55456.72732588949}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621610034158, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55456.72732588949, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610034158, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 16}}
2021-05-21 10:13:56,392 Node[0] Epoch[15] Batch [0-20]	Speed: 57773.56 samples/sec	accuracy=nan
2021-05-21 10:13:58,517 Node[0] Epoch[15] Batch [20-40]	Speed: 57851.43 samples/sec	accuracy=nan
2021-05-21 10:14:00,683 Node[0] Epoch[15] Batch [40-60]	Speed: 56732.72 samples/sec	accuracy=nan
2021-05-21 10:14:02,911 Node[0] Epoch[15] Batch [60-80]	Speed: 55153.39 samples/sec	accuracy=nan
2021-05-21 10:14:05,171 Node[0] Epoch[15] Batch [80-100]	Speed: 54367.52 samples/sec	accuracy=nan
2021-05-21 10:14:07,432 Node[0] Epoch[15] Batch [100-120]	Speed: 54348.40 samples/sec	accuracy=nan
2021-05-21 10:14:09,695 Node[0] Epoch[15] Batch [120-140]	Speed: 54317.93 samples/sec	accuracy=nan
2021-05-21 10:14:11,956 Node[0] Epoch[15] Batch [140-160]	Speed: 54353.43 samples/sec	accuracy=nan
2021-05-21 10:14:14,212 Node[0] Epoch[15] Batch [160-180]	Speed: 54470.34 samples/sec	accuracy=nan
2021-05-21 10:14:16,431 Node[0] Epoch[15] Batch [180-200]	Speed: 55398.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610057280, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 16}}
2021-05-21 10:14:17,281 Node[0] Epoch[15] Time cost=23.123
:::MLLOG {"namespace": "", "time_ms": 1621610057281, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55407.624137286664}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621610057281, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55407.624137286664, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610057383, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 16}}
2021-05-21 10:14:17,658 Node[0] Epoch[15] Validation-accuracy=0.586174
2021-05-21 10:14:17,658 Node[0] Epoch[15] Validation-correct-count=1221.000000
2021-05-21 10:14:17,658 Node[0] Epoch[15] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610057661, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621610057662, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59664, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621610057662, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621610057662, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 17, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610057662, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 17}}
2021-05-21 10:14:19,821 Node[0] Epoch[16] Batch [0-20]	Speed: 57173.06 samples/sec	accuracy=nan
2021-05-21 10:14:21,946 Node[0] Epoch[16] Batch [20-40]	Speed: 57823.39 samples/sec	accuracy=nan
2021-05-21 10:14:24,118 Node[0] Epoch[16] Batch [40-60]	Speed: 56593.32 samples/sec	accuracy=nan
2021-05-21 10:14:26,350 Node[0] Epoch[16] Batch [60-80]	Speed: 55042.32 samples/sec	accuracy=nan
2021-05-21 10:14:28,603 Node[0] Epoch[16] Batch [80-100]	Speed: 54566.26 samples/sec	accuracy=nan
2021-05-21 10:14:30,857 Node[0] Epoch[16] Batch [100-120]	Speed: 54528.04 samples/sec	accuracy=nan
2021-05-21 10:14:33,109 Node[0] Epoch[16] Batch [120-140]	Speed: 54570.74 samples/sec	accuracy=nan
2021-05-21 10:14:35,367 Node[0] Epoch[16] Batch [140-160]	Speed: 54420.63 samples/sec	accuracy=nan
2021-05-21 10:14:37,630 Node[0] Epoch[16] Batch [160-180]	Speed: 54297.45 samples/sec	accuracy=nan
2021-05-21 10:14:39,857 Node[0] Epoch[16] Batch [180-200]	Speed: 55178.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610080705, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 17}}
2021-05-21 10:14:40,706 Node[0] Epoch[16] Time cost=23.043
:::MLLOG {"namespace": "", "time_ms": 1621610080706, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55598.24524184547}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621610080706, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55598.24524184547, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610080706, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 18}}
2021-05-21 10:14:42,937 Node[0] Epoch[17] Batch [0-20]	Speed: 57855.14 samples/sec	accuracy=nan
2021-05-21 10:14:45,066 Node[0] Epoch[17] Batch [20-40]	Speed: 57727.22 samples/sec	accuracy=nan
2021-05-21 10:14:47,244 Node[0] Epoch[17] Batch [40-60]	Speed: 56429.42 samples/sec	accuracy=nan
2021-05-21 10:14:49,478 Node[0] Epoch[17] Batch [60-80]	Speed: 55009.13 samples/sec	accuracy=nan
2021-05-21 10:14:51,732 Node[0] Epoch[17] Batch [80-100]	Speed: 54510.08 samples/sec	accuracy=nan
2021-05-21 10:14:53,986 Node[0] Epoch[17] Batch [100-120]	Speed: 54521.48 samples/sec	accuracy=nan
2021-05-21 10:14:56,235 Node[0] Epoch[17] Batch [120-140]	Speed: 54637.33 samples/sec	accuracy=nan
2021-05-21 10:14:58,493 Node[0] Epoch[17] Batch [140-160]	Speed: 54432.37 samples/sec	accuracy=nan
2021-05-21 10:15:00,763 Node[0] Epoch[17] Batch [160-180]	Speed: 54148.45 samples/sec	accuracy=nan
2021-05-21 10:15:02,984 Node[0] Epoch[17] Batch [180-200]	Speed: 55321.57 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610103835, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 18}}
2021-05-21 10:15:03,836 Node[0] Epoch[17] Time cost=23.130
:::MLLOG {"namespace": "", "time_ms": 1621610103836, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55390.00761898613}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621610103836, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55390.00761898613, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610103836, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 19}}
2021-05-21 10:15:06,068 Node[0] Epoch[18] Batch [0-20]	Speed: 57838.54 samples/sec	accuracy=nan
2021-05-21 10:15:08,194 Node[0] Epoch[18] Batch [20-40]	Speed: 57781.80 samples/sec	accuracy=nan
2021-05-21 10:15:10,374 Node[0] Epoch[18] Batch [40-60]	Speed: 56389.66 samples/sec	accuracy=nan
2021-05-21 10:15:12,607 Node[0] Epoch[18] Batch [60-80]	Speed: 55024.39 samples/sec	accuracy=nan
2021-05-21 10:15:14,868 Node[0] Epoch[18] Batch [80-100]	Speed: 54350.67 samples/sec	accuracy=nan
2021-05-21 10:15:17,118 Node[0] Epoch[18] Batch [100-120]	Speed: 54619.33 samples/sec	accuracy=nan
2021-05-21 10:15:19,359 Node[0] Epoch[18] Batch [120-140]	Speed: 54855.98 samples/sec	accuracy=nan
2021-05-21 10:15:21,613 Node[0] Epoch[18] Batch [140-160]	Speed: 54507.72 samples/sec	accuracy=nan
2021-05-21 10:15:23,873 Node[0] Epoch[18] Batch [160-180]	Speed: 54379.72 samples/sec	accuracy=nan
2021-05-21 10:15:26,099 Node[0] Epoch[18] Batch [180-200]	Speed: 55198.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610126949, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 19}}
2021-05-21 10:15:26,950 Node[0] Epoch[18] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621610126950, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55429.92570746935}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621610126950, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55429.92570746935, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610126950, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 20}}
2021-05-21 10:15:29,183 Node[0] Epoch[19] Batch [0-20]	Speed: 57786.96 samples/sec	accuracy=nan
2021-05-21 10:15:31,309 Node[0] Epoch[19] Batch [20-40]	Speed: 57823.58 samples/sec	accuracy=nan
2021-05-21 10:15:33,484 Node[0] Epoch[19] Batch [40-60]	Speed: 56483.33 samples/sec	accuracy=nan
2021-05-21 10:15:35,723 Node[0] Epoch[19] Batch [60-80]	Speed: 54894.15 samples/sec	accuracy=nan
2021-05-21 10:15:37,987 Node[0] Epoch[19] Batch [80-100]	Speed: 54287.26 samples/sec	accuracy=nan
2021-05-21 10:15:40,240 Node[0] Epoch[19] Batch [100-120]	Speed: 54535.95 samples/sec	accuracy=nan
2021-05-21 10:15:42,502 Node[0] Epoch[19] Batch [120-140]	Speed: 54340.70 samples/sec	accuracy=nan
2021-05-21 10:15:44,766 Node[0] Epoch[19] Batch [140-160]	Speed: 54270.32 samples/sec	accuracy=nan
2021-05-21 10:15:47,021 Node[0] Epoch[19] Batch [160-180]	Speed: 54501.98 samples/sec	accuracy=nan
2021-05-21 10:15:49,240 Node[0] Epoch[19] Batch [180-200]	Speed: 55388.45 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610150088, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 20}}
2021-05-21 10:15:50,089 Node[0] Epoch[19] Time cost=23.139
:::MLLOG {"namespace": "", "time_ms": 1621610150089, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55369.36637781112}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621610150089, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55369.36637781112, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610150191, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 20}}
2021-05-21 10:15:50,464 Node[0] Epoch[19] Validation-accuracy=0.630341
2021-05-21 10:15:50,464 Node[0] Epoch[19] Validation-correct-count=1313.000000
2021-05-21 10:15:50,465 Node[0] Epoch[19] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610150467, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621610150467, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64178, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621610150467, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621610150467, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 21, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610150468, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 21}}
2021-05-21 10:15:52,629 Node[0] Epoch[20] Batch [0-20]	Speed: 57123.49 samples/sec	accuracy=nan
2021-05-21 10:15:54,754 Node[0] Epoch[20] Batch [20-40]	Speed: 57827.12 samples/sec	accuracy=nan
2021-05-21 10:15:56,932 Node[0] Epoch[20] Batch [40-60]	Speed: 56422.79 samples/sec	accuracy=nan
2021-05-21 10:15:59,170 Node[0] Epoch[20] Batch [60-80]	Speed: 54921.06 samples/sec	accuracy=nan
2021-05-21 10:16:01,428 Node[0] Epoch[20] Batch [80-100]	Speed: 54421.99 samples/sec	accuracy=nan
2021-05-21 10:16:03,689 Node[0] Epoch[20] Batch [100-120]	Speed: 54362.32 samples/sec	accuracy=nan
2021-05-21 10:16:05,947 Node[0] Epoch[20] Batch [120-140]	Speed: 54408.63 samples/sec	accuracy=nan
2021-05-21 10:16:08,202 Node[0] Epoch[20] Batch [140-160]	Speed: 54513.11 samples/sec	accuracy=nan
2021-05-21 10:16:10,457 Node[0] Epoch[20] Batch [160-180]	Speed: 54496.38 samples/sec	accuracy=nan
2021-05-21 10:16:12,676 Node[0] Epoch[20] Batch [180-200]	Speed: 55383.25 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610173525, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 21}}
2021-05-21 10:16:13,526 Node[0] Epoch[20] Time cost=23.058
:::MLLOG {"namespace": "", "time_ms": 1621610173526, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55562.36476761308}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621610173526, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55562.36476761308, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610173526, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 22}}
2021-05-21 10:16:15,760 Node[0] Epoch[21] Batch [0-20]	Speed: 57772.35 samples/sec	accuracy=nan
2021-05-21 10:16:17,886 Node[0] Epoch[21] Batch [20-40]	Speed: 57810.82 samples/sec	accuracy=nan
2021-05-21 10:16:20,069 Node[0] Epoch[21] Batch [40-60]	Speed: 56304.51 samples/sec	accuracy=nan
2021-05-21 10:16:22,299 Node[0] Epoch[21] Batch [60-80]	Speed: 55119.75 samples/sec	accuracy=nan
2021-05-21 10:16:24,550 Node[0] Epoch[21] Batch [80-100]	Speed: 54581.04 samples/sec	accuracy=nan
2021-05-21 10:16:26,807 Node[0] Epoch[21] Batch [100-120]	Speed: 54460.90 samples/sec	accuracy=nan
2021-05-21 10:16:29,063 Node[0] Epoch[21] Batch [120-140]	Speed: 54462.71 samples/sec	accuracy=nan
2021-05-21 10:16:31,330 Node[0] Epoch[21] Batch [140-160]	Speed: 54202.16 samples/sec	accuracy=nan
2021-05-21 10:16:33,598 Node[0] Epoch[21] Batch [160-180]	Speed: 54202.58 samples/sec	accuracy=nan
2021-05-21 10:16:35,817 Node[0] Epoch[21] Batch [180-200]	Speed: 55366.39 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610196667, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 22}}
2021-05-21 10:16:36,668 Node[0] Epoch[21] Time cost=23.141
:::MLLOG {"namespace": "", "time_ms": 1621610196668, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55362.40116344204}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621610196668, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55362.40116344204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610196668, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 23}}
2021-05-21 10:16:38,899 Node[0] Epoch[22] Batch [0-20]	Speed: 57844.46 samples/sec	accuracy=nan
2021-05-21 10:16:41,028 Node[0] Epoch[22] Batch [20-40]	Speed: 57739.00 samples/sec	accuracy=nan
2021-05-21 10:16:43,209 Node[0] Epoch[22] Batch [40-60]	Speed: 56335.16 samples/sec	accuracy=nan
2021-05-21 10:16:45,445 Node[0] Epoch[22] Batch [60-80]	Speed: 54966.41 samples/sec	accuracy=nan
2021-05-21 10:16:47,691 Node[0] Epoch[22] Batch [80-100]	Speed: 54703.69 samples/sec	accuracy=nan
2021-05-21 10:16:49,951 Node[0] Epoch[22] Batch [100-120]	Speed: 54385.68 samples/sec	accuracy=nan
2021-05-21 10:16:52,209 Node[0] Epoch[22] Batch [120-140]	Speed: 54434.33 samples/sec	accuracy=nan
2021-05-21 10:16:54,457 Node[0] Epoch[22] Batch [140-160]	Speed: 54656.32 samples/sec	accuracy=nan
2021-05-21 10:16:56,719 Node[0] Epoch[22] Batch [160-180]	Speed: 54320.83 samples/sec	accuracy=nan
2021-05-21 10:16:58,927 Node[0] Epoch[22] Batch [180-200]	Speed: 55670.17 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610219776, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 23}}
2021-05-21 10:16:59,777 Node[0] Epoch[22] Time cost=23.108
:::MLLOG {"namespace": "", "time_ms": 1621610219777, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55441.468186415506}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621610219777, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55441.468186415506, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610219777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 24}}
2021-05-21 10:17:02,010 Node[0] Epoch[23] Batch [0-20]	Speed: 57805.19 samples/sec	accuracy=nan
2021-05-21 10:17:04,139 Node[0] Epoch[23] Batch [20-40]	Speed: 57715.59 samples/sec	accuracy=nan
2021-05-21 10:17:06,323 Node[0] Epoch[23] Batch [40-60]	Speed: 56270.94 samples/sec	accuracy=nan
2021-05-21 10:17:08,550 Node[0] Epoch[23] Batch [60-80]	Speed: 55184.39 samples/sec	accuracy=nan
2021-05-21 10:17:10,809 Node[0] Epoch[23] Batch [80-100]	Speed: 54405.66 samples/sec	accuracy=nan
2021-05-21 10:17:13,074 Node[0] Epoch[23] Batch [100-120]	Speed: 54258.77 samples/sec	accuracy=nan
2021-05-21 10:17:15,330 Node[0] Epoch[23] Batch [120-140]	Speed: 54467.76 samples/sec	accuracy=nan
2021-05-21 10:17:17,599 Node[0] Epoch[23] Batch [140-160]	Speed: 54153.58 samples/sec	accuracy=nan
2021-05-21 10:17:19,855 Node[0] Epoch[23] Batch [160-180]	Speed: 54473.22 samples/sec	accuracy=nan
2021-05-21 10:17:22,056 Node[0] Epoch[23] Batch [180-200]	Speed: 55833.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610242905, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 24}}
2021-05-21 10:17:22,906 Node[0] Epoch[23] Time cost=23.129
:::MLLOG {"namespace": "", "time_ms": 1621610242906, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55393.233667862754}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621610242906, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55393.233667862754, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610243008, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 24}}
2021-05-21 10:17:23,278 Node[0] Epoch[23] Validation-accuracy=0.673548
2021-05-21 10:17:23,279 Node[0] Epoch[23] Validation-correct-count=1403.000000
2021-05-21 10:17:23,279 Node[0] Epoch[23] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610243284, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621610243285, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67382, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621610243285, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621610243285, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 25, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610243285, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 25}}
2021-05-21 10:17:25,441 Node[0] Epoch[24] Batch [0-20]	Speed: 57236.11 samples/sec	accuracy=nan
2021-05-21 10:17:27,571 Node[0] Epoch[24] Batch [20-40]	Speed: 57678.54 samples/sec	accuracy=nan
2021-05-21 10:17:29,754 Node[0] Epoch[24] Batch [40-60]	Speed: 56308.18 samples/sec	accuracy=nan
2021-05-21 10:17:32,002 Node[0] Epoch[24] Batch [60-80]	Speed: 54667.47 samples/sec	accuracy=nan
2021-05-21 10:17:34,259 Node[0] Epoch[24] Batch [80-100]	Speed: 54452.75 samples/sec	accuracy=nan
2021-05-21 10:17:36,515 Node[0] Epoch[24] Batch [100-120]	Speed: 54470.84 samples/sec	accuracy=nan
2021-05-21 10:17:38,768 Node[0] Epoch[24] Batch [120-140]	Speed: 54534.69 samples/sec	accuracy=nan
2021-05-21 10:17:41,019 Node[0] Epoch[24] Batch [140-160]	Speed: 54608.88 samples/sec	accuracy=nan
2021-05-21 10:17:43,273 Node[0] Epoch[24] Batch [160-180]	Speed: 54514.35 samples/sec	accuracy=nan
2021-05-21 10:17:45,470 Node[0] Epoch[24] Batch [180-200]	Speed: 55939.56 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610266322, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 25}}
2021-05-21 10:17:46,323 Node[0] Epoch[24] Time cost=23.038
:::MLLOG {"namespace": "", "time_ms": 1621610266323, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55611.50964067194}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621610266323, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55611.50964067194, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610266323, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 26}}
2021-05-21 10:17:48,557 Node[0] Epoch[25] Batch [0-20]	Speed: 57792.55 samples/sec	accuracy=nan
2021-05-21 10:17:50,686 Node[0] Epoch[25] Batch [20-40]	Speed: 57717.34 samples/sec	accuracy=nan
2021-05-21 10:17:52,868 Node[0] Epoch[25] Batch [40-60]	Speed: 56321.49 samples/sec	accuracy=nan
2021-05-21 10:17:55,101 Node[0] Epoch[25] Batch [60-80]	Speed: 55019.02 samples/sec	accuracy=nan
2021-05-21 10:17:57,350 Node[0] Epoch[25] Batch [80-100]	Speed: 54659.96 samples/sec	accuracy=nan
2021-05-21 10:17:59,590 Node[0] Epoch[25] Batch [100-120]	Speed: 54855.26 samples/sec	accuracy=nan
2021-05-21 10:18:01,850 Node[0] Epoch[25] Batch [120-140]	Speed: 54366.50 samples/sec	accuracy=nan
2021-05-21 10:18:04,108 Node[0] Epoch[25] Batch [140-160]	Speed: 54432.76 samples/sec	accuracy=nan
2021-05-21 10:18:06,376 Node[0] Epoch[25] Batch [160-180]	Speed: 54179.94 samples/sec	accuracy=nan
2021-05-21 10:18:08,572 Node[0] Epoch[25] Batch [180-200]	Speed: 55966.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610289424, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 26}}
2021-05-21 10:18:09,424 Node[0] Epoch[25] Time cost=23.101
:::MLLOG {"namespace": "", "time_ms": 1621610289424, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55460.03956931021}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621610289424, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55460.03956931021, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610289424, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 27}}
2021-05-21 10:18:11,666 Node[0] Epoch[26] Batch [0-20]	Speed: 57570.45 samples/sec	accuracy=nan
2021-05-21 10:18:13,795 Node[0] Epoch[26] Batch [20-40]	Speed: 57737.94 samples/sec	accuracy=nan
2021-05-21 10:18:15,981 Node[0] Epoch[26] Batch [40-60]	Speed: 56216.56 samples/sec	accuracy=nan
2021-05-21 10:18:18,219 Node[0] Epoch[26] Batch [60-80]	Speed: 54913.57 samples/sec	accuracy=nan
2021-05-21 10:18:20,478 Node[0] Epoch[26] Batch [80-100]	Speed: 54381.06 samples/sec	accuracy=nan
2021-05-21 10:18:22,725 Node[0] Epoch[26] Batch [100-120]	Speed: 54702.40 samples/sec	accuracy=nan
2021-05-21 10:18:24,976 Node[0] Epoch[26] Batch [120-140]	Speed: 54598.91 samples/sec	accuracy=nan
2021-05-21 10:18:27,238 Node[0] Epoch[26] Batch [140-160]	Speed: 54331.42 samples/sec	accuracy=nan
2021-05-21 10:18:29,502 Node[0] Epoch[26] Batch [160-180]	Speed: 54278.19 samples/sec	accuracy=nan
2021-05-21 10:18:31,691 Node[0] Epoch[26] Batch [180-200]	Speed: 56133.51 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610312541, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 27}}
2021-05-21 10:18:32,542 Node[0] Epoch[26] Time cost=23.118
:::MLLOG {"namespace": "", "time_ms": 1621610312542, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55419.73860156823}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621610312542, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55419.73860156823, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610312542, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 28}}
2021-05-21 10:18:34,775 Node[0] Epoch[27] Batch [0-20]	Speed: 57798.95 samples/sec	accuracy=nan
2021-05-21 10:18:36,907 Node[0] Epoch[27] Batch [20-40]	Speed: 57632.40 samples/sec	accuracy=nan
2021-05-21 10:18:39,095 Node[0] Epoch[27] Batch [40-60]	Speed: 56171.63 samples/sec	accuracy=nan
2021-05-21 10:18:41,340 Node[0] Epoch[27] Batch [60-80]	Speed: 54746.98 samples/sec	accuracy=nan
2021-05-21 10:18:43,603 Node[0] Epoch[27] Batch [80-100]	Speed: 54298.00 samples/sec	accuracy=nan
2021-05-21 10:18:45,865 Node[0] Epoch[27] Batch [100-120]	Speed: 54322.47 samples/sec	accuracy=nan
2021-05-21 10:18:48,119 Node[0] Epoch[27] Batch [120-140]	Speed: 54539.50 samples/sec	accuracy=nan
2021-05-21 10:18:50,370 Node[0] Epoch[27] Batch [140-160]	Speed: 54585.58 samples/sec	accuracy=nan
2021-05-21 10:18:52,633 Node[0] Epoch[27] Batch [160-180]	Speed: 54301.00 samples/sec	accuracy=nan
2021-05-21 10:18:54,814 Node[0] Epoch[27] Batch [180-200]	Speed: 56335.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610335666, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 28}}
2021-05-21 10:18:55,667 Node[0] Epoch[27] Time cost=23.124
:::MLLOG {"namespace": "", "time_ms": 1621610335667, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55404.19819058036}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621610335667, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55404.19819058036, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610335768, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 28}}
2021-05-21 10:18:56,037 Node[0] Epoch[27] Validation-accuracy=0.698512
2021-05-21 10:18:56,038 Node[0] Epoch[27] Validation-correct-count=1455.000000
2021-05-21 10:18:56,038 Node[0] Epoch[27] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610336043, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621610336043, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.70084, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621610336043, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621610336043, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 29, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610336043, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 29}}
2021-05-21 10:18:58,213 Node[0] Epoch[28] Batch [0-20]	Speed: 56932.56 samples/sec	accuracy=nan
2021-05-21 10:19:00,348 Node[0] Epoch[28] Batch [20-40]	Speed: 57560.00 samples/sec	accuracy=nan
2021-05-21 10:19:02,541 Node[0] Epoch[28] Batch [40-60]	Speed: 56044.61 samples/sec	accuracy=nan
2021-05-21 10:19:04,779 Node[0] Epoch[28] Batch [60-80]	Speed: 54902.38 samples/sec	accuracy=nan
2021-05-21 10:19:07,026 Node[0] Epoch[28] Batch [80-100]	Speed: 54690.32 samples/sec	accuracy=nan
2021-05-21 10:19:09,279 Node[0] Epoch[28] Batch [100-120]	Speed: 54555.89 samples/sec	accuracy=nan
2021-05-21 10:19:11,530 Node[0] Epoch[28] Batch [120-140]	Speed: 54601.18 samples/sec	accuracy=nan
2021-05-21 10:19:13,798 Node[0] Epoch[28] Batch [140-160]	Speed: 54169.63 samples/sec	accuracy=nan
2021-05-21 10:19:16,050 Node[0] Epoch[28] Batch [160-180]	Speed: 54578.30 samples/sec	accuracy=nan
2021-05-21 10:19:18,243 Node[0] Epoch[28] Batch [180-200]	Speed: 56055.48 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610359096, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 29}}
2021-05-21 10:19:19,096 Node[0] Epoch[28] Time cost=23.053
:::MLLOG {"namespace": "", "time_ms": 1621610359097, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55574.117082757264}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621610359097, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55574.117082757264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610359097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 30}}
2021-05-21 10:19:21,336 Node[0] Epoch[29] Batch [0-20]	Speed: 57638.43 samples/sec	accuracy=nan
2021-05-21 10:19:23,475 Node[0] Epoch[29] Batch [20-40]	Speed: 57459.10 samples/sec	accuracy=nan
2021-05-21 10:19:25,667 Node[0] Epoch[29] Batch [40-60]	Speed: 56053.64 samples/sec	accuracy=nan
2021-05-21 10:19:27,914 Node[0] Epoch[29] Batch [60-80]	Speed: 54713.19 samples/sec	accuracy=nan
2021-05-21 10:19:30,166 Node[0] Epoch[29] Batch [80-100]	Speed: 54550.44 samples/sec	accuracy=nan
2021-05-21 10:19:32,415 Node[0] Epoch[29] Batch [100-120]	Speed: 54648.59 samples/sec	accuracy=nan
2021-05-21 10:19:34,677 Node[0] Epoch[29] Batch [120-140]	Speed: 54340.46 samples/sec	accuracy=nan
2021-05-21 10:19:36,933 Node[0] Epoch[29] Batch [140-160]	Speed: 54474.79 samples/sec	accuracy=nan
2021-05-21 10:19:39,199 Node[0] Epoch[29] Batch [160-180]	Speed: 54235.39 samples/sec	accuracy=nan
2021-05-21 10:19:41,388 Node[0] Epoch[29] Batch [180-200]	Speed: 56140.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610382241, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 30}}
2021-05-21 10:19:42,242 Node[0] Epoch[29] Time cost=23.145
:::MLLOG {"namespace": "", "time_ms": 1621610382242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55354.58749183565}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621610382242, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55354.58749183565, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610382242, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 31}}
2021-05-21 10:19:44,482 Node[0] Epoch[30] Batch [0-20]	Speed: 57610.30 samples/sec	accuracy=nan
2021-05-21 10:19:46,617 Node[0] Epoch[30] Batch [20-40]	Speed: 57555.92 samples/sec	accuracy=nan
2021-05-21 10:19:48,812 Node[0] Epoch[30] Batch [40-60]	Speed: 55987.37 samples/sec	accuracy=nan
2021-05-21 10:19:51,059 Node[0] Epoch[30] Batch [60-80]	Speed: 54708.91 samples/sec	accuracy=nan
2021-05-21 10:19:53,313 Node[0] Epoch[30] Batch [80-100]	Speed: 54506.59 samples/sec	accuracy=nan
2021-05-21 10:19:55,572 Node[0] Epoch[30] Batch [100-120]	Speed: 54410.03 samples/sec	accuracy=nan
2021-05-21 10:19:57,827 Node[0] Epoch[30] Batch [120-140]	Speed: 54497.22 samples/sec	accuracy=nan
2021-05-21 10:20:00,085 Node[0] Epoch[30] Batch [140-160]	Speed: 54418.05 samples/sec	accuracy=nan
2021-05-21 10:20:02,343 Node[0] Epoch[30] Batch [160-180]	Speed: 54431.17 samples/sec	accuracy=nan
2021-05-21 10:20:04,533 Node[0] Epoch[30] Batch [180-200]	Speed: 56122.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610405386, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 31}}
2021-05-21 10:20:05,387 Node[0] Epoch[30] Time cost=23.145
:::MLLOG {"namespace": "", "time_ms": 1621610405387, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55354.61429213577}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621610405387, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55354.61429213577, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610405387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 32}}
2021-05-21 10:20:07,627 Node[0] Epoch[31] Batch [0-20]	Speed: 57622.61 samples/sec	accuracy=nan
2021-05-21 10:20:09,768 Node[0] Epoch[31] Batch [20-40]	Speed: 57397.32 samples/sec	accuracy=nan
2021-05-21 10:20:11,961 Node[0] Epoch[31] Batch [40-60]	Speed: 56049.76 samples/sec	accuracy=nan
2021-05-21 10:20:14,216 Node[0] Epoch[31] Batch [60-80]	Speed: 54488.50 samples/sec	accuracy=nan
2021-05-21 10:20:16,469 Node[0] Epoch[31] Batch [80-100]	Speed: 54548.20 samples/sec	accuracy=nan
2021-05-21 10:20:18,727 Node[0] Epoch[31] Batch [100-120]	Speed: 54435.84 samples/sec	accuracy=nan
2021-05-21 10:20:20,985 Node[0] Epoch[31] Batch [120-140]	Speed: 54413.25 samples/sec	accuracy=nan
2021-05-21 10:20:23,236 Node[0] Epoch[31] Batch [140-160]	Speed: 54614.15 samples/sec	accuracy=nan
2021-05-21 10:20:25,491 Node[0] Epoch[31] Batch [160-180]	Speed: 54498.60 samples/sec	accuracy=nan
2021-05-21 10:20:27,667 Node[0] Epoch[31] Batch [180-200]	Speed: 56456.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610428520, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 32}}
2021-05-21 10:20:28,521 Node[0] Epoch[31] Time cost=23.134
:::MLLOG {"namespace": "", "time_ms": 1621610428521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55381.34882064175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621610428521, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55381.34882064175, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610428624, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 32}}
2021-05-21 10:20:28,971 Node[0] Epoch[31] Validation-accuracy=0.748440
2021-05-21 10:20:28,971 Node[0] Epoch[31] Validation-correct-count=1559.000000
2021-05-21 10:20:28,971 Node[0] Epoch[31] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610428972, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621610428972, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73968, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621610428972, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621610428972, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 33, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610428972, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 33}}
2021-05-21 10:20:31,128 Node[0] Epoch[32] Batch [0-20]	Speed: 57199.95 samples/sec	accuracy=nan
2021-05-21 10:20:33,261 Node[0] Epoch[32] Batch [20-40]	Speed: 57630.82 samples/sec	accuracy=nan
2021-05-21 10:20:35,466 Node[0] Epoch[32] Batch [40-60]	Speed: 55735.95 samples/sec	accuracy=nan
2021-05-21 10:20:37,709 Node[0] Epoch[32] Batch [60-80]	Speed: 54772.85 samples/sec	accuracy=nan
2021-05-21 10:20:39,961 Node[0] Epoch[32] Batch [80-100]	Speed: 54578.78 samples/sec	accuracy=nan
2021-05-21 10:20:42,219 Node[0] Epoch[32] Batch [100-120]	Speed: 54422.85 samples/sec	accuracy=nan
2021-05-21 10:20:44,476 Node[0] Epoch[32] Batch [120-140]	Speed: 54453.53 samples/sec	accuracy=nan
2021-05-21 10:20:46,735 Node[0] Epoch[32] Batch [140-160]	Speed: 54395.07 samples/sec	accuracy=nan
2021-05-21 10:20:49,002 Node[0] Epoch[32] Batch [160-180]	Speed: 54210.13 samples/sec	accuracy=nan
2021-05-21 10:20:51,176 Node[0] Epoch[32] Batch [180-200]	Speed: 56527.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610452028, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 33}}
2021-05-21 10:20:52,029 Node[0] Epoch[32] Time cost=23.056
:::MLLOG {"namespace": "", "time_ms": 1621610452029, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55566.736540057165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621610452029, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55566.736540057165, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610452029, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 34}}
2021-05-21 10:20:54,265 Node[0] Epoch[33] Batch [0-20]	Speed: 57669.33 samples/sec	accuracy=nan
2021-05-21 10:20:56,399 Node[0] Epoch[33] Batch [20-40]	Speed: 57597.25 samples/sec	accuracy=nan
2021-05-21 10:20:58,594 Node[0] Epoch[33] Batch [40-60]	Speed: 55987.06 samples/sec	accuracy=nan
2021-05-21 10:21:00,843 Node[0] Epoch[33] Batch [60-80]	Speed: 54648.27 samples/sec	accuracy=nan
2021-05-21 10:21:03,099 Node[0] Epoch[33] Batch [80-100]	Speed: 54455.09 samples/sec	accuracy=nan
2021-05-21 10:21:05,341 Node[0] Epoch[33] Batch [100-120]	Speed: 54835.96 samples/sec	accuracy=nan
2021-05-21 10:21:07,600 Node[0] Epoch[33] Batch [120-140]	Speed: 54390.86 samples/sec	accuracy=nan
2021-05-21 10:21:09,855 Node[0] Epoch[33] Batch [140-160]	Speed: 54499.92 samples/sec	accuracy=nan
2021-05-21 10:21:12,116 Node[0] Epoch[33] Batch [160-180]	Speed: 54363.68 samples/sec	accuracy=nan
2021-05-21 10:21:14,286 Node[0] Epoch[33] Batch [180-200]	Speed: 56637.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610475137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 34}}
2021-05-21 10:21:15,138 Node[0] Epoch[33] Time cost=23.109
:::MLLOG {"namespace": "", "time_ms": 1621610475138, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55441.03861006024}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621610475138, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55441.03861006024, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610475138, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 35}}
2021-05-21 10:21:17,373 Node[0] Epoch[34] Batch [0-20]	Speed: 57742.98 samples/sec	accuracy=nan
2021-05-21 10:21:19,512 Node[0] Epoch[34] Batch [20-40]	Speed: 57453.64 samples/sec	accuracy=nan
2021-05-21 10:21:21,715 Node[0] Epoch[34] Batch [40-60]	Speed: 55782.97 samples/sec	accuracy=nan
2021-05-21 10:21:23,966 Node[0] Epoch[34] Batch [60-80]	Speed: 54607.42 samples/sec	accuracy=nan
2021-05-21 10:21:26,215 Node[0] Epoch[34] Batch [80-100]	Speed: 54640.52 samples/sec	accuracy=nan
2021-05-21 10:21:28,478 Node[0] Epoch[34] Batch [100-120]	Speed: 54310.91 samples/sec	accuracy=nan
2021-05-21 10:21:30,733 Node[0] Epoch[34] Batch [120-140]	Speed: 54496.99 samples/sec	accuracy=nan
2021-05-21 10:21:32,984 Node[0] Epoch[34] Batch [140-160]	Speed: 54592.84 samples/sec	accuracy=nan
2021-05-21 10:21:35,242 Node[0] Epoch[34] Batch [160-180]	Speed: 54430.06 samples/sec	accuracy=nan
2021-05-21 10:21:37,415 Node[0] Epoch[34] Batch [180-200]	Speed: 56547.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610498264, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 35}}
2021-05-21 10:21:38,265 Node[0] Epoch[34] Time cost=23.127
:::MLLOG {"namespace": "", "time_ms": 1621610498265, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55398.10542830423}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621610498265, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55398.10542830423, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610498265, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 36}}
2021-05-21 10:21:40,499 Node[0] Epoch[35] Batch [0-20]	Speed: 57771.34 samples/sec	accuracy=nan
2021-05-21 10:21:42,637 Node[0] Epoch[35] Batch [20-40]	Speed: 57492.25 samples/sec	accuracy=nan
2021-05-21 10:21:44,845 Node[0] Epoch[35] Batch [40-60]	Speed: 55651.83 samples/sec	accuracy=nan
2021-05-21 10:21:47,087 Node[0] Epoch[35] Batch [60-80]	Speed: 54802.26 samples/sec	accuracy=nan
2021-05-21 10:21:49,338 Node[0] Epoch[35] Batch [80-100]	Speed: 54600.60 samples/sec	accuracy=nan
2021-05-21 10:21:51,593 Node[0] Epoch[35] Batch [100-120]	Speed: 54507.09 samples/sec	accuracy=nan
2021-05-21 10:21:53,842 Node[0] Epoch[35] Batch [120-140]	Speed: 54631.66 samples/sec	accuracy=nan
2021-05-21 10:21:56,088 Node[0] Epoch[35] Batch [140-160]	Speed: 54718.20 samples/sec	accuracy=nan
2021-05-21 10:21:58,354 Node[0] Epoch[35] Batch [160-180]	Speed: 54227.83 samples/sec	accuracy=nan
2021-05-21 10:22:00,522 Node[0] Epoch[35] Batch [180-200]	Speed: 56701.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610521373, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 36}}
2021-05-21 10:22:01,374 Node[0] Epoch[35] Time cost=23.108
:::MLLOG {"namespace": "", "time_ms": 1621610521374, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55441.63006578365}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621610521374, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55441.63006578365, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610521476, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 36}}
2021-05-21 10:22:01,860 Node[0] Epoch[35] Validation-accuracy=0.761882
2021-05-21 10:22:01,860 Node[0] Epoch[35] Validation-correct-count=1587.000000
2021-05-21 10:22:01,860 Node[0] Epoch[35] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610521877, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621610521878, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7517, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621610521878, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621610521878, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 37, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621610521878, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 37}}
2021-05-21 10:22:04,023 Node[0] Epoch[36] Batch [0-20]	Speed: 57519.35 samples/sec	accuracy=nan
2021-05-21 10:22:06,159 Node[0] Epoch[36] Batch [20-40]	Speed: 57545.12 samples/sec	accuracy=nan
2021-05-21 10:22:08,363 Node[0] Epoch[36] Batch [40-60]	Speed: 55751.67 samples/sec	accuracy=nan
2021-05-21 10:22:10,616 Node[0] Epoch[36] Batch [60-80]	Speed: 54541.74 samples/sec	accuracy=nan
2021-05-21 10:22:12,875 Node[0] Epoch[36] Batch [80-100]	Speed: 54400.99 samples/sec	accuracy=nan
2021-05-21 10:22:15,127 Node[0] Epoch[36] Batch [100-120]	Speed: 54575.81 samples/sec	accuracy=nan
2021-05-21 10:22:17,385 Node[0] Epoch[36] Batch [120-140]	Speed: 54439.24 samples/sec	accuracy=nan
2021-05-21 10:22:19,651 Node[0] Epoch[36] Batch [140-160]	Speed: 54225.32 samples/sec	accuracy=nan
2021-05-21 10:22:21,913 Node[0] Epoch[36] Batch [160-180]	Speed: 54331.26 samples/sec	accuracy=nan
2021-05-21 10:22:24,077 Node[0] Epoch[36] Batch [180-200]	Speed: 56799.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610544927, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 37}}
2021-05-21 10:22:24,928 Node[0] Epoch[36] Time cost=23.050
:::MLLOG {"namespace": "", "time_ms": 1621610544928, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55582.18028028289}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621610544928, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55582.18028028289, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610544928, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 38}}
2021-05-21 10:22:27,163 Node[0] Epoch[37] Batch [0-20]	Speed: 57756.26 samples/sec	accuracy=nan
2021-05-21 10:22:29,297 Node[0] Epoch[37] Batch [20-40]	Speed: 57565.43 samples/sec	accuracy=nan
2021-05-21 10:22:31,505 Node[0] Epoch[37] Batch [40-60]	Speed: 55671.84 samples/sec	accuracy=nan
2021-05-21 10:22:33,754 Node[0] Epoch[37] Batch [60-80]	Speed: 54638.57 samples/sec	accuracy=nan
2021-05-21 10:22:36,010 Node[0] Epoch[37] Batch [80-100]	Speed: 54465.03 samples/sec	accuracy=nan
2021-05-21 10:22:38,270 Node[0] Epoch[37] Batch [100-120]	Speed: 54383.18 samples/sec	accuracy=nan
2021-05-21 10:22:40,531 Node[0] Epoch[37] Batch [120-140]	Speed: 54363.93 samples/sec	accuracy=nan
2021-05-21 10:22:42,789 Node[0] Epoch[37] Batch [140-160]	Speed: 54421.49 samples/sec	accuracy=nan
2021-05-21 10:22:45,054 Node[0] Epoch[37] Batch [160-180]	Speed: 54255.86 samples/sec	accuracy=nan
2021-05-21 10:22:47,214 Node[0] Epoch[37] Batch [180-200]	Speed: 56888.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610568064, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 38}}
2021-05-21 10:22:48,065 Node[0] Epoch[37] Time cost=23.136
:::MLLOG {"namespace": "", "time_ms": 1621610568065, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55374.497570190106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621610568065, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55374.497570190106, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610568065, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 39}}
2021-05-21 10:22:50,297 Node[0] Epoch[38] Batch [0-20]	Speed: 57821.60 samples/sec	accuracy=nan
2021-05-21 10:22:52,434 Node[0] Epoch[38] Batch [20-40]	Speed: 57502.06 samples/sec	accuracy=nan
2021-05-21 10:22:54,640 Node[0] Epoch[38] Batch [40-60]	Speed: 55709.48 samples/sec	accuracy=nan
2021-05-21 10:22:56,895 Node[0] Epoch[38] Batch [60-80]	Speed: 54516.72 samples/sec	accuracy=nan
2021-05-21 10:22:59,152 Node[0] Epoch[38] Batch [80-100]	Speed: 54436.02 samples/sec	accuracy=nan
2021-05-21 10:23:01,412 Node[0] Epoch[38] Batch [100-120]	Speed: 54390.88 samples/sec	accuracy=nan
2021-05-21 10:23:03,664 Node[0] Epoch[38] Batch [120-140]	Speed: 54558.72 samples/sec	accuracy=nan
2021-05-21 10:23:05,920 Node[0] Epoch[38] Batch [140-160]	Speed: 54464.73 samples/sec	accuracy=nan
2021-05-21 10:23:08,189 Node[0] Epoch[38] Batch [160-180]	Speed: 54173.02 samples/sec	accuracy=nan
2021-05-21 10:23:10,345 Node[0] Epoch[38] Batch [180-200]	Speed: 57003.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610591195, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 39}}
2021-05-21 10:23:11,196 Node[0] Epoch[38] Time cost=23.131
:::MLLOG {"namespace": "", "time_ms": 1621610591196, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55388.374753416465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621610591196, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55388.374753416465, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610591196, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 40}}
2021-05-21 10:23:13,429 Node[0] Epoch[39] Batch [0-20]	Speed: 57799.67 samples/sec	accuracy=nan
2021-05-21 10:23:15,570 Node[0] Epoch[39] Batch [20-40]	Speed: 57391.68 samples/sec	accuracy=nan
2021-05-21 10:23:17,768 Node[0] Epoch[39] Batch [40-60]	Speed: 55921.40 samples/sec	accuracy=nan
2021-05-21 10:23:20,020 Node[0] Epoch[39] Batch [60-80]	Speed: 54560.99 samples/sec	accuracy=nan
2021-05-21 10:23:22,273 Node[0] Epoch[39] Batch [80-100]	Speed: 54555.52 samples/sec	accuracy=nan
2021-05-21 10:23:24,533 Node[0] Epoch[39] Batch [100-120]	Speed: 54367.63 samples/sec	accuracy=nan
2021-05-21 10:23:26,781 Node[0] Epoch[39] Batch [120-140]	Speed: 54672.18 samples/sec	accuracy=nan
2021-05-21 10:23:29,040 Node[0] Epoch[39] Batch [140-160]	Speed: 54413.02 samples/sec	accuracy=nan
2021-05-21 10:23:31,304 Node[0] Epoch[39] Batch [160-180]	Speed: 54278.52 samples/sec	accuracy=nan
2021-05-21 10:23:33,462 Node[0] Epoch[39] Batch [180-200]	Speed: 56944.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621610614313, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 40}}
2021-05-21 10:23:34,314 Node[0] Epoch[39] Time cost=23.117
:::MLLOG {"namespace": "", "time_ms": 1621610614314, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55420.49021570597}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621610614314, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55420.49021570597, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621610614416, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 40}}
2021-05-21 10:23:34,860 Node[0] Epoch[39] Validation-accuracy=0.771964
2021-05-21 10:23:34,860 Node[0] Epoch[39] Validation-correct-count=1608.000000
2021-05-21 10:23:34,860 Node[0] Epoch[39] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621610614860, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621610614861, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76208, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621610614861, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621610614861, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "status": "success"}}
ENDING TIMING RUN AT 2021-05-21 10:23:42 AM
RESULT,IMAGE_CLASSIFICATION,,1001,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:42 AM
RESULT,IMAGE_CLASSIFICATION,,1001,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1001,root,2021-05-21 10:07:02 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:07:00 AM
ENDING TIMING RUN AT 2021-05-21 10:23:43 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:07:01 AM
