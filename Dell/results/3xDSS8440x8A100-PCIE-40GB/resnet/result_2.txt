+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node070 node071 node072 '
+ echo 'hosts=node070 node071 node072 '
hosts=node070 node071 node072 
+ for node in $hosts
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1621611682951, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621611682957, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621611682958, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621611682958, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621611682958, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "3xDSS8440x8A100-PCIE-40GB", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 87}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node070 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node070
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621611691364, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node071 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node071
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621611703023, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node072 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node072
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621611718632, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ export SEED=21685
+ SEED=21685
+ MPIRUN='mpirun --allow-run-as-root --bind-to none -report-bindings -np 24'
+ mpirun --allow-run-as-root --bind-to none -report-bindings -np 24 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif bash ./run_and_time_multi.sh
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
STARTING TIMING RUN AT 2021-05-21 10:42:08 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:09 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:42:10 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 21685 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node070:1039982] MCW rank 3 is not bound (or bound to all available processors)
[node070:1040026] MCW rank 6 is not bound (or bound to all available processors)
[node070:1039981] MCW rank 5 is not bound (or bound to all available processors)
[node070:1039985] MCW rank 4 is not bound (or bound to all available processors)
[node070:1039875] MCW rank 7 is not bound (or bound to all available processors)
[node070:1039984] MCW rank 1 is not bound (or bound to all available processors)
[node070:1039986] MCW rank 2 is not bound (or bound to all available processors)
[node070:1039983] MCW rank 0 is not bound (or bound to all available processors)
[node071:1704618] MCW rank 12 is not bound (or bound to all available processors)
[node071:1704614] MCW rank 15 is not bound (or bound to all available processors)
[node071:1704616] MCW rank 13 is not bound (or bound to all available processors)
[node071:1704613] MCW rank 10 is not bound (or bound to all available processors)
[node071:1704617] MCW rank 14 is not bound (or bound to all available processors)
[node071:1704641] MCW rank 8 is not bound (or bound to all available processors)
[node071:1704619] MCW rank 11 is not bound (or bound to all available processors)
[node071:1704615] MCW rank 9 is not bound (or bound to all available processors)
[node072:611565] MCW rank 23 is not bound (or bound to all available processors)
[node072:611543] MCW rank 16 is not bound (or bound to all available processors)
[node072:611539] MCW rank 19 is not bound (or bound to all available processors)
[node072:611541] MCW rank 21 is not bound (or bound to all available processors)
[node072:611540] MCW rank 20 is not bound (or bound to all available processors)
[node072:611542] MCW rank 22 is not bound (or bound to all available processors)
[node072:611538] MCW rank 18 is not bound (or bound to all available processors)
[node072:611537] MCW rank 17 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621611736023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621611760078, "event_type": "POINT_IN_TIME", "key": "seed", "value": 21685, "metadata": {"file": "train_imagenet.py", "lineno": 178}}
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:40] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:42] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:43] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:42:43] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.9.8+cuda11.3
:::MLLOG {"namespace": "", "time_ms": 1621611768580, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 256, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 286}}
[10:42:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621611774605, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774606, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774607, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774607, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 82, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774607, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774607, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774608, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774608, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774608, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774609, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774609, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774609, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774609, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774610, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774610, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774610, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774610, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774611, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774611, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774611, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774611, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774612, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774612, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774612, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774613, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774613, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774613, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774613, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774614, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774614, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774614, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774614, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774615, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774615, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774615, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774615, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774616, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774616, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774616, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774616, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774617, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774617, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774617, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774618, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774618, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774618, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774618, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774619, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774619, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774619, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774619, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774620, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774620, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774620, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774620, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774621, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774621, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774621, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774621, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774622, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774622, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774622, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774623, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774623, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774623, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774623, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621611774648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv3_weight"}}
[10:42:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for 10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
CPU
[10:42:55] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:42:56] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,405 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21511, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,405 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9294, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,406 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41912, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,406 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50306, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,406 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56928, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34292, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9701, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62382, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2079, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,406 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2468, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,406 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37759, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10207, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621611777407, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49904, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22440, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43923, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32095, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51683, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32873, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,407 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1737, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,408 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22626, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,408 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14022, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,408 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61990, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,408 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18713, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 691}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 692}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 693}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 694}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1212}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1213}}
:::MLLOG {"namespace": "", "time_ms": 1621611777410, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1214}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1215}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 6144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1216}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1217}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1219}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1220}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1226}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1228}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1230}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 10:42:57,410 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20445, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.8, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1233}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1234}}
:::MLLOG {"namespace": "", "time_ms": 1621611777411, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 44, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1235}}
:::MLLOG {"namespace": "", "time_ms": 1621611794076, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1291}}
:::MLLOG {"namespace": "", "time_ms": 1621611794077, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 463}}
:::MLLOG {"namespace": "", "time_ms": 1621611794318, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 482}}
:::MLLOG {"namespace": "", "time_ms": 1621611794319, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 877, "first_epoch_num": 1, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611794319, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 1}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:43:17,176 Node[0] Epoch[0] Batch [0-20]	Speed: 48761.51 samples/sec	accuracy=nan
2021-05-21 10:43:19,471 Node[0] Epoch[0] Batch [20-40]	Speed: 53550.04 samples/sec	accuracy=nan
2021-05-21 10:43:21,753 Node[0] Epoch[0] Batch [40-60]	Speed: 53848.23 samples/sec	accuracy=nan
2021-05-21 10:43:24,035 Node[0] Epoch[0] Batch [60-80]	Speed: 53860.29 samples/sec	accuracy=nan
2021-05-21 10:43:26,321 Node[0] Epoch[0] Batch [80-100]	Speed: 53763.96 samples/sec	accuracy=nan
2021-05-21 10:43:28,572 Node[0] Epoch[0] Batch [100-120]	Speed: 54594.07 samples/sec	accuracy=nan
2021-05-21 10:43:30,818 Node[0] Epoch[0] Batch [120-140]	Speed: 54699.40 samples/sec	accuracy=nan
2021-05-21 10:43:33,069 Node[0] Epoch[0] Batch [140-160]	Speed: 54600.39 samples/sec	accuracy=nan
2021-05-21 10:43:35,338 Node[0] Epoch[0] Batch [160-180]	Speed: 54170.91 samples/sec	accuracy=nan
2021-05-21 10:43:37,593 Node[0] Epoch[0] Batch [180-200]	Speed: 54486.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611818462, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 1}}
2021-05-21 10:43:38,463 Node[0] Epoch[0] Time cost=24.144
:::MLLOG {"namespace": "", "time_ms": 1621611818463, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 53064.325030567066}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621611818463, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 53064.325030567066, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611818464, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 2}}
2021-05-21 10:43:40,702 Node[0] Epoch[1] Batch [0-20]	Speed: 57663.91 samples/sec	accuracy=nan
2021-05-21 10:43:42,830 Node[0] Epoch[1] Batch [20-40]	Speed: 57750.03 samples/sec	accuracy=nan
2021-05-21 10:43:44,973 Node[0] Epoch[1] Batch [40-60]	Speed: 57341.77 samples/sec	accuracy=nan
2021-05-21 10:43:47,170 Node[0] Epoch[1] Batch [60-80]	Speed: 55927.66 samples/sec	accuracy=nan
2021-05-21 10:43:49,428 Node[0] Epoch[1] Batch [80-100]	Speed: 54440.87 samples/sec	accuracy=nan
2021-05-21 10:43:51,674 Node[0] Epoch[1] Batch [100-120]	Speed: 54701.32 samples/sec	accuracy=nan
2021-05-21 10:43:53,917 Node[0] Epoch[1] Batch [120-140]	Speed: 54797.44 samples/sec	accuracy=nan
2021-05-21 10:43:56,171 Node[0] Epoch[1] Batch [140-160]	Speed: 54527.56 samples/sec	accuracy=nan
2021-05-21 10:43:58,420 Node[0] Epoch[1] Batch [160-180]	Speed: 54640.72 samples/sec	accuracy=nan
2021-05-21 10:44:00,666 Node[0] Epoch[1] Batch [180-200]	Speed: 54729.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611841525, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 2}}
2021-05-21 10:44:01,526 Node[0] Epoch[1] Time cost=23.062
:::MLLOG {"namespace": "", "time_ms": 1621611841526, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55553.41595489938}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621611841526, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55553.41595489938, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611841526, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 3}}
2021-05-21 10:44:03,761 Node[0] Epoch[2] Batch [0-20]	Speed: 57740.92 samples/sec	accuracy=nan
2021-05-21 10:44:05,888 Node[0] Epoch[2] Batch [20-40]	Speed: 57784.94 samples/sec	accuracy=nan
2021-05-21 10:44:08,031 Node[0] Epoch[2] Batch [40-60]	Speed: 57348.06 samples/sec	accuracy=nan
2021-05-21 10:44:10,226 Node[0] Epoch[2] Batch [60-80]	Speed: 55986.87 samples/sec	accuracy=nan
2021-05-21 10:44:12,477 Node[0] Epoch[2] Batch [80-100]	Speed: 54591.81 samples/sec	accuracy=nan
2021-05-21 10:44:14,724 Node[0] Epoch[2] Batch [100-120]	Speed: 54699.62 samples/sec	accuracy=nan
2021-05-21 10:44:16,972 Node[0] Epoch[2] Batch [120-140]	Speed: 54655.17 samples/sec	accuracy=nan
2021-05-21 10:44:19,227 Node[0] Epoch[2] Batch [140-160]	Speed: 54503.82 samples/sec	accuracy=nan
2021-05-21 10:44:21,494 Node[0] Epoch[2] Batch [160-180]	Speed: 54204.58 samples/sec	accuracy=nan
2021-05-21 10:44:23,752 Node[0] Epoch[2] Batch [180-200]	Speed: 54438.69 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611864611, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 3}}
2021-05-21 10:44:24,612 Node[0] Epoch[2] Time cost=23.086
:::MLLOG {"namespace": "", "time_ms": 1621611864612, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55496.06880169124}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621611864612, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55496.06880169124, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611864612, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 4}}
2021-05-21 10:44:26,844 Node[0] Epoch[3] Batch [0-20]	Speed: 57818.05 samples/sec	accuracy=nan
2021-05-21 10:44:28,972 Node[0] Epoch[3] Batch [20-40]	Speed: 57756.29 samples/sec	accuracy=nan
2021-05-21 10:44:31,124 Node[0] Epoch[3] Batch [40-60]	Speed: 57106.85 samples/sec	accuracy=nan
2021-05-21 10:44:33,328 Node[0] Epoch[3] Batch [60-80]	Speed: 55752.98 samples/sec	accuracy=nan
2021-05-21 10:44:35,581 Node[0] Epoch[3] Batch [80-100]	Speed: 54548.17 samples/sec	accuracy=nan
2021-05-21 10:44:37,838 Node[0] Epoch[3] Batch [100-120]	Speed: 54448.91 samples/sec	accuracy=nan
2021-05-21 10:44:40,083 Node[0] Epoch[3] Batch [120-140]	Speed: 54752.39 samples/sec	accuracy=nan
2021-05-21 10:44:42,355 Node[0] Epoch[3] Batch [140-160]	Speed: 54078.92 samples/sec	accuracy=nan
2021-05-21 10:44:44,611 Node[0] Epoch[3] Batch [160-180]	Speed: 54479.20 samples/sec	accuracy=nan
2021-05-21 10:44:46,872 Node[0] Epoch[3] Batch [180-200]	Speed: 54352.95 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611887730, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 4}}
2021-05-21 10:44:47,731 Node[0] Epoch[3] Time cost=23.118
:::MLLOG {"namespace": "", "time_ms": 1621611887731, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55417.679340436865}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611887731, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55417.679340436865, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,830 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,831 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,832 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1621611887832, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 4}}
2021-05-21 10:44:47,832 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 10:44:47,832 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 10:44:48,355 Node[0] Epoch[3] Validation-accuracy=0.381181
2021-05-21 10:44:48,355 Node[0] Epoch[3] Validation-correct-count=794.000000
2021-05-21 10:44:48,355 Node[0] Epoch[3] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611888418, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611888418, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.38682, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611888419, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621611888419, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 5, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611888419, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 5}}
2021-05-21 10:44:50,563 Node[0] Epoch[4] Batch [0-20]	Speed: 57516.69 samples/sec	accuracy=nan
2021-05-21 10:44:52,697 Node[0] Epoch[4] Batch [20-40]	Speed: 57599.73 samples/sec	accuracy=nan
2021-05-21 10:44:54,856 Node[0] Epoch[4] Batch [40-60]	Speed: 56936.84 samples/sec	accuracy=nan
2021-05-21 10:44:57,066 Node[0] Epoch[4] Batch [60-80]	Speed: 55593.68 samples/sec	accuracy=nan
2021-05-21 10:44:59,321 Node[0] Epoch[4] Batch [80-100]	Speed: 54500.32 samples/sec	accuracy=nan
2021-05-21 10:45:01,567 Node[0] Epoch[4] Batch [100-120]	Speed: 54714.20 samples/sec	accuracy=nan
2021-05-21 10:45:03,812 Node[0] Epoch[4] Batch [120-140]	Speed: 54747.52 samples/sec	accuracy=nan
2021-05-21 10:45:06,060 Node[0] Epoch[4] Batch [140-160]	Speed: 54660.31 samples/sec	accuracy=nan
2021-05-21 10:45:08,306 Node[0] Epoch[4] Batch [160-180]	Speed: 54714.93 samples/sec	accuracy=nan
2021-05-21 10:45:10,553 Node[0] Epoch[4] Batch [180-200]	Speed: 54703.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611911407, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 5}}
2021-05-21 10:45:11,408 Node[0] Epoch[4] Time cost=22.989
:::MLLOG {"namespace": "", "time_ms": 1621611911408, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55730.0787800556}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621611911408, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55730.0787800556, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611911408, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 6}}
2021-05-21 10:45:13,650 Node[0] Epoch[5] Batch [0-20]	Speed: 57574.51 samples/sec	accuracy=nan
2021-05-21 10:45:15,783 Node[0] Epoch[5] Batch [20-40]	Speed: 57592.15 samples/sec	accuracy=nan
2021-05-21 10:45:17,947 Node[0] Epoch[5] Batch [40-60]	Speed: 56784.98 samples/sec	accuracy=nan
2021-05-21 10:45:20,165 Node[0] Epoch[5] Batch [60-80]	Speed: 55430.01 samples/sec	accuracy=nan
2021-05-21 10:45:22,415 Node[0] Epoch[5] Batch [80-100]	Speed: 54613.50 samples/sec	accuracy=nan
2021-05-21 10:45:24,664 Node[0] Epoch[5] Batch [100-120]	Speed: 54632.14 samples/sec	accuracy=nan
2021-05-21 10:45:26,914 Node[0] Epoch[5] Batch [120-140]	Speed: 54624.10 samples/sec	accuracy=nan
2021-05-21 10:45:29,185 Node[0] Epoch[5] Batch [140-160]	Speed: 54119.47 samples/sec	accuracy=nan
2021-05-21 10:45:31,433 Node[0] Epoch[5] Batch [160-180]	Speed: 54665.88 samples/sec	accuracy=nan
2021-05-21 10:45:33,684 Node[0] Epoch[5] Batch [180-200]	Speed: 54597.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611934538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 6}}
2021-05-21 10:45:34,539 Node[0] Epoch[5] Time cost=23.131
:::MLLOG {"namespace": "", "time_ms": 1621611934539, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55387.897472433215}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621611934539, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55387.897472433215, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611934539, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 7}}
2021-05-21 10:45:36,779 Node[0] Epoch[6] Batch [0-20]	Speed: 57626.76 samples/sec	accuracy=nan
2021-05-21 10:45:38,915 Node[0] Epoch[6] Batch [20-40]	Speed: 57534.21 samples/sec	accuracy=nan
2021-05-21 10:45:41,077 Node[0] Epoch[6] Batch [40-60]	Speed: 56851.18 samples/sec	accuracy=nan
2021-05-21 10:45:43,282 Node[0] Epoch[6] Batch [60-80]	Speed: 55724.45 samples/sec	accuracy=nan
2021-05-21 10:45:45,535 Node[0] Epoch[6] Batch [80-100]	Speed: 54564.38 samples/sec	accuracy=nan
2021-05-21 10:45:47,773 Node[0] Epoch[6] Batch [100-120]	Speed: 54896.10 samples/sec	accuracy=nan
2021-05-21 10:45:50,036 Node[0] Epoch[6] Batch [120-140]	Speed: 54311.81 samples/sec	accuracy=nan
2021-05-21 10:45:52,301 Node[0] Epoch[6] Batch [140-160]	Speed: 54245.96 samples/sec	accuracy=nan
2021-05-21 10:45:54,556 Node[0] Epoch[6] Batch [160-180]	Speed: 54511.47 samples/sec	accuracy=nan
2021-05-21 10:45:56,813 Node[0] Epoch[6] Batch [180-200]	Speed: 54446.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611957665, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 7}}
2021-05-21 10:45:57,666 Node[0] Epoch[6] Time cost=23.127
:::MLLOG {"namespace": "", "time_ms": 1621611957666, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55397.319584108445}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621611957666, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55397.319584108445, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611957666, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 8}}
2021-05-21 10:45:59,908 Node[0] Epoch[7] Batch [0-20]	Speed: 57557.49 samples/sec	accuracy=nan
2021-05-21 10:46:02,039 Node[0] Epoch[7] Batch [20-40]	Speed: 57656.08 samples/sec	accuracy=nan
2021-05-21 10:46:04,203 Node[0] Epoch[7] Batch [40-60]	Speed: 56792.68 samples/sec	accuracy=nan
2021-05-21 10:46:06,404 Node[0] Epoch[7] Batch [60-80]	Speed: 55828.45 samples/sec	accuracy=nan
2021-05-21 10:46:08,648 Node[0] Epoch[7] Batch [80-100]	Speed: 54787.29 samples/sec	accuracy=nan
2021-05-21 10:46:10,894 Node[0] Epoch[7] Batch [100-120]	Speed: 54704.60 samples/sec	accuracy=nan
2021-05-21 10:46:13,155 Node[0] Epoch[7] Batch [120-140]	Speed: 54359.75 samples/sec	accuracy=nan
2021-05-21 10:46:15,416 Node[0] Epoch[7] Batch [140-160]	Speed: 54354.98 samples/sec	accuracy=nan
2021-05-21 10:46:17,674 Node[0] Epoch[7] Batch [160-180]	Speed: 54424.31 samples/sec	accuracy=nan
2021-05-21 10:46:19,922 Node[0] Epoch[7] Batch [180-200]	Speed: 54662.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621611980776, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 8}}
2021-05-21 10:46:20,776 Node[0] Epoch[7] Time cost=23.110
:::MLLOG {"namespace": "", "time_ms": 1621611980776, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55438.5648145334}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621611980776, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55438.5648145334, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621611980879, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 8}}
2021-05-21 10:46:21,214 Node[0] Epoch[7] Validation-accuracy=0.445991
2021-05-21 10:46:21,215 Node[0] Epoch[7] Validation-correct-count=929.000000
2021-05-21 10:46:21,215 Node[0] Epoch[7] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621611981238, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621611981238, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45706, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621611981239, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621611981239, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 9, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621611981239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 9}}
2021-05-21 10:46:23,384 Node[0] Epoch[8] Batch [0-20]	Speed: 57547.38 samples/sec	accuracy=nan
2021-05-21 10:46:25,508 Node[0] Epoch[8] Batch [20-40]	Speed: 57846.13 samples/sec	accuracy=nan
2021-05-21 10:46:27,665 Node[0] Epoch[8] Batch [40-60]	Speed: 56991.01 samples/sec	accuracy=nan
2021-05-21 10:46:29,879 Node[0] Epoch[8] Batch [60-80]	Speed: 55503.26 samples/sec	accuracy=nan
2021-05-21 10:46:32,131 Node[0] Epoch[8] Batch [80-100]	Speed: 54568.47 samples/sec	accuracy=nan
2021-05-21 10:46:34,385 Node[0] Epoch[8] Batch [100-120]	Speed: 54517.97 samples/sec	accuracy=nan
2021-05-21 10:46:36,639 Node[0] Epoch[8] Batch [120-140]	Speed: 54534.47 samples/sec	accuracy=nan
2021-05-21 10:46:38,884 Node[0] Epoch[8] Batch [140-160]	Speed: 54741.25 samples/sec	accuracy=nan
2021-05-21 10:46:41,134 Node[0] Epoch[8] Batch [160-180]	Speed: 54599.83 samples/sec	accuracy=nan
2021-05-21 10:46:43,375 Node[0] Epoch[8] Batch [180-200]	Speed: 54840.78 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612004224, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 9}}
2021-05-21 10:46:44,226 Node[0] Epoch[8] Time cost=22.987
:::MLLOG {"namespace": "", "time_ms": 1621612004226, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55733.581565896784}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621612004226, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55733.581565896784, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612004227, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 10}}
2021-05-21 10:46:46,459 Node[0] Epoch[9] Batch [0-20]	Speed: 57788.85 samples/sec	accuracy=nan
2021-05-21 10:46:48,582 Node[0] Epoch[9] Batch [20-40]	Speed: 57870.16 samples/sec	accuracy=nan
2021-05-21 10:46:50,743 Node[0] Epoch[9] Batch [40-60]	Speed: 56886.74 samples/sec	accuracy=nan
2021-05-21 10:46:52,955 Node[0] Epoch[9] Batch [60-80]	Speed: 55538.06 samples/sec	accuracy=nan
2021-05-21 10:46:55,210 Node[0] Epoch[9] Batch [80-100]	Speed: 54512.04 samples/sec	accuracy=nan
2021-05-21 10:46:57,456 Node[0] Epoch[9] Batch [100-120]	Speed: 54713.91 samples/sec	accuracy=nan
2021-05-21 10:46:59,701 Node[0] Epoch[9] Batch [120-140]	Speed: 54741.19 samples/sec	accuracy=nan
2021-05-21 10:47:01,967 Node[0] Epoch[9] Batch [140-160]	Speed: 54233.08 samples/sec	accuracy=nan
2021-05-21 10:47:04,221 Node[0] Epoch[9] Batch [160-180]	Speed: 54521.71 samples/sec	accuracy=nan
2021-05-21 10:47:06,470 Node[0] Epoch[9] Batch [180-200]	Speed: 54654.35 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612027320, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 10}}
2021-05-21 10:47:07,322 Node[0] Epoch[9] Time cost=23.096
:::MLLOG {"namespace": "", "time_ms": 1621612027322, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55472.28748795771}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621612027322, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55472.28748795771, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612027323, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 11}}
2021-05-21 10:47:09,553 Node[0] Epoch[10] Batch [0-20]	Speed: 57816.55 samples/sec	accuracy=nan
2021-05-21 10:47:11,680 Node[0] Epoch[10] Batch [20-40]	Speed: 57796.05 samples/sec	accuracy=nan
2021-05-21 10:47:13,839 Node[0] Epoch[10] Batch [40-60]	Speed: 56912.21 samples/sec	accuracy=nan
2021-05-21 10:47:16,049 Node[0] Epoch[10] Batch [60-80]	Speed: 55601.20 samples/sec	accuracy=nan
2021-05-21 10:47:18,313 Node[0] Epoch[10] Batch [80-100]	Speed: 54297.34 samples/sec	accuracy=nan
2021-05-21 10:47:20,565 Node[0] Epoch[10] Batch [100-120]	Speed: 54570.17 samples/sec	accuracy=nan
2021-05-21 10:47:22,810 Node[0] Epoch[10] Batch [120-140]	Speed: 54726.53 samples/sec	accuracy=nan
2021-05-21 10:47:25,069 Node[0] Epoch[10] Batch [140-160]	Speed: 54403.70 samples/sec	accuracy=nan
2021-05-21 10:47:27,317 Node[0] Epoch[10] Batch [160-180]	Speed: 54677.89 samples/sec	accuracy=nan
2021-05-21 10:47:29,547 Node[0] Epoch[10] Batch [180-200]	Speed: 55092.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612050397, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 11}}
2021-05-21 10:47:30,397 Node[0] Epoch[10] Time cost=23.075
:::MLLOG {"namespace": "", "time_ms": 1621612050397, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55522.94763205948}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621612050397, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55522.94763205948, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612050397, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 12}}
2021-05-21 10:47:32,630 Node[0] Epoch[11] Batch [0-20]	Speed: 57805.12 samples/sec	accuracy=nan
2021-05-21 10:47:34,754 Node[0] Epoch[11] Batch [20-40]	Speed: 57874.70 samples/sec	accuracy=nan
2021-05-21 10:47:36,917 Node[0] Epoch[11] Batch [40-60]	Speed: 56806.58 samples/sec	accuracy=nan
2021-05-21 10:47:39,135 Node[0] Epoch[11] Batch [60-80]	Speed: 55416.82 samples/sec	accuracy=nan
2021-05-21 10:47:41,388 Node[0] Epoch[11] Batch [80-100]	Speed: 54534.51 samples/sec	accuracy=nan
2021-05-21 10:47:43,645 Node[0] Epoch[11] Batch [100-120]	Speed: 54459.39 samples/sec	accuracy=nan
2021-05-21 10:47:45,900 Node[0] Epoch[11] Batch [120-140]	Speed: 54500.98 samples/sec	accuracy=nan
2021-05-21 10:47:48,167 Node[0] Epoch[11] Batch [140-160]	Speed: 54211.93 samples/sec	accuracy=nan
2021-05-21 10:47:50,430 Node[0] Epoch[11] Batch [160-180]	Speed: 54306.03 samples/sec	accuracy=nan
2021-05-21 10:47:52,657 Node[0] Epoch[11] Batch [180-200]	Speed: 55182.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612073509, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 12}}
2021-05-21 10:47:53,509 Node[0] Epoch[11] Time cost=23.112
:::MLLOG {"namespace": "", "time_ms": 1621612073509, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55433.93583516235}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621612073509, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55433.93583516235, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612073611, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 12}}
2021-05-21 10:47:53,886 Node[0] Epoch[11] Validation-accuracy=0.516083
2021-05-21 10:47:53,886 Node[0] Epoch[11] Validation-correct-count=1075.000000
2021-05-21 10:47:53,886 Node[0] Epoch[11] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612073919, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621612073920, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5214, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621612073920, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621612073920, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 13, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612073920, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 13}}
2021-05-21 10:47:56,069 Node[0] Epoch[12] Batch [0-20]	Speed: 57502.67 samples/sec	accuracy=nan
2021-05-21 10:47:58,194 Node[0] Epoch[12] Batch [20-40]	Speed: 57812.90 samples/sec	accuracy=nan
2021-05-21 10:48:00,361 Node[0] Epoch[12] Batch [40-60]	Speed: 56730.99 samples/sec	accuracy=nan
2021-05-21 10:48:02,581 Node[0] Epoch[12] Batch [60-80]	Speed: 55349.39 samples/sec	accuracy=nan
2021-05-21 10:48:04,840 Node[0] Epoch[12] Batch [80-100]	Speed: 54399.66 samples/sec	accuracy=nan
2021-05-21 10:48:07,091 Node[0] Epoch[12] Batch [100-120]	Speed: 54588.39 samples/sec	accuracy=nan
2021-05-21 10:48:09,347 Node[0] Epoch[12] Batch [120-140]	Speed: 54480.99 samples/sec	accuracy=nan
2021-05-21 10:48:11,593 Node[0] Epoch[12] Batch [140-160]	Speed: 54717.86 samples/sec	accuracy=nan
2021-05-21 10:48:13,855 Node[0] Epoch[12] Batch [160-180]	Speed: 54319.31 samples/sec	accuracy=nan
2021-05-21 10:48:16,087 Node[0] Epoch[12] Batch [180-200]	Speed: 55070.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612096938, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 13}}
2021-05-21 10:48:16,939 Node[0] Epoch[12] Time cost=23.018
:::MLLOG {"namespace": "", "time_ms": 1621612096939, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55658.274606207066}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621612096939, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55658.274606207066, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612096939, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 14}}
2021-05-21 10:48:19,175 Node[0] Epoch[13] Batch [0-20]	Speed: 57719.66 samples/sec	accuracy=nan
2021-05-21 10:48:21,300 Node[0] Epoch[13] Batch [20-40]	Speed: 57813.71 samples/sec	accuracy=nan
2021-05-21 10:48:23,469 Node[0] Epoch[13] Batch [40-60]	Speed: 56665.53 samples/sec	accuracy=nan
2021-05-21 10:48:25,687 Node[0] Epoch[13] Batch [60-80]	Speed: 55405.09 samples/sec	accuracy=nan
2021-05-21 10:48:27,943 Node[0] Epoch[13] Batch [80-100]	Speed: 54480.16 samples/sec	accuracy=nan
2021-05-21 10:48:30,192 Node[0] Epoch[13] Batch [100-120]	Speed: 54631.96 samples/sec	accuracy=nan
2021-05-21 10:48:32,442 Node[0] Epoch[13] Batch [120-140]	Speed: 54622.29 samples/sec	accuracy=nan
2021-05-21 10:48:34,699 Node[0] Epoch[13] Batch [140-160]	Speed: 54461.67 samples/sec	accuracy=nan
2021-05-21 10:48:36,964 Node[0] Epoch[13] Batch [160-180]	Speed: 54256.34 samples/sec	accuracy=nan
2021-05-21 10:48:39,185 Node[0] Epoch[13] Batch [180-200]	Speed: 55317.89 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612120036, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 14}}
2021-05-21 10:48:40,036 Node[0] Epoch[13] Time cost=23.097
:::MLLOG {"namespace": "", "time_ms": 1621612120036, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55469.48051756159}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621612120036, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55469.48051756159, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612120036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 15}}
2021-05-21 10:48:42,269 Node[0] Epoch[14] Batch [0-20]	Speed: 57792.03 samples/sec	accuracy=nan
2021-05-21 10:48:44,396 Node[0] Epoch[14] Batch [20-40]	Speed: 57786.01 samples/sec	accuracy=nan
2021-05-21 10:48:46,564 Node[0] Epoch[14] Batch [40-60]	Speed: 56682.38 samples/sec	accuracy=nan
2021-05-21 10:48:48,785 Node[0] Epoch[14] Batch [60-80]	Speed: 55333.47 samples/sec	accuracy=nan
2021-05-21 10:48:51,027 Node[0] Epoch[14] Batch [80-100]	Speed: 54810.52 samples/sec	accuracy=nan
2021-05-21 10:48:53,270 Node[0] Epoch[14] Batch [100-120]	Speed: 54806.76 samples/sec	accuracy=nan
2021-05-21 10:48:55,530 Node[0] Epoch[14] Batch [120-140]	Speed: 54370.75 samples/sec	accuracy=nan
2021-05-21 10:48:57,772 Node[0] Epoch[14] Batch [140-160]	Speed: 54808.71 samples/sec	accuracy=nan
2021-05-21 10:49:00,029 Node[0] Epoch[14] Batch [160-180]	Speed: 54463.25 samples/sec	accuracy=nan
2021-05-21 10:49:02,262 Node[0] Epoch[14] Batch [180-200]	Speed: 55028.88 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612143111, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 15}}
2021-05-21 10:49:03,112 Node[0] Epoch[14] Time cost=23.075
:::MLLOG {"namespace": "", "time_ms": 1621612143112, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55520.96157871844}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621612143112, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55520.96157871844, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612143112, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 16}}
2021-05-21 10:49:05,344 Node[0] Epoch[15] Batch [0-20]	Speed: 57833.17 samples/sec	accuracy=nan
2021-05-21 10:49:07,468 Node[0] Epoch[15] Batch [20-40]	Speed: 57841.89 samples/sec	accuracy=nan
2021-05-21 10:49:09,637 Node[0] Epoch[15] Batch [40-60]	Speed: 56678.17 samples/sec	accuracy=nan
2021-05-21 10:49:11,871 Node[0] Epoch[15] Batch [60-80]	Speed: 55002.91 samples/sec	accuracy=nan
2021-05-21 10:49:14,136 Node[0] Epoch[15] Batch [80-100]	Speed: 54260.42 samples/sec	accuracy=nan
2021-05-21 10:49:16,388 Node[0] Epoch[15] Batch [100-120]	Speed: 54579.61 samples/sec	accuracy=nan
2021-05-21 10:49:18,634 Node[0] Epoch[15] Batch [120-140]	Speed: 54698.18 samples/sec	accuracy=nan
2021-05-21 10:49:20,890 Node[0] Epoch[15] Batch [140-160]	Speed: 54477.53 samples/sec	accuracy=nan
2021-05-21 10:49:23,143 Node[0] Epoch[15] Batch [160-180]	Speed: 54545.15 samples/sec	accuracy=nan
2021-05-21 10:49:25,359 Node[0] Epoch[15] Batch [180-200]	Speed: 55453.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612166208, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 16}}
2021-05-21 10:49:26,209 Node[0] Epoch[15] Time cost=23.097
:::MLLOG {"namespace": "", "time_ms": 1621612166209, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55468.405789949386}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621612166210, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55468.405789949386, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612166312, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 16}}
2021-05-21 10:49:26,582 Node[0] Epoch[15] Validation-accuracy=0.570811
2021-05-21 10:49:26,582 Node[0] Epoch[15] Validation-correct-count=1189.000000
2021-05-21 10:49:26,582 Node[0] Epoch[15] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612166590, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621612166590, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57844, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621612166590, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621612166590, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 17, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612166590, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 17}}
2021-05-21 10:49:28,752 Node[0] Epoch[16] Batch [0-20]	Speed: 57071.01 samples/sec	accuracy=nan
2021-05-21 10:49:30,878 Node[0] Epoch[16] Batch [20-40]	Speed: 57801.63 samples/sec	accuracy=nan
2021-05-21 10:49:33,045 Node[0] Epoch[16] Batch [40-60]	Speed: 56706.36 samples/sec	accuracy=nan
2021-05-21 10:49:35,271 Node[0] Epoch[16] Batch [60-80]	Speed: 55222.00 samples/sec	accuracy=nan
2021-05-21 10:49:37,518 Node[0] Epoch[16] Batch [80-100]	Speed: 54682.93 samples/sec	accuracy=nan
2021-05-21 10:49:39,773 Node[0] Epoch[16] Batch [100-120]	Speed: 54493.83 samples/sec	accuracy=nan
2021-05-21 10:49:42,027 Node[0] Epoch[16] Batch [120-140]	Speed: 54530.84 samples/sec	accuracy=nan
2021-05-21 10:49:44,296 Node[0] Epoch[16] Batch [140-160]	Speed: 54169.04 samples/sec	accuracy=nan
2021-05-21 10:49:46,555 Node[0] Epoch[16] Batch [160-180]	Speed: 54393.37 samples/sec	accuracy=nan
2021-05-21 10:49:48,768 Node[0] Epoch[16] Batch [180-200]	Speed: 55534.43 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612189618, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 17}}
2021-05-21 10:49:49,619 Node[0] Epoch[16] Time cost=23.028
:::MLLOG {"namespace": "", "time_ms": 1621612189619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55634.96696948511}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621612189619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55634.96696948511, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612189619, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 18}}
2021-05-21 10:49:51,852 Node[0] Epoch[17] Batch [0-20]	Speed: 57798.26 samples/sec	accuracy=nan
2021-05-21 10:49:53,977 Node[0] Epoch[17] Batch [20-40]	Speed: 57842.48 samples/sec	accuracy=nan
2021-05-21 10:49:56,152 Node[0] Epoch[17] Batch [40-60]	Speed: 56503.71 samples/sec	accuracy=nan
2021-05-21 10:49:58,381 Node[0] Epoch[17] Batch [60-80]	Speed: 55126.37 samples/sec	accuracy=nan
2021-05-21 10:50:00,640 Node[0] Epoch[17] Batch [80-100]	Speed: 54410.20 samples/sec	accuracy=nan
2021-05-21 10:50:02,904 Node[0] Epoch[17] Batch [100-120]	Speed: 54273.52 samples/sec	accuracy=nan
2021-05-21 10:50:05,155 Node[0] Epoch[17] Batch [120-140]	Speed: 54592.89 samples/sec	accuracy=nan
2021-05-21 10:50:07,413 Node[0] Epoch[17] Batch [140-160]	Speed: 54426.14 samples/sec	accuracy=nan
2021-05-21 10:50:09,679 Node[0] Epoch[17] Batch [160-180]	Speed: 54232.17 samples/sec	accuracy=nan
2021-05-21 10:50:11,904 Node[0] Epoch[17] Batch [180-200]	Speed: 55226.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612212756, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 18}}
2021-05-21 10:50:12,757 Node[0] Epoch[17] Time cost=23.138
:::MLLOG {"namespace": "", "time_ms": 1621612212757, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55371.04947299135}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621612212757, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55371.04947299135, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612212757, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 19}}
2021-05-21 10:50:14,990 Node[0] Epoch[18] Batch [0-20]	Speed: 57797.71 samples/sec	accuracy=nan
2021-05-21 10:50:17,116 Node[0] Epoch[18] Batch [20-40]	Speed: 57809.80 samples/sec	accuracy=nan
2021-05-21 10:50:19,292 Node[0] Epoch[18] Batch [40-60]	Speed: 56472.45 samples/sec	accuracy=nan
2021-05-21 10:50:21,516 Node[0] Epoch[18] Batch [60-80]	Speed: 55255.98 samples/sec	accuracy=nan
2021-05-21 10:50:23,774 Node[0] Epoch[18] Batch [80-100]	Speed: 54409.81 samples/sec	accuracy=nan
2021-05-21 10:50:26,034 Node[0] Epoch[18] Batch [100-120]	Speed: 54378.65 samples/sec	accuracy=nan
2021-05-21 10:50:28,296 Node[0] Epoch[18] Batch [120-140]	Speed: 54347.77 samples/sec	accuracy=nan
2021-05-21 10:50:30,553 Node[0] Epoch[18] Batch [140-160]	Speed: 54425.74 samples/sec	accuracy=nan
2021-05-21 10:50:32,803 Node[0] Epoch[18] Batch [160-180]	Speed: 54633.18 samples/sec	accuracy=nan
2021-05-21 10:50:35,031 Node[0] Epoch[18] Batch [180-200]	Speed: 55163.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612235882, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 19}}
2021-05-21 10:50:35,882 Node[0] Epoch[18] Time cost=23.125
:::MLLOG {"namespace": "", "time_ms": 1621612235882, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55401.30614617437}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621612235883, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55401.30614617437, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612235883, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 20}}
2021-05-21 10:50:38,116 Node[0] Epoch[19] Batch [0-20]	Speed: 57795.32 samples/sec	accuracy=nan
2021-05-21 10:50:40,242 Node[0] Epoch[19] Batch [20-40]	Speed: 57802.97 samples/sec	accuracy=nan
2021-05-21 10:50:42,417 Node[0] Epoch[19] Batch [40-60]	Speed: 56477.91 samples/sec	accuracy=nan
2021-05-21 10:50:44,638 Node[0] Epoch[19] Batch [60-80]	Speed: 55331.91 samples/sec	accuracy=nan
2021-05-21 10:50:46,891 Node[0] Epoch[19] Batch [80-100]	Speed: 54552.76 samples/sec	accuracy=nan
2021-05-21 10:50:49,142 Node[0] Epoch[19] Batch [100-120]	Speed: 54601.07 samples/sec	accuracy=nan
2021-05-21 10:50:51,392 Node[0] Epoch[19] Batch [120-140]	Speed: 54607.30 samples/sec	accuracy=nan
2021-05-21 10:50:53,651 Node[0] Epoch[19] Batch [140-160]	Speed: 54406.73 samples/sec	accuracy=nan
2021-05-21 10:50:55,897 Node[0] Epoch[19] Batch [160-180]	Speed: 54710.26 samples/sec	accuracy=nan
2021-05-21 10:50:58,102 Node[0] Epoch[19] Batch [180-200]	Speed: 55750.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612258953, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 20}}
2021-05-21 10:50:58,953 Node[0] Epoch[19] Time cost=23.070
:::MLLOG {"namespace": "", "time_ms": 1621612258953, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55533.28463152386}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621612258953, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55533.28463152386, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612259056, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 20}}
2021-05-21 10:50:59,324 Node[0] Epoch[19] Validation-accuracy=0.650024
2021-05-21 10:50:59,324 Node[0] Epoch[19] Validation-correct-count=1354.000000
2021-05-21 10:50:59,324 Node[0] Epoch[19] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612259331, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621612259331, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64542, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621612259331, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621612259332, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 21, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612259332, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 21}}
2021-05-21 10:51:01,494 Node[0] Epoch[20] Batch [0-20]	Speed: 57093.91 samples/sec	accuracy=nan
2021-05-21 10:51:03,619 Node[0] Epoch[20] Batch [20-40]	Speed: 57835.58 samples/sec	accuracy=nan
2021-05-21 10:51:05,794 Node[0] Epoch[20] Batch [40-60]	Speed: 56497.90 samples/sec	accuracy=nan
2021-05-21 10:51:08,020 Node[0] Epoch[20] Batch [60-80]	Speed: 55204.05 samples/sec	accuracy=nan
2021-05-21 10:51:10,270 Node[0] Epoch[20] Batch [80-100]	Speed: 54621.31 samples/sec	accuracy=nan
2021-05-21 10:51:12,518 Node[0] Epoch[20] Batch [100-120]	Speed: 54676.02 samples/sec	accuracy=nan
2021-05-21 10:51:14,776 Node[0] Epoch[20] Batch [120-140]	Speed: 54416.21 samples/sec	accuracy=nan
2021-05-21 10:51:17,042 Node[0] Epoch[20] Batch [140-160]	Speed: 54239.31 samples/sec	accuracy=nan
2021-05-21 10:51:19,297 Node[0] Epoch[20] Batch [160-180]	Speed: 54501.19 samples/sec	accuracy=nan
2021-05-21 10:51:21,504 Node[0] Epoch[20] Batch [180-200]	Speed: 55663.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612282355, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 21}}
2021-05-21 10:51:22,355 Node[0] Epoch[20] Time cost=23.023
:::MLLOG {"namespace": "", "time_ms": 1621612282355, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55646.67798931184}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621612282355, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55646.67798931184, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612282355, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 22}}
2021-05-21 10:51:24,588 Node[0] Epoch[21] Batch [0-20]	Speed: 57808.05 samples/sec	accuracy=nan
2021-05-21 10:51:26,715 Node[0] Epoch[21] Batch [20-40]	Speed: 57772.42 samples/sec	accuracy=nan
2021-05-21 10:51:28,895 Node[0] Epoch[21] Batch [40-60]	Speed: 56382.50 samples/sec	accuracy=nan
2021-05-21 10:51:31,130 Node[0] Epoch[21] Batch [60-80]	Speed: 54975.69 samples/sec	accuracy=nan
2021-05-21 10:51:33,401 Node[0] Epoch[21] Batch [80-100]	Speed: 54116.83 samples/sec	accuracy=nan
2021-05-21 10:51:35,655 Node[0] Epoch[21] Batch [100-120]	Speed: 54532.86 samples/sec	accuracy=nan
2021-05-21 10:51:37,902 Node[0] Epoch[21] Batch [120-140]	Speed: 54689.92 samples/sec	accuracy=nan
2021-05-21 10:51:40,154 Node[0] Epoch[21] Batch [140-160]	Speed: 54560.09 samples/sec	accuracy=nan
2021-05-21 10:51:42,412 Node[0] Epoch[21] Batch [160-180]	Speed: 54441.08 samples/sec	accuracy=nan
2021-05-21 10:51:44,607 Node[0] Epoch[21] Batch [180-200]	Speed: 55984.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612305458, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 22}}
2021-05-21 10:51:45,459 Node[0] Epoch[21] Time cost=23.104
:::MLLOG {"namespace": "", "time_ms": 1621612305460, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55452.40431877494}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621612305460, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55452.40431877494, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612305460, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 23}}
2021-05-21 10:51:47,693 Node[0] Epoch[22] Batch [0-20]	Speed: 57772.83 samples/sec	accuracy=nan
2021-05-21 10:51:49,822 Node[0] Epoch[22] Batch [20-40]	Speed: 57719.93 samples/sec	accuracy=nan
2021-05-21 10:51:52,004 Node[0] Epoch[22] Batch [40-60]	Speed: 56335.57 samples/sec	accuracy=nan
2021-05-21 10:51:54,238 Node[0] Epoch[22] Batch [60-80]	Speed: 55005.94 samples/sec	accuracy=nan
2021-05-21 10:51:56,510 Node[0] Epoch[22] Batch [80-100]	Speed: 54085.53 samples/sec	accuracy=nan
2021-05-21 10:51:58,747 Node[0] Epoch[22] Batch [100-120]	Speed: 54945.32 samples/sec	accuracy=nan
2021-05-21 10:52:00,997 Node[0] Epoch[22] Batch [120-140]	Speed: 54612.37 samples/sec	accuracy=nan
2021-05-21 10:52:03,262 Node[0] Epoch[22] Batch [140-160]	Speed: 54260.00 samples/sec	accuracy=nan
2021-05-21 10:52:05,517 Node[0] Epoch[22] Batch [160-180]	Speed: 54500.16 samples/sec	accuracy=nan
2021-05-21 10:52:07,720 Node[0] Epoch[22] Batch [180-200]	Speed: 55777.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612328571, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 23}}
2021-05-21 10:52:08,572 Node[0] Epoch[22] Time cost=23.112
:::MLLOG {"namespace": "", "time_ms": 1621612328572, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55432.800154769386}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621612328572, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55432.800154769386, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612328572, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 24}}
2021-05-21 10:52:10,807 Node[0] Epoch[23] Batch [0-20]	Speed: 57742.21 samples/sec	accuracy=nan
2021-05-21 10:52:12,934 Node[0] Epoch[23] Batch [20-40]	Speed: 57780.75 samples/sec	accuracy=nan
2021-05-21 10:52:15,114 Node[0] Epoch[23] Batch [40-60]	Speed: 56380.43 samples/sec	accuracy=nan
2021-05-21 10:52:17,356 Node[0] Epoch[23] Batch [60-80]	Speed: 54816.56 samples/sec	accuracy=nan
2021-05-21 10:52:19,616 Node[0] Epoch[23] Batch [80-100]	Speed: 54366.61 samples/sec	accuracy=nan
2021-05-21 10:52:21,876 Node[0] Epoch[23] Batch [100-120]	Speed: 54384.04 samples/sec	accuracy=nan
2021-05-21 10:52:24,121 Node[0] Epoch[23] Batch [120-140]	Speed: 54738.14 samples/sec	accuracy=nan
2021-05-21 10:52:26,379 Node[0] Epoch[23] Batch [140-160]	Speed: 54430.94 samples/sec	accuracy=nan
2021-05-21 10:52:28,631 Node[0] Epoch[23] Batch [160-180]	Speed: 54562.37 samples/sec	accuracy=nan
2021-05-21 10:52:30,832 Node[0] Epoch[23] Batch [180-200]	Speed: 55840.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612351684, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 24}}
2021-05-21 10:52:31,685 Node[0] Epoch[23] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621612351685, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55431.71255281874}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621612351685, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55431.71255281874, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612351787, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 24}}
2021-05-21 10:52:32,057 Node[0] Epoch[23] Validation-accuracy=0.667787
2021-05-21 10:52:32,057 Node[0] Epoch[23] Validation-correct-count=1391.000000
2021-05-21 10:52:32,057 Node[0] Epoch[23] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612352062, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621612352062, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67562, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621612352062, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621612352062, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 25, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612352062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 25}}
2021-05-21 10:52:34,236 Node[0] Epoch[24] Batch [0-20]	Speed: 56782.82 samples/sec	accuracy=nan
2021-05-21 10:52:36,371 Node[0] Epoch[24] Batch [20-40]	Speed: 57571.53 samples/sec	accuracy=nan
2021-05-21 10:52:38,559 Node[0] Epoch[24] Batch [40-60]	Speed: 56150.26 samples/sec	accuracy=nan
2021-05-21 10:52:40,788 Node[0] Epoch[24] Batch [60-80]	Speed: 55143.05 samples/sec	accuracy=nan
2021-05-21 10:52:43,040 Node[0] Epoch[24] Batch [80-100]	Speed: 54568.28 samples/sec	accuracy=nan
2021-05-21 10:52:45,287 Node[0] Epoch[24] Batch [100-120]	Speed: 54696.26 samples/sec	accuracy=nan
2021-05-21 10:52:47,547 Node[0] Epoch[24] Batch [120-140]	Speed: 54379.55 samples/sec	accuracy=nan
2021-05-21 10:52:49,809 Node[0] Epoch[24] Batch [140-160]	Speed: 54325.15 samples/sec	accuracy=nan
2021-05-21 10:52:52,064 Node[0] Epoch[24] Batch [160-180]	Speed: 54500.76 samples/sec	accuracy=nan
2021-05-21 10:52:54,270 Node[0] Epoch[24] Batch [180-200]	Speed: 55702.55 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612375124, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 25}}
2021-05-21 10:52:55,125 Node[0] Epoch[24] Time cost=23.062
:::MLLOG {"namespace": "", "time_ms": 1621612375125, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55552.74343130324}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621612375125, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55552.74343130324, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612375125, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 26}}
2021-05-21 10:52:57,367 Node[0] Epoch[25] Batch [0-20]	Speed: 57567.24 samples/sec	accuracy=nan
2021-05-21 10:52:59,504 Node[0] Epoch[25] Batch [20-40]	Speed: 57500.85 samples/sec	accuracy=nan
2021-05-21 10:53:01,694 Node[0] Epoch[25] Batch [40-60]	Speed: 56122.28 samples/sec	accuracy=nan
2021-05-21 10:53:03,927 Node[0] Epoch[25] Batch [60-80]	Speed: 55020.25 samples/sec	accuracy=nan
2021-05-21 10:53:06,184 Node[0] Epoch[25] Batch [80-100]	Speed: 54451.09 samples/sec	accuracy=nan
2021-05-21 10:53:08,438 Node[0] Epoch[25] Batch [100-120]	Speed: 54511.19 samples/sec	accuracy=nan
2021-05-21 10:53:10,702 Node[0] Epoch[25] Batch [120-140]	Speed: 54287.54 samples/sec	accuracy=nan
2021-05-21 10:53:12,955 Node[0] Epoch[25] Batch [140-160]	Speed: 54544.94 samples/sec	accuracy=nan
2021-05-21 10:53:15,205 Node[0] Epoch[25] Batch [160-180]	Speed: 54614.61 samples/sec	accuracy=nan
2021-05-21 10:53:17,396 Node[0] Epoch[25] Batch [180-200]	Speed: 56100.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612398249, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 26}}
2021-05-21 10:53:18,249 Node[0] Epoch[25] Time cost=23.124
:::MLLOG {"namespace": "", "time_ms": 1621612398249, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55404.09308235608}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621612398249, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55404.09308235608, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612398249, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 27}}
2021-05-21 10:53:20,491 Node[0] Epoch[26] Batch [0-20]	Speed: 57581.44 samples/sec	accuracy=nan
2021-05-21 10:53:22,628 Node[0] Epoch[26] Batch [20-40]	Speed: 57527.30 samples/sec	accuracy=nan
2021-05-21 10:53:24,821 Node[0] Epoch[26] Batch [40-60]	Speed: 56023.72 samples/sec	accuracy=nan
2021-05-21 10:53:27,060 Node[0] Epoch[26] Batch [60-80]	Speed: 54891.03 samples/sec	accuracy=nan
2021-05-21 10:53:29,325 Node[0] Epoch[26] Batch [80-100]	Speed: 54268.24 samples/sec	accuracy=nan
2021-05-21 10:53:31,583 Node[0] Epoch[26] Batch [100-120]	Speed: 54416.38 samples/sec	accuracy=nan
2021-05-21 10:53:33,856 Node[0] Epoch[26] Batch [120-140]	Speed: 54063.26 samples/sec	accuracy=nan
2021-05-21 10:53:36,110 Node[0] Epoch[26] Batch [140-160]	Speed: 54536.17 samples/sec	accuracy=nan
2021-05-21 10:53:38,378 Node[0] Epoch[26] Batch [160-180]	Speed: 54176.90 samples/sec	accuracy=nan
2021-05-21 10:53:40,567 Node[0] Epoch[26] Batch [180-200]	Speed: 56130.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612421420, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 27}}
2021-05-21 10:53:41,421 Node[0] Epoch[26] Time cost=23.171
:::MLLOG {"namespace": "", "time_ms": 1621612421421, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55291.63629270998}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621612421421, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55291.63629270998, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612421421, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 28}}
2021-05-21 10:53:43,664 Node[0] Epoch[27] Batch [0-20]	Speed: 57515.20 samples/sec	accuracy=nan
2021-05-21 10:53:45,801 Node[0] Epoch[27] Batch [20-40]	Speed: 57513.13 samples/sec	accuracy=nan
2021-05-21 10:53:47,992 Node[0] Epoch[27] Batch [40-60]	Speed: 56078.20 samples/sec	accuracy=nan
2021-05-21 10:53:50,238 Node[0] Epoch[27] Batch [60-80]	Speed: 54719.47 samples/sec	accuracy=nan
2021-05-21 10:53:52,494 Node[0] Epoch[27] Batch [80-100]	Speed: 54484.27 samples/sec	accuracy=nan
2021-05-21 10:53:54,738 Node[0] Epoch[27] Batch [100-120]	Speed: 54770.32 samples/sec	accuracy=nan
2021-05-21 10:53:56,987 Node[0] Epoch[27] Batch [120-140]	Speed: 54631.61 samples/sec	accuracy=nan
2021-05-21 10:53:59,245 Node[0] Epoch[27] Batch [140-160]	Speed: 54422.35 samples/sec	accuracy=nan
2021-05-21 10:54:01,504 Node[0] Epoch[27] Batch [160-180]	Speed: 54409.35 samples/sec	accuracy=nan
2021-05-21 10:54:03,692 Node[0] Epoch[27] Batch [180-200]	Speed: 56149.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612444546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 28}}
2021-05-21 10:54:04,547 Node[0] Epoch[27] Time cost=23.126
:::MLLOG {"namespace": "", "time_ms": 1621612444547, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55400.21578158178}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621612444547, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55400.21578158178, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612444650, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 28}}
2021-05-21 10:54:04,918 Node[0] Epoch[27] Validation-accuracy=0.723956
2021-05-21 10:54:04,919 Node[0] Epoch[27] Validation-correct-count=1508.000000
2021-05-21 10:54:04,919 Node[0] Epoch[27] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612444921, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621612444922, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.71362, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621612444922, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621612444922, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 29, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612444922, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 29}}
2021-05-21 10:54:07,091 Node[0] Epoch[28] Batch [0-20]	Speed: 56914.27 samples/sec	accuracy=nan
2021-05-21 10:54:09,227 Node[0] Epoch[28] Batch [20-40]	Speed: 57545.24 samples/sec	accuracy=nan
2021-05-21 10:54:11,425 Node[0] Epoch[28] Batch [40-60]	Speed: 55921.98 samples/sec	accuracy=nan
2021-05-21 10:54:13,662 Node[0] Epoch[28] Batch [60-80]	Speed: 54921.60 samples/sec	accuracy=nan
2021-05-21 10:54:15,911 Node[0] Epoch[28] Batch [80-100]	Speed: 54642.62 samples/sec	accuracy=nan
2021-05-21 10:54:18,170 Node[0] Epoch[28] Batch [100-120]	Speed: 54409.40 samples/sec	accuracy=nan
2021-05-21 10:54:20,426 Node[0] Epoch[28] Batch [120-140]	Speed: 54467.83 samples/sec	accuracy=nan
2021-05-21 10:54:22,676 Node[0] Epoch[28] Batch [140-160]	Speed: 54616.02 samples/sec	accuracy=nan
2021-05-21 10:54:24,941 Node[0] Epoch[28] Batch [160-180]	Speed: 54247.64 samples/sec	accuracy=nan
2021-05-21 10:54:27,133 Node[0] Epoch[28] Batch [180-200]	Speed: 56063.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612467988, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 29}}
2021-05-21 10:54:27,988 Node[0] Epoch[28] Time cost=23.066
:::MLLOG {"namespace": "", "time_ms": 1621612467988, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55543.699542291964}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621612467988, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55543.699542291964, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612467988, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 30}}
2021-05-21 10:54:30,230 Node[0] Epoch[29] Batch [0-20]	Speed: 57603.24 samples/sec	accuracy=nan
2021-05-21 10:54:32,368 Node[0] Epoch[29] Batch [20-40]	Speed: 57466.51 samples/sec	accuracy=nan
2021-05-21 10:54:34,566 Node[0] Epoch[29] Batch [40-60]	Speed: 55924.89 samples/sec	accuracy=nan
2021-05-21 10:54:36,807 Node[0] Epoch[29] Batch [60-80]	Speed: 54817.97 samples/sec	accuracy=nan
2021-05-21 10:54:39,059 Node[0] Epoch[29] Batch [80-100]	Speed: 54589.14 samples/sec	accuracy=nan
2021-05-21 10:54:41,316 Node[0] Epoch[29] Batch [100-120]	Speed: 54435.00 samples/sec	accuracy=nan
2021-05-21 10:54:43,566 Node[0] Epoch[29] Batch [120-140]	Speed: 54625.54 samples/sec	accuracy=nan
2021-05-21 10:54:45,818 Node[0] Epoch[29] Batch [140-160]	Speed: 54576.22 samples/sec	accuracy=nan
2021-05-21 10:54:48,087 Node[0] Epoch[29] Batch [160-180]	Speed: 54150.64 samples/sec	accuracy=nan
2021-05-21 10:54:50,271 Node[0] Epoch[29] Batch [180-200]	Speed: 56262.99 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612491125, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 30}}
2021-05-21 10:54:51,126 Node[0] Epoch[29] Time cost=23.137
:::MLLOG {"namespace": "", "time_ms": 1621612491126, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55372.6048580131}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621612491126, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55372.6048580131, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612491126, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 31}}
2021-05-21 10:54:53,367 Node[0] Epoch[30] Batch [0-20]	Speed: 57597.04 samples/sec	accuracy=nan
2021-05-21 10:54:55,503 Node[0] Epoch[30] Batch [20-40]	Speed: 57527.89 samples/sec	accuracy=nan
2021-05-21 10:54:57,700 Node[0] Epoch[30] Batch [40-60]	Speed: 55924.07 samples/sec	accuracy=nan
2021-05-21 10:54:59,947 Node[0] Epoch[30] Batch [60-80]	Speed: 54696.52 samples/sec	accuracy=nan
2021-05-21 10:55:02,206 Node[0] Epoch[30] Batch [80-100]	Speed: 54417.34 samples/sec	accuracy=nan
2021-05-21 10:55:04,460 Node[0] Epoch[30] Batch [100-120]	Speed: 54522.26 samples/sec	accuracy=nan
2021-05-21 10:55:06,708 Node[0] Epoch[30] Batch [120-140]	Speed: 54647.90 samples/sec	accuracy=nan
2021-05-21 10:55:08,965 Node[0] Epoch[30] Batch [140-160]	Speed: 54449.85 samples/sec	accuracy=nan
2021-05-21 10:55:11,214 Node[0] Epoch[30] Batch [160-180]	Speed: 54650.24 samples/sec	accuracy=nan
2021-05-21 10:55:13,396 Node[0] Epoch[30] Batch [180-200]	Speed: 56311.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612514249, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 31}}
2021-05-21 10:55:14,250 Node[0] Epoch[30] Time cost=23.124
:::MLLOG {"namespace": "", "time_ms": 1621612514250, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55403.64694808206}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621612514250, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55403.64694808206, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612514251, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 32}}
2021-05-21 10:55:16,491 Node[0] Epoch[31] Batch [0-20]	Speed: 57589.28 samples/sec	accuracy=nan
2021-05-21 10:55:18,630 Node[0] Epoch[31] Batch [20-40]	Speed: 57470.58 samples/sec	accuracy=nan
2021-05-21 10:55:20,826 Node[0] Epoch[31] Batch [40-60]	Speed: 55965.17 samples/sec	accuracy=nan
2021-05-21 10:55:23,065 Node[0] Epoch[31] Batch [60-80]	Speed: 54870.15 samples/sec	accuracy=nan
2021-05-21 10:55:25,325 Node[0] Epoch[31] Batch [80-100]	Speed: 54380.38 samples/sec	accuracy=nan
2021-05-21 10:55:27,579 Node[0] Epoch[31] Batch [100-120]	Speed: 54526.15 samples/sec	accuracy=nan
2021-05-21 10:55:29,827 Node[0] Epoch[31] Batch [120-140]	Speed: 54665.63 samples/sec	accuracy=nan
2021-05-21 10:55:32,086 Node[0] Epoch[31] Batch [140-160]	Speed: 54408.99 samples/sec	accuracy=nan
2021-05-21 10:55:34,358 Node[0] Epoch[31] Batch [160-180]	Speed: 54076.27 samples/sec	accuracy=nan
2021-05-21 10:55:36,543 Node[0] Epoch[31] Batch [180-200]	Speed: 56249.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612537393, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 32}}
2021-05-21 10:55:37,393 Node[0] Epoch[31] Time cost=23.142
:::MLLOG {"namespace": "", "time_ms": 1621612537393, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55359.98856174614}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621612537393, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55359.98856174614, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612537496, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 32}}
2021-05-21 10:55:37,816 Node[0] Epoch[31] Validation-accuracy=0.734518
2021-05-21 10:55:37,816 Node[0] Epoch[31] Validation-correct-count=1530.000000
2021-05-21 10:55:37,816 Node[0] Epoch[31] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612537844, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621612537844, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7333, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621612537845, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621612537845, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 33, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612537845, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 33}}
2021-05-21 10:55:40,003 Node[0] Epoch[32] Batch [0-20]	Speed: 57192.34 samples/sec	accuracy=nan
2021-05-21 10:55:42,137 Node[0] Epoch[32] Batch [20-40]	Speed: 57602.75 samples/sec	accuracy=nan
2021-05-21 10:55:44,339 Node[0] Epoch[32] Batch [40-60]	Speed: 55794.30 samples/sec	accuracy=nan
2021-05-21 10:55:46,592 Node[0] Epoch[32] Batch [60-80]	Speed: 54556.30 samples/sec	accuracy=nan
2021-05-21 10:55:48,845 Node[0] Epoch[32] Batch [80-100]	Speed: 54538.87 samples/sec	accuracy=nan
2021-05-21 10:55:51,088 Node[0] Epoch[32] Batch [100-120]	Speed: 54795.72 samples/sec	accuracy=nan
2021-05-21 10:55:53,349 Node[0] Epoch[32] Batch [120-140]	Speed: 54355.89 samples/sec	accuracy=nan
2021-05-21 10:55:55,611 Node[0] Epoch[32] Batch [140-160]	Speed: 54333.48 samples/sec	accuracy=nan
2021-05-21 10:55:57,873 Node[0] Epoch[32] Batch [160-180]	Speed: 54308.65 samples/sec	accuracy=nan
2021-05-21 10:56:00,047 Node[0] Epoch[32] Batch [180-200]	Speed: 56548.35 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612560897, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 33}}
2021-05-21 10:56:00,898 Node[0] Epoch[32] Time cost=23.053
:::MLLOG {"namespace": "", "time_ms": 1621612560898, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55574.59125611548}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621612560898, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55574.59125611548, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612560898, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 34}}
2021-05-21 10:56:03,134 Node[0] Epoch[33] Batch [0-20]	Speed: 57746.07 samples/sec	accuracy=nan
2021-05-21 10:56:05,269 Node[0] Epoch[33] Batch [20-40]	Speed: 57560.68 samples/sec	accuracy=nan
2021-05-21 10:56:07,465 Node[0] Epoch[33] Batch [40-60]	Speed: 55943.29 samples/sec	accuracy=nan
2021-05-21 10:56:09,725 Node[0] Epoch[33] Batch [60-80]	Speed: 54375.74 samples/sec	accuracy=nan
2021-05-21 10:56:11,975 Node[0] Epoch[33] Batch [80-100]	Speed: 54618.96 samples/sec	accuracy=nan
2021-05-21 10:56:14,223 Node[0] Epoch[33] Batch [100-120]	Speed: 54687.28 samples/sec	accuracy=nan
2021-05-21 10:56:16,480 Node[0] Epoch[33] Batch [120-140]	Speed: 54436.14 samples/sec	accuracy=nan
2021-05-21 10:56:18,732 Node[0] Epoch[33] Batch [140-160]	Speed: 54576.48 samples/sec	accuracy=nan
2021-05-21 10:56:20,997 Node[0] Epoch[33] Batch [160-180]	Speed: 54251.28 samples/sec	accuracy=nan
2021-05-21 10:56:23,167 Node[0] Epoch[33] Batch [180-200]	Speed: 56646.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612584017, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 34}}
2021-05-21 10:56:24,018 Node[0] Epoch[33] Time cost=23.120
:::MLLOG {"namespace": "", "time_ms": 1621612584018, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55414.721885069375}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621612584018, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55414.721885069375, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612584018, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 35}}
2021-05-21 10:56:26,254 Node[0] Epoch[34] Batch [0-20]	Speed: 57720.79 samples/sec	accuracy=nan
2021-05-21 10:56:28,386 Node[0] Epoch[34] Batch [20-40]	Speed: 57644.31 samples/sec	accuracy=nan
2021-05-21 10:56:30,584 Node[0] Epoch[34] Batch [40-60]	Speed: 55898.25 samples/sec	accuracy=nan
2021-05-21 10:56:32,834 Node[0] Epoch[34] Batch [60-80]	Speed: 54624.70 samples/sec	accuracy=nan
2021-05-21 10:56:35,080 Node[0] Epoch[34] Batch [80-100]	Speed: 54727.29 samples/sec	accuracy=nan
2021-05-21 10:56:37,336 Node[0] Epoch[34] Batch [100-120]	Speed: 54458.83 samples/sec	accuracy=nan
2021-05-21 10:56:39,589 Node[0] Epoch[34] Batch [120-140]	Speed: 54541.48 samples/sec	accuracy=nan
2021-05-21 10:56:41,838 Node[0] Epoch[34] Batch [140-160]	Speed: 54658.21 samples/sec	accuracy=nan
2021-05-21 10:56:44,096 Node[0] Epoch[34] Batch [160-180]	Speed: 54418.48 samples/sec	accuracy=nan
2021-05-21 10:56:46,264 Node[0] Epoch[34] Batch [180-200]	Speed: 56691.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612607115, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 35}}
2021-05-21 10:56:47,116 Node[0] Epoch[34] Time cost=23.097
:::MLLOG {"namespace": "", "time_ms": 1621612607116, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55467.94201519133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621612607116, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55467.94201519133, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612607116, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 36}}
2021-05-21 10:56:49,353 Node[0] Epoch[35] Batch [0-20]	Speed: 57681.63 samples/sec	accuracy=nan
2021-05-21 10:56:51,487 Node[0] Epoch[35] Batch [20-40]	Speed: 57610.56 samples/sec	accuracy=nan
2021-05-21 10:56:53,689 Node[0] Epoch[35] Batch [40-60]	Speed: 55790.21 samples/sec	accuracy=nan
2021-05-21 10:56:55,941 Node[0] Epoch[35] Batch [60-80]	Speed: 54585.16 samples/sec	accuracy=nan
2021-05-21 10:56:58,192 Node[0] Epoch[35] Batch [80-100]	Speed: 54578.47 samples/sec	accuracy=nan
2021-05-21 10:57:00,454 Node[0] Epoch[35] Batch [100-120]	Speed: 54333.71 samples/sec	accuracy=nan
2021-05-21 10:57:02,706 Node[0] Epoch[35] Batch [120-140]	Speed: 54564.88 samples/sec	accuracy=nan
2021-05-21 10:57:04,965 Node[0] Epoch[35] Batch [140-160]	Speed: 54422.00 samples/sec	accuracy=nan
2021-05-21 10:57:07,243 Node[0] Epoch[35] Batch [160-180]	Speed: 53942.92 samples/sec	accuracy=nan
2021-05-21 10:57:09,399 Node[0] Epoch[35] Batch [180-200]	Speed: 56995.89 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612630249, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 36}}
2021-05-21 10:57:10,250 Node[0] Epoch[35] Time cost=23.133
:::MLLOG {"namespace": "", "time_ms": 1621612630250, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55381.5542987324}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621612630250, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55381.5542987324, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612630352, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 36}}
2021-05-21 10:57:10,717 Node[0] Epoch[35] Validation-accuracy=0.758041
2021-05-21 10:57:10,717 Node[0] Epoch[35] Validation-correct-count=1579.000000
2021-05-21 10:57:10,717 Node[0] Epoch[35] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612630763, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621612630764, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75048, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621612630764, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621612630764, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 37, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612630764, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 37}}
2021-05-21 10:57:12,909 Node[0] Epoch[36] Batch [0-20]	Speed: 57572.00 samples/sec	accuracy=nan
2021-05-21 10:57:15,045 Node[0] Epoch[36] Batch [20-40]	Speed: 57525.88 samples/sec	accuracy=nan
2021-05-21 10:57:17,251 Node[0] Epoch[36] Batch [40-60]	Speed: 55709.92 samples/sec	accuracy=nan
2021-05-21 10:57:19,505 Node[0] Epoch[36] Batch [60-80]	Speed: 54527.49 samples/sec	accuracy=nan
2021-05-21 10:57:21,752 Node[0] Epoch[36] Batch [80-100]	Speed: 54690.11 samples/sec	accuracy=nan
2021-05-21 10:57:24,005 Node[0] Epoch[36] Batch [100-120]	Speed: 54547.37 samples/sec	accuracy=nan
2021-05-21 10:57:26,265 Node[0] Epoch[36] Batch [120-140]	Speed: 54357.75 samples/sec	accuracy=nan
2021-05-21 10:57:28,521 Node[0] Epoch[36] Batch [140-160]	Speed: 54479.91 samples/sec	accuracy=nan
2021-05-21 10:57:30,784 Node[0] Epoch[36] Batch [160-180]	Speed: 54313.84 samples/sec	accuracy=nan
2021-05-21 10:57:32,944 Node[0] Epoch[36] Batch [180-200]	Speed: 56888.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612653794, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 37}}
2021-05-21 10:57:33,795 Node[0] Epoch[36] Time cost=23.031
:::MLLOG {"namespace": "", "time_ms": 1621612653795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55628.088532614674}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621612653795, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55628.088532614674, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612653795, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 38}}
2021-05-21 10:57:36,029 Node[0] Epoch[37] Batch [0-20]	Speed: 57769.19 samples/sec	accuracy=nan
2021-05-21 10:57:38,168 Node[0] Epoch[37] Batch [20-40]	Speed: 57449.37 samples/sec	accuracy=nan
2021-05-21 10:57:40,378 Node[0] Epoch[37] Batch [40-60]	Speed: 55607.19 samples/sec	accuracy=nan
2021-05-21 10:57:42,636 Node[0] Epoch[37] Batch [60-80]	Speed: 54420.98 samples/sec	accuracy=nan
2021-05-21 10:57:44,891 Node[0] Epoch[37] Batch [80-100]	Speed: 54510.80 samples/sec	accuracy=nan
2021-05-21 10:57:47,151 Node[0] Epoch[37] Batch [100-120]	Speed: 54361.03 samples/sec	accuracy=nan
2021-05-21 10:57:49,416 Node[0] Epoch[37] Batch [120-140]	Speed: 54260.68 samples/sec	accuracy=nan
2021-05-21 10:57:51,663 Node[0] Epoch[37] Batch [140-160]	Speed: 54698.79 samples/sec	accuracy=nan
2021-05-21 10:57:53,919 Node[0] Epoch[37] Batch [160-180]	Speed: 54466.78 samples/sec	accuracy=nan
2021-05-21 10:57:56,074 Node[0] Epoch[37] Batch [180-200]	Speed: 57021.50 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612676925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 38}}
2021-05-21 10:57:56,926 Node[0] Epoch[37] Time cost=23.130
:::MLLOG {"namespace": "", "time_ms": 1621612676926, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55389.13408102426}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621612676926, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55389.13408102426, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612676926, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 39}}
2021-05-21 10:57:59,161 Node[0] Epoch[38] Batch [0-20]	Speed: 57738.78 samples/sec	accuracy=nan
2021-05-21 10:58:01,300 Node[0] Epoch[38] Batch [20-40]	Speed: 57453.69 samples/sec	accuracy=nan
2021-05-21 10:58:03,516 Node[0] Epoch[38] Batch [40-60]	Speed: 55464.83 samples/sec	accuracy=nan
2021-05-21 10:58:05,763 Node[0] Epoch[38] Batch [60-80]	Speed: 54681.75 samples/sec	accuracy=nan
2021-05-21 10:58:08,016 Node[0] Epoch[38] Batch [80-100]	Speed: 54564.36 samples/sec	accuracy=nan
2021-05-21 10:58:10,271 Node[0] Epoch[38] Batch [100-120]	Speed: 54493.36 samples/sec	accuracy=nan
2021-05-21 10:58:12,543 Node[0] Epoch[38] Batch [120-140]	Speed: 54080.52 samples/sec	accuracy=nan
2021-05-21 10:58:14,800 Node[0] Epoch[38] Batch [140-160]	Speed: 54465.44 samples/sec	accuracy=nan
2021-05-21 10:58:17,061 Node[0] Epoch[38] Batch [160-180]	Speed: 54350.77 samples/sec	accuracy=nan
2021-05-21 10:58:19,221 Node[0] Epoch[38] Batch [180-200]	Speed: 56872.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612700073, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 39}}
2021-05-21 10:58:20,073 Node[0] Epoch[38] Time cost=23.147
:::MLLOG {"namespace": "", "time_ms": 1621612700073, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55348.57461679488}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621612700074, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55348.57461679488, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612700074, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 40}}
2021-05-21 10:58:22,309 Node[0] Epoch[39] Batch [0-20]	Speed: 57760.98 samples/sec	accuracy=nan
2021-05-21 10:58:24,453 Node[0] Epoch[39] Batch [20-40]	Speed: 57322.98 samples/sec	accuracy=nan
2021-05-21 10:58:26,656 Node[0] Epoch[39] Batch [40-60]	Speed: 55771.18 samples/sec	accuracy=nan
2021-05-21 10:58:28,913 Node[0] Epoch[39] Batch [60-80]	Speed: 54443.37 samples/sec	accuracy=nan
2021-05-21 10:58:31,165 Node[0] Epoch[39] Batch [80-100]	Speed: 54586.28 samples/sec	accuracy=nan
2021-05-21 10:58:33,423 Node[0] Epoch[39] Batch [100-120]	Speed: 54416.03 samples/sec	accuracy=nan
2021-05-21 10:58:35,687 Node[0] Epoch[39] Batch [120-140]	Speed: 54271.45 samples/sec	accuracy=nan
2021-05-21 10:58:37,942 Node[0] Epoch[39] Batch [140-160]	Speed: 54519.53 samples/sec	accuracy=nan
2021-05-21 10:58:40,208 Node[0] Epoch[39] Batch [160-180]	Speed: 54220.90 samples/sec	accuracy=nan
2021-05-21 10:58:42,362 Node[0] Epoch[39] Batch [180-200]	Speed: 57044.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612723213, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 40}}
2021-05-21 10:58:43,214 Node[0] Epoch[39] Time cost=23.140
:::MLLOG {"namespace": "", "time_ms": 1621612723214, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55364.904103451765}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621612723214, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55364.904103451765, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612723316, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 40}}
2021-05-21 10:58:43,707 Node[0] Epoch[39] Validation-accuracy=0.769083
2021-05-21 10:58:43,707 Node[0] Epoch[39] Validation-correct-count=1602.000000
2021-05-21 10:58:43,707 Node[0] Epoch[39] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612723743, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621612723743, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7605, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621612723744, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621612723744, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "status": "success"}}
ENDING TIMING RUN AT 2021-05-21 10:58:51 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:51 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:42:09 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 10:42:08 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
ENDING TIMING RUN AT 2021-05-21 10:58:52 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:42:10 AM
