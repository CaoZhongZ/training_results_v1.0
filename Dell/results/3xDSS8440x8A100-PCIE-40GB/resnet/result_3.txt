+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node070 node071 node072 '
+ echo 'hosts=node070 node071 node072 '
hosts=node070 node071 node072 
+ for node in $hosts
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1621612735544, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621612735550, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621612735550, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621612735550, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621612735551, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "3xDSS8440x8A100-PCIE-40GB", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 87}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node070 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node070
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621612743991, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node071 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node071
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621612755725, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node072 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node072
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621612770211, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ export SEED=15703
+ SEED=15703
+ MPIRUN='mpirun --allow-run-as-root --bind-to none -report-bindings -np 24'
+ mpirun --allow-run-as-root --bind-to none -report-bindings -np 24 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif bash ./run_and_time_multi.sh
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:40 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 10:59:41 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 15703 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node070:1043698] MCW rank 5 is not bound (or bound to all available processors)
[node070:1043693] MCW rank 1 is not bound (or bound to all available processors)
[node070:1043694] MCW rank 0 is not bound (or bound to all available processors)
[node070:1043696] MCW rank 7 is not bound (or bound to all available processors)
[node070:1043700] MCW rank 3 is not bound (or bound to all available processors)
[node070:1043741] MCW rank 4 is not bound (or bound to all available processors)
[node070:1043695] MCW rank 6 is not bound (or bound to all available processors)
[node070:1043699] MCW rank 2 is not bound (or bound to all available processors)
[node071:1707019] MCW rank 10 is not bound (or bound to all available processors)
[node071:1707018] MCW rank 14 is not bound (or bound to all available processors)
[node071:1707016] MCW rank 9 is not bound (or bound to all available processors)
[node071:1707017] MCW rank 11 is not bound (or bound to all available processors)
[node071:1707041] MCW rank 13 is not bound (or bound to all available processors)
[node071:1707013] MCW rank 12 is not bound (or bound to all available processors)
[node071:1707015] MCW rank 15 is not bound (or bound to all available processors)
[node071:1707014] MCW rank 8 is not bound (or bound to all available processors)
[node072:613907] MCW rank 16 is not bound (or bound to all available processors)
[node072:613911] MCW rank 20 is not bound (or bound to all available processors)
[node072:613913] MCW rank 18 is not bound (or bound to all available processors)
[node072:613909] MCW rank 22 is not bound (or bound to all available processors)
[node072:613936] MCW rank 23 is not bound (or bound to all available processors)
[node072:613910] MCW rank 19 is not bound (or bound to all available processors)
[node072:613908] MCW rank 21 is not bound (or bound to all available processors)
[node072:613912] MCW rank 17 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787822, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787822, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621612787823, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621612811707, "event_type": "POINT_IN_TIME", "key": "seed", "value": 15703, "metadata": {"file": "train_imagenet.py", "lineno": 178}}
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:11] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:12] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:14] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:15] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:00:15] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.9.8+cuda11.3
:::MLLOG {"namespace": "", "time_ms": 1621612820647, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 256, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 286}}
[11:00:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621612826468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 82, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621612826507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv3_weight"}}
[11:00:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:00:27] ../src/storage/storage.cc:199: Using [11:00:27] ../src/storage/storage.cc:199: Using Pooled (Naive)Pooled (Naive) StorageManager for CPU
 StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,281 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49697, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,282 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24249, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621612829282, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24837, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,282 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14951, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,282 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2032, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19904, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33512, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9256, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54193, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54719, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35754, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37631, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=485, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9502, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38657, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35261, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,283 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24235, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46485, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59971, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56035, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16367, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40247, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,284 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62511, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621612829283, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 691}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 692}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 693}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 694}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1212}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1213}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1214}}
:::MLLOG {"namespace": "", "time_ms": 1621612829285, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1215}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 6144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1216}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1217}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1219}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1220}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1226}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1228}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1230}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1232}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.8, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1233}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1234}}
:::MLLOG {"namespace": "", "time_ms": 1621612829286, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 44, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1235}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:00:29,285 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49231, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621612846088, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1291}}
:::MLLOG {"namespace": "", "time_ms": 1621612846089, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 463}}
:::MLLOG {"namespace": "", "time_ms": 1621612846329, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 482}}
:::MLLOG {"namespace": "", "time_ms": 1621612846329, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 877, "first_epoch_num": 1, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612846330, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 1}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:00:49,125 Node[0] Epoch[0] Batch [0-20]	Speed: 48778.92 samples/sec	accuracy=nan
2021-05-21 11:00:51,419 Node[0] Epoch[0] Batch [20-40]	Speed: 53577.58 samples/sec	accuracy=nan
2021-05-21 11:00:53,692 Node[0] Epoch[0] Batch [40-60]	Speed: 54062.71 samples/sec	accuracy=nan
2021-05-21 11:00:55,950 Node[0] Epoch[0] Batch [60-80]	Speed: 54433.55 samples/sec	accuracy=nan
2021-05-21 11:00:58,199 Node[0] Epoch[0] Batch [80-100]	Speed: 54637.31 samples/sec	accuracy=nan
2021-05-21 11:01:00,447 Node[0] Epoch[0] Batch [100-120]	Speed: 54672.94 samples/sec	accuracy=nan
2021-05-21 11:01:02,690 Node[0] Epoch[0] Batch [120-140]	Speed: 54780.85 samples/sec	accuracy=nan
2021-05-21 11:01:04,940 Node[0] Epoch[0] Batch [140-160]	Speed: 54621.36 samples/sec	accuracy=nan
2021-05-21 11:01:07,191 Node[0] Epoch[0] Batch [160-180]	Speed: 54598.26 samples/sec	accuracy=nan
2021-05-21 11:01:09,446 Node[0] Epoch[0] Batch [180-200]	Speed: 54482.83 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612870332, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 1}}
2021-05-21 11:01:10,332 Node[0] Epoch[0] Time cost=24.003
:::MLLOG {"namespace": "", "time_ms": 1621612870332, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 53376.02809339567}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621612870333, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 53376.02809339567, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612870333, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 2}}
2021-05-21 11:01:12,560 Node[0] Epoch[1] Batch [0-20]	Speed: 57948.71 samples/sec	accuracy=nan
2021-05-21 11:01:14,682 Node[0] Epoch[1] Batch [20-40]	Speed: 57912.12 samples/sec	accuracy=nan
2021-05-21 11:01:16,825 Node[0] Epoch[1] Batch [40-60]	Speed: 57322.17 samples/sec	accuracy=nan
2021-05-21 11:01:19,027 Node[0] Epoch[1] Batch [60-80]	Speed: 55814.71 samples/sec	accuracy=nan
2021-05-21 11:01:21,259 Node[0] Epoch[1] Batch [80-100]	Speed: 55049.92 samples/sec	accuracy=nan
2021-05-21 11:01:23,502 Node[0] Epoch[1] Batch [100-120]	Speed: 54801.13 samples/sec	accuracy=nan
2021-05-21 11:01:25,746 Node[0] Epoch[1] Batch [120-140]	Speed: 54776.07 samples/sec	accuracy=nan
2021-05-21 11:01:27,992 Node[0] Epoch[1] Batch [140-160]	Speed: 54698.37 samples/sec	accuracy=nan
2021-05-21 11:01:30,237 Node[0] Epoch[1] Batch [160-180]	Speed: 54758.50 samples/sec	accuracy=nan
2021-05-21 11:01:32,486 Node[0] Epoch[1] Batch [180-200]	Speed: 54643.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612893347, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 2}}
2021-05-21 11:01:33,347 Node[0] Epoch[1] Time cost=23.014
:::MLLOG {"namespace": "", "time_ms": 1621612893347, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55668.28028283477}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621612893347, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55668.28028283477, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612893347, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 3}}
2021-05-21 11:01:35,579 Node[0] Epoch[2] Batch [0-20]	Speed: 57823.03 samples/sec	accuracy=nan
2021-05-21 11:01:37,705 Node[0] Epoch[2] Batch [20-40]	Speed: 57784.62 samples/sec	accuracy=nan
2021-05-21 11:01:39,854 Node[0] Epoch[2] Batch [40-60]	Speed: 57200.68 samples/sec	accuracy=nan
2021-05-21 11:01:42,058 Node[0] Epoch[2] Batch [60-80]	Speed: 55762.15 samples/sec	accuracy=nan
2021-05-21 11:01:44,322 Node[0] Epoch[2] Batch [80-100]	Speed: 54281.49 samples/sec	accuracy=nan
2021-05-21 11:01:46,570 Node[0] Epoch[2] Batch [100-120]	Speed: 54657.50 samples/sec	accuracy=nan
2021-05-21 11:01:48,818 Node[0] Epoch[2] Batch [120-140]	Speed: 54667.33 samples/sec	accuracy=nan
2021-05-21 11:01:51,075 Node[0] Epoch[2] Batch [140-160]	Speed: 54457.02 samples/sec	accuracy=nan
2021-05-21 11:01:53,326 Node[0] Epoch[2] Batch [160-180]	Speed: 54598.30 samples/sec	accuracy=nan
2021-05-21 11:01:55,583 Node[0] Epoch[2] Batch [180-200]	Speed: 54435.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612916440, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 3}}
2021-05-21 11:01:56,440 Node[0] Epoch[2] Time cost=23.093
:::MLLOG {"namespace": "", "time_ms": 1621612916440, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55478.46760323508}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621612916441, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55478.46760323508, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612916441, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 4}}
2021-05-21 11:01:58,672 Node[0] Epoch[3] Batch [0-20]	Speed: 57829.41 samples/sec	accuracy=nan
2021-05-21 11:02:00,797 Node[0] Epoch[3] Batch [20-40]	Speed: 57841.83 samples/sec	accuracy=nan
2021-05-21 11:02:02,947 Node[0] Epoch[3] Batch [40-60]	Speed: 57159.55 samples/sec	accuracy=nan
2021-05-21 11:02:05,158 Node[0] Epoch[3] Batch [60-80]	Speed: 55599.36 samples/sec	accuracy=nan
2021-05-21 11:02:07,413 Node[0] Epoch[3] Batch [80-100]	Speed: 54493.29 samples/sec	accuracy=nan
2021-05-21 11:02:09,658 Node[0] Epoch[3] Batch [100-120]	Speed: 54727.69 samples/sec	accuracy=nan
2021-05-21 11:02:11,902 Node[0] Epoch[3] Batch [120-140]	Speed: 54780.71 samples/sec	accuracy=nan
2021-05-21 11:02:14,150 Node[0] Epoch[3] Batch [140-160]	Speed: 54658.99 samples/sec	accuracy=nan
2021-05-21 11:02:16,395 Node[0] Epoch[3] Batch [160-180]	Speed: 54739.86 samples/sec	accuracy=nan
2021-05-21 11:02:18,657 Node[0] Epoch[3] Batch [180-200]	Speed: 54338.69 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612939514, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 4}}
2021-05-21 11:02:19,515 Node[0] Epoch[3] Time cost=23.074
:::MLLOG {"namespace": "", "time_ms": 1621612939515, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55523.94587543379}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612939515, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55523.94587543379, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,616 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1621612939617, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 4}}
2021-05-21 11:02:19,618 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:02:19,617 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 11:02:20,122 Node[0] Epoch[3] Validation-accuracy=0.375420
2021-05-21 11:02:20,122 Node[0] Epoch[3] Validation-correct-count=782.000000
2021-05-21 11:02:20,122 Node[0] Epoch[3] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621612940216, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612940216, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.38054, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612940216, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621612940216, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 5, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621612940216, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 5}}
2021-05-21 11:02:22,354 Node[0] Epoch[4] Batch [0-20]	Speed: 57713.41 samples/sec	accuracy=nan
2021-05-21 11:02:24,481 Node[0] Epoch[4] Batch [20-40]	Speed: 57780.75 samples/sec	accuracy=nan
2021-05-21 11:02:26,632 Node[0] Epoch[4] Batch [40-60]	Speed: 57122.07 samples/sec	accuracy=nan
2021-05-21 11:02:28,843 Node[0] Epoch[4] Batch [60-80]	Speed: 55590.79 samples/sec	accuracy=nan
2021-05-21 11:02:31,106 Node[0] Epoch[4] Batch [80-100]	Speed: 54304.72 samples/sec	accuracy=nan
2021-05-21 11:02:33,372 Node[0] Epoch[4] Batch [100-120]	Speed: 54212.66 samples/sec	accuracy=nan
2021-05-21 11:02:35,624 Node[0] Epoch[4] Batch [120-140]	Speed: 54591.34 samples/sec	accuracy=nan
2021-05-21 11:02:37,876 Node[0] Epoch[4] Batch [140-160]	Speed: 54551.06 samples/sec	accuracy=nan
2021-05-21 11:02:40,135 Node[0] Epoch[4] Batch [160-180]	Speed: 54405.81 samples/sec	accuracy=nan
2021-05-21 11:02:42,400 Node[0] Epoch[4] Batch [180-200]	Speed: 54248.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612963250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 5}}
2021-05-21 11:02:43,250 Node[0] Epoch[4] Time cost=23.034
:::MLLOG {"namespace": "", "time_ms": 1621612963250, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55620.75582574105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621612963251, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55620.75582574105, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612963251, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 6}}
2021-05-21 11:02:45,483 Node[0] Epoch[5] Batch [0-20]	Speed: 57806.88 samples/sec	accuracy=nan
2021-05-21 11:02:47,609 Node[0] Epoch[5] Batch [20-40]	Speed: 57794.93 samples/sec	accuracy=nan
2021-05-21 11:02:49,766 Node[0] Epoch[5] Batch [40-60]	Speed: 56983.18 samples/sec	accuracy=nan
2021-05-21 11:02:51,983 Node[0] Epoch[5] Batch [60-80]	Speed: 55443.29 samples/sec	accuracy=nan
2021-05-21 11:02:54,230 Node[0] Epoch[5] Batch [80-100]	Speed: 54691.01 samples/sec	accuracy=nan
2021-05-21 11:02:56,478 Node[0] Epoch[5] Batch [100-120]	Speed: 54656.57 samples/sec	accuracy=nan
2021-05-21 11:02:58,731 Node[0] Epoch[5] Batch [120-140]	Speed: 54543.94 samples/sec	accuracy=nan
2021-05-21 11:03:00,985 Node[0] Epoch[5] Batch [140-160]	Speed: 54527.44 samples/sec	accuracy=nan
2021-05-21 11:03:03,233 Node[0] Epoch[5] Batch [160-180]	Speed: 54655.34 samples/sec	accuracy=nan
2021-05-21 11:03:05,482 Node[0] Epoch[5] Batch [180-200]	Speed: 54644.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621612986335, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 6}}
2021-05-21 11:03:06,336 Node[0] Epoch[5] Time cost=23.085
:::MLLOG {"namespace": "", "time_ms": 1621612986336, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55498.373483107775}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621612986336, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55498.373483107775, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621612986336, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 7}}
2021-05-21 11:03:08,567 Node[0] Epoch[6] Batch [0-20]	Speed: 57841.54 samples/sec	accuracy=nan
2021-05-21 11:03:10,693 Node[0] Epoch[6] Batch [20-40]	Speed: 57807.55 samples/sec	accuracy=nan
2021-05-21 11:03:12,850 Node[0] Epoch[6] Batch [40-60]	Speed: 56987.13 samples/sec	accuracy=nan
2021-05-21 11:03:15,075 Node[0] Epoch[6] Batch [60-80]	Speed: 55227.99 samples/sec	accuracy=nan
2021-05-21 11:03:17,346 Node[0] Epoch[6] Batch [80-100]	Speed: 54109.87 samples/sec	accuracy=nan
2021-05-21 11:03:19,599 Node[0] Epoch[6] Batch [100-120]	Speed: 54541.37 samples/sec	accuracy=nan
2021-05-21 11:03:21,841 Node[0] Epoch[6] Batch [120-140]	Speed: 54827.65 samples/sec	accuracy=nan
2021-05-21 11:03:24,094 Node[0] Epoch[6] Batch [140-160]	Speed: 54527.88 samples/sec	accuracy=nan
2021-05-21 11:03:26,355 Node[0] Epoch[6] Batch [160-180]	Speed: 54348.12 samples/sec	accuracy=nan
2021-05-21 11:03:28,605 Node[0] Epoch[6] Batch [180-200]	Speed: 54636.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613009456, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 7}}
2021-05-21 11:03:29,457 Node[0] Epoch[6] Time cost=23.121
:::MLLOG {"namespace": "", "time_ms": 1621613009457, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55410.26258211163}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621613009458, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55410.26258211163, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613009458, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 8}}
2021-05-21 11:03:31,690 Node[0] Epoch[7] Batch [0-20]	Speed: 57803.40 samples/sec	accuracy=nan
2021-05-21 11:03:33,816 Node[0] Epoch[7] Batch [20-40]	Speed: 57793.05 samples/sec	accuracy=nan
2021-05-21 11:03:35,971 Node[0] Epoch[7] Batch [40-60]	Speed: 57036.89 samples/sec	accuracy=nan
2021-05-21 11:03:38,183 Node[0] Epoch[7] Batch [60-80]	Speed: 55555.25 samples/sec	accuracy=nan
2021-05-21 11:03:40,435 Node[0] Epoch[7] Batch [80-100]	Speed: 54557.89 samples/sec	accuracy=nan
2021-05-21 11:03:42,684 Node[0] Epoch[7] Batch [100-120]	Speed: 54651.10 samples/sec	accuracy=nan
2021-05-21 11:03:44,929 Node[0] Epoch[7] Batch [120-140]	Speed: 54753.16 samples/sec	accuracy=nan
2021-05-21 11:03:47,181 Node[0] Epoch[7] Batch [140-160]	Speed: 54559.19 samples/sec	accuracy=nan
2021-05-21 11:03:49,430 Node[0] Epoch[7] Batch [160-180]	Speed: 54643.40 samples/sec	accuracy=nan
2021-05-21 11:03:51,684 Node[0] Epoch[7] Batch [180-200]	Speed: 54535.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613032535, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 8}}
2021-05-21 11:03:52,535 Node[0] Epoch[7] Time cost=23.077
:::MLLOG {"namespace": "", "time_ms": 1621613032535, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55516.668701098606}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621613032535, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55516.668701098606, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613032638, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 8}}
2021-05-21 11:03:52,973 Node[0] Epoch[7] Validation-accuracy=0.460874
2021-05-21 11:03:52,973 Node[0] Epoch[7] Validation-correct-count=960.000000
2021-05-21 11:03:52,973 Node[0] Epoch[7] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613033023, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621613033023, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4752, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621613033023, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621613033023, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 9, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613033023, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 9}}
2021-05-21 11:03:55,168 Node[0] Epoch[8] Batch [0-20]	Speed: 57497.84 samples/sec	accuracy=nan
2021-05-21 11:03:57,302 Node[0] Epoch[8] Batch [20-40]	Speed: 57599.93 samples/sec	accuracy=nan
2021-05-21 11:03:59,464 Node[0] Epoch[8] Batch [40-60]	Speed: 56829.70 samples/sec	accuracy=nan
2021-05-21 11:04:01,689 Node[0] Epoch[8] Batch [60-80]	Speed: 55249.67 samples/sec	accuracy=nan
2021-05-21 11:04:03,939 Node[0] Epoch[8] Batch [80-100]	Speed: 54599.19 samples/sec	accuracy=nan
2021-05-21 11:04:06,188 Node[0] Epoch[8] Batch [100-120]	Speed: 54663.51 samples/sec	accuracy=nan
2021-05-21 11:04:08,438 Node[0] Epoch[8] Batch [120-140]	Speed: 54594.79 samples/sec	accuracy=nan
2021-05-21 11:04:10,695 Node[0] Epoch[8] Batch [140-160]	Speed: 54456.07 samples/sec	accuracy=nan
2021-05-21 11:04:12,949 Node[0] Epoch[8] Batch [160-180]	Speed: 54514.43 samples/sec	accuracy=nan
2021-05-21 11:04:15,200 Node[0] Epoch[8] Batch [180-200]	Speed: 54597.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613056051, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 9}}
2021-05-21 11:04:16,052 Node[0] Epoch[8] Time cost=23.029
:::MLLOG {"namespace": "", "time_ms": 1621613056052, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55633.85702036578}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621613056052, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55633.85702036578, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613056052, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 10}}
2021-05-21 11:04:18,293 Node[0] Epoch[9] Batch [0-20]	Speed: 57607.41 samples/sec	accuracy=nan
2021-05-21 11:04:20,425 Node[0] Epoch[9] Batch [20-40]	Speed: 57621.72 samples/sec	accuracy=nan
2021-05-21 11:04:22,589 Node[0] Epoch[9] Batch [40-60]	Speed: 56804.69 samples/sec	accuracy=nan
2021-05-21 11:04:24,800 Node[0] Epoch[9] Batch [60-80]	Speed: 55578.85 samples/sec	accuracy=nan
2021-05-21 11:04:27,055 Node[0] Epoch[9] Batch [80-100]	Speed: 54500.95 samples/sec	accuracy=nan
2021-05-21 11:04:29,303 Node[0] Epoch[9] Batch [100-120]	Speed: 54663.48 samples/sec	accuracy=nan
2021-05-21 11:04:31,548 Node[0] Epoch[9] Batch [120-140]	Speed: 54741.32 samples/sec	accuracy=nan
2021-05-21 11:04:33,798 Node[0] Epoch[9] Batch [140-160]	Speed: 54604.06 samples/sec	accuracy=nan
2021-05-21 11:04:36,076 Node[0] Epoch[9] Batch [160-180]	Speed: 53966.29 samples/sec	accuracy=nan
2021-05-21 11:04:38,317 Node[0] Epoch[9] Batch [180-200]	Speed: 54821.78 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613079165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 10}}
2021-05-21 11:04:39,166 Node[0] Epoch[9] Time cost=23.114
:::MLLOG {"namespace": "", "time_ms": 1621613079166, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55429.14467781312}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621613079166, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55429.14467781312, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613079166, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 11}}
2021-05-21 11:04:41,397 Node[0] Epoch[10] Batch [0-20]	Speed: 57867.36 samples/sec	accuracy=nan
2021-05-21 11:04:43,523 Node[0] Epoch[10] Batch [20-40]	Speed: 57793.75 samples/sec	accuracy=nan
2021-05-21 11:04:45,684 Node[0] Epoch[10] Batch [40-60]	Speed: 56872.24 samples/sec	accuracy=nan
2021-05-21 11:04:47,898 Node[0] Epoch[10] Batch [60-80]	Speed: 55487.59 samples/sec	accuracy=nan
2021-05-21 11:04:50,155 Node[0] Epoch[10] Batch [80-100]	Speed: 54451.70 samples/sec	accuracy=nan
2021-05-21 11:04:52,415 Node[0] Epoch[10] Batch [100-120]	Speed: 54392.28 samples/sec	accuracy=nan
2021-05-21 11:04:54,679 Node[0] Epoch[10] Batch [120-140]	Speed: 54275.71 samples/sec	accuracy=nan
2021-05-21 11:04:56,931 Node[0] Epoch[10] Batch [140-160]	Speed: 54576.61 samples/sec	accuracy=nan
2021-05-21 11:04:59,187 Node[0] Epoch[10] Batch [160-180]	Speed: 54462.52 samples/sec	accuracy=nan
2021-05-21 11:05:01,428 Node[0] Epoch[10] Batch [180-200]	Speed: 54839.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613102277, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 11}}
2021-05-21 11:05:02,277 Node[0] Epoch[10] Time cost=23.111
:::MLLOG {"namespace": "", "time_ms": 1621613102278, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55435.5851135135}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621613102278, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55435.5851135135, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613102278, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 12}}
2021-05-21 11:05:04,507 Node[0] Epoch[11] Batch [0-20]	Speed: 57866.98 samples/sec	accuracy=nan
2021-05-21 11:05:06,631 Node[0] Epoch[11] Batch [20-40]	Speed: 57856.29 samples/sec	accuracy=nan
2021-05-21 11:05:08,795 Node[0] Epoch[11] Batch [40-60]	Speed: 56802.16 samples/sec	accuracy=nan
2021-05-21 11:05:11,015 Node[0] Epoch[11] Batch [60-80]	Speed: 55352.82 samples/sec	accuracy=nan
2021-05-21 11:05:13,265 Node[0] Epoch[11] Batch [80-100]	Speed: 54612.71 samples/sec	accuracy=nan
2021-05-21 11:05:15,521 Node[0] Epoch[11] Batch [100-120]	Speed: 54474.54 samples/sec	accuracy=nan
2021-05-21 11:05:17,766 Node[0] Epoch[11] Batch [120-140]	Speed: 54729.59 samples/sec	accuracy=nan
2021-05-21 11:05:20,024 Node[0] Epoch[11] Batch [140-160]	Speed: 54437.24 samples/sec	accuracy=nan
2021-05-21 11:05:22,287 Node[0] Epoch[11] Batch [160-180]	Speed: 54308.37 samples/sec	accuracy=nan
2021-05-21 11:05:24,523 Node[0] Epoch[11] Batch [180-200]	Speed: 54941.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613125373, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 12}}
2021-05-21 11:05:25,373 Node[0] Epoch[11] Time cost=23.095
:::MLLOG {"namespace": "", "time_ms": 1621613125373, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55473.17166802502}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621613125374, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55473.17166802502, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613125476, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 12}}
2021-05-21 11:05:25,750 Node[0] Epoch[11] Validation-accuracy=0.533845
2021-05-21 11:05:25,750 Node[0] Epoch[11] Validation-correct-count=1112.000000
2021-05-21 11:05:25,750 Node[0] Epoch[11] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613125771, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621613125771, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.54434, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621613125771, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621613125771, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 13, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613125771, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 13}}
2021-05-21 11:05:27,917 Node[0] Epoch[12] Batch [0-20]	Speed: 57462.66 samples/sec	accuracy=nan
2021-05-21 11:05:30,043 Node[0] Epoch[12] Batch [20-40]	Speed: 57804.60 samples/sec	accuracy=nan
2021-05-21 11:05:32,204 Node[0] Epoch[12] Batch [40-60]	Speed: 56884.24 samples/sec	accuracy=nan
2021-05-21 11:05:34,422 Node[0] Epoch[12] Batch [60-80]	Speed: 55410.63 samples/sec	accuracy=nan
2021-05-21 11:05:36,669 Node[0] Epoch[12] Batch [80-100]	Speed: 54671.61 samples/sec	accuracy=nan
2021-05-21 11:05:38,928 Node[0] Epoch[12] Batch [100-120]	Speed: 54410.03 samples/sec	accuracy=nan
2021-05-21 11:05:41,190 Node[0] Epoch[12] Batch [120-140]	Speed: 54326.68 samples/sec	accuracy=nan
2021-05-21 11:05:43,437 Node[0] Epoch[12] Batch [140-160]	Speed: 54700.29 samples/sec	accuracy=nan
2021-05-21 11:05:45,686 Node[0] Epoch[12] Batch [160-180]	Speed: 54640.95 samples/sec	accuracy=nan
2021-05-21 11:05:47,921 Node[0] Epoch[12] Batch [180-200]	Speed: 54984.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613148770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 13}}
2021-05-21 11:05:48,771 Node[0] Epoch[12] Time cost=23.000
:::MLLOG {"namespace": "", "time_ms": 1621613148771, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55703.95126003147}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621613148771, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55703.95126003147, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613148771, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 14}}
2021-05-21 11:05:51,001 Node[0] Epoch[13] Batch [0-20]	Speed: 57873.78 samples/sec	accuracy=nan
2021-05-21 11:05:53,125 Node[0] Epoch[13] Batch [20-40]	Speed: 57869.90 samples/sec	accuracy=nan
2021-05-21 11:05:55,288 Node[0] Epoch[13] Batch [40-60]	Speed: 56823.48 samples/sec	accuracy=nan
2021-05-21 11:05:57,504 Node[0] Epoch[13] Batch [60-80]	Speed: 55454.74 samples/sec	accuracy=nan
2021-05-21 11:05:59,749 Node[0] Epoch[13] Batch [80-100]	Speed: 54734.30 samples/sec	accuracy=nan
2021-05-21 11:06:02,001 Node[0] Epoch[13] Batch [100-120]	Speed: 54568.54 samples/sec	accuracy=nan
2021-05-21 11:06:04,265 Node[0] Epoch[13] Batch [120-140]	Speed: 54277.59 samples/sec	accuracy=nan
2021-05-21 11:06:06,521 Node[0] Epoch[13] Batch [140-160]	Speed: 54480.56 samples/sec	accuracy=nan
2021-05-21 11:06:08,783 Node[0] Epoch[13] Batch [160-180]	Speed: 54318.86 samples/sec	accuracy=nan
2021-05-21 11:06:11,017 Node[0] Epoch[13] Batch [180-200]	Speed: 55005.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613171866, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 14}}
2021-05-21 11:06:11,867 Node[0] Epoch[13] Time cost=23.095
:::MLLOG {"namespace": "", "time_ms": 1621613171867, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55473.131581531175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621613171867, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55473.131581531175, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613171867, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 15}}
2021-05-21 11:06:14,097 Node[0] Epoch[14] Batch [0-20]	Speed: 57861.99 samples/sec	accuracy=nan
2021-05-21 11:06:16,222 Node[0] Epoch[14] Batch [20-40]	Speed: 57836.91 samples/sec	accuracy=nan
2021-05-21 11:06:18,390 Node[0] Epoch[14] Batch [40-60]	Speed: 56696.68 samples/sec	accuracy=nan
2021-05-21 11:06:20,609 Node[0] Epoch[14] Batch [60-80]	Speed: 55372.12 samples/sec	accuracy=nan
2021-05-21 11:06:22,863 Node[0] Epoch[14] Batch [80-100]	Speed: 54510.55 samples/sec	accuracy=nan
2021-05-21 11:06:25,112 Node[0] Epoch[14] Batch [100-120]	Speed: 54657.27 samples/sec	accuracy=nan
2021-05-21 11:06:27,369 Node[0] Epoch[14] Batch [120-140]	Speed: 54448.00 samples/sec	accuracy=nan
2021-05-21 11:06:29,629 Node[0] Epoch[14] Batch [140-160]	Speed: 54373.95 samples/sec	accuracy=nan
2021-05-21 11:06:31,881 Node[0] Epoch[14] Batch [160-180]	Speed: 54562.07 samples/sec	accuracy=nan
2021-05-21 11:06:34,112 Node[0] Epoch[14] Batch [180-200]	Speed: 55099.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613194961, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 15}}
2021-05-21 11:06:34,962 Node[0] Epoch[14] Time cost=23.095
:::MLLOG {"namespace": "", "time_ms": 1621613194962, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55473.768390969206}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621613194962, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55473.768390969206, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613194962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 16}}
2021-05-21 11:06:37,191 Node[0] Epoch[15] Batch [0-20]	Speed: 57877.93 samples/sec	accuracy=nan
2021-05-21 11:06:39,314 Node[0] Epoch[15] Batch [20-40]	Speed: 57894.63 samples/sec	accuracy=nan
2021-05-21 11:06:41,482 Node[0] Epoch[15] Batch [40-60]	Speed: 56700.86 samples/sec	accuracy=nan
2021-05-21 11:06:43,708 Node[0] Epoch[15] Batch [60-80]	Speed: 55203.71 samples/sec	accuracy=nan
2021-05-21 11:06:45,962 Node[0] Epoch[15] Batch [80-100]	Speed: 54521.81 samples/sec	accuracy=nan
2021-05-21 11:06:48,217 Node[0] Epoch[15] Batch [100-120]	Speed: 54486.91 samples/sec	accuracy=nan
2021-05-21 11:06:50,473 Node[0] Epoch[15] Batch [120-140]	Speed: 54483.25 samples/sec	accuracy=nan
2021-05-21 11:06:52,727 Node[0] Epoch[15] Batch [140-160]	Speed: 54522.58 samples/sec	accuracy=nan
2021-05-21 11:06:54,977 Node[0] Epoch[15] Batch [160-180]	Speed: 54603.94 samples/sec	accuracy=nan
2021-05-21 11:06:57,195 Node[0] Epoch[15] Batch [180-200]	Speed: 55414.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613218043, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 16}}
2021-05-21 11:06:58,044 Node[0] Epoch[15] Time cost=23.082
:::MLLOG {"namespace": "", "time_ms": 1621613218044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55505.825316137445}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621613218044, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55505.825316137445, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613218147, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 16}}
2021-05-21 11:06:58,416 Node[0] Epoch[15] Validation-accuracy=0.585214
2021-05-21 11:06:58,416 Node[0] Epoch[15] Validation-correct-count=1219.000000
2021-05-21 11:06:58,416 Node[0] Epoch[15] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613218424, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621613218424, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.58562, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621613218424, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621613218424, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 17, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613218424, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 17}}
2021-05-21 11:07:00,592 Node[0] Epoch[16] Batch [0-20]	Speed: 56902.69 samples/sec	accuracy=nan
2021-05-21 11:07:02,722 Node[0] Epoch[16] Batch [20-40]	Speed: 57695.28 samples/sec	accuracy=nan
2021-05-21 11:07:04,894 Node[0] Epoch[16] Batch [40-60]	Speed: 56597.10 samples/sec	accuracy=nan
2021-05-21 11:07:07,119 Node[0] Epoch[16] Batch [60-80]	Speed: 55224.96 samples/sec	accuracy=nan
2021-05-21 11:07:09,371 Node[0] Epoch[16] Batch [80-100]	Speed: 54555.80 samples/sec	accuracy=nan
2021-05-21 11:07:11,629 Node[0] Epoch[16] Batch [100-120]	Speed: 54430.80 samples/sec	accuracy=nan
2021-05-21 11:07:13,879 Node[0] Epoch[16] Batch [120-140]	Speed: 54609.63 samples/sec	accuracy=nan
2021-05-21 11:07:16,122 Node[0] Epoch[16] Batch [140-160]	Speed: 54789.24 samples/sec	accuracy=nan
2021-05-21 11:07:18,378 Node[0] Epoch[16] Batch [160-180]	Speed: 54486.27 samples/sec	accuracy=nan
2021-05-21 11:07:20,601 Node[0] Epoch[16] Batch [180-200]	Speed: 55284.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613241452, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 17}}
2021-05-21 11:07:21,452 Node[0] Epoch[16] Time cost=23.028
:::MLLOG {"namespace": "", "time_ms": 1621613241452, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55635.08620380999}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621613241452, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55635.08620380999, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613241453, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 18}}
2021-05-21 11:07:23,691 Node[0] Epoch[17] Batch [0-20]	Speed: 57653.49 samples/sec	accuracy=nan
2021-05-21 11:07:25,825 Node[0] Epoch[17] Batch [20-40]	Speed: 57603.26 samples/sec	accuracy=nan
2021-05-21 11:07:28,000 Node[0] Epoch[17] Batch [40-60]	Speed: 56483.60 samples/sec	accuracy=nan
2021-05-21 11:07:30,229 Node[0] Epoch[17] Batch [60-80]	Speed: 55135.88 samples/sec	accuracy=nan
2021-05-21 11:07:32,475 Node[0] Epoch[17] Batch [80-100]	Speed: 54729.93 samples/sec	accuracy=nan
2021-05-21 11:07:34,724 Node[0] Epoch[17] Batch [100-120]	Speed: 54639.05 samples/sec	accuracy=nan
2021-05-21 11:07:36,978 Node[0] Epoch[17] Batch [120-140]	Speed: 54522.19 samples/sec	accuracy=nan
2021-05-21 11:07:39,228 Node[0] Epoch[17] Batch [140-160]	Speed: 54604.65 samples/sec	accuracy=nan
2021-05-21 11:07:41,479 Node[0] Epoch[17] Batch [160-180]	Speed: 54607.11 samples/sec	accuracy=nan
2021-05-21 11:07:43,697 Node[0] Epoch[17] Batch [180-200]	Speed: 55394.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613264551, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 18}}
2021-05-21 11:07:44,551 Node[0] Epoch[17] Time cost=23.099
:::MLLOG {"namespace": "", "time_ms": 1621613264551, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55464.90076106467}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621613264552, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55464.90076106467, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613264552, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 19}}
2021-05-21 11:07:46,789 Node[0] Epoch[18] Batch [0-20]	Speed: 57688.48 samples/sec	accuracy=nan
2021-05-21 11:07:48,922 Node[0] Epoch[18] Batch [20-40]	Speed: 57609.66 samples/sec	accuracy=nan
2021-05-21 11:07:51,093 Node[0] Epoch[18] Batch [40-60]	Speed: 56603.34 samples/sec	accuracy=nan
2021-05-21 11:07:53,317 Node[0] Epoch[18] Batch [60-80]	Speed: 55262.17 samples/sec	accuracy=nan
2021-05-21 11:07:55,561 Node[0] Epoch[18] Batch [80-100]	Speed: 54761.08 samples/sec	accuracy=nan
2021-05-21 11:07:57,816 Node[0] Epoch[18] Batch [100-120]	Speed: 54506.59 samples/sec	accuracy=nan
2021-05-21 11:08:00,060 Node[0] Epoch[18] Batch [120-140]	Speed: 54753.61 samples/sec	accuracy=nan
2021-05-21 11:08:02,311 Node[0] Epoch[18] Batch [140-160]	Speed: 54603.10 samples/sec	accuracy=nan
2021-05-21 11:08:04,569 Node[0] Epoch[18] Batch [160-180]	Speed: 54414.79 samples/sec	accuracy=nan
2021-05-21 11:08:06,795 Node[0] Epoch[18] Batch [180-200]	Speed: 55210.89 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613287646, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 19}}
2021-05-21 11:08:07,647 Node[0] Epoch[18] Time cost=23.095
:::MLLOG {"namespace": "", "time_ms": 1621613287647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55472.96608219136}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621613287647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55472.96608219136, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613287647, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 20}}
2021-05-21 11:08:09,885 Node[0] Epoch[19] Batch [0-20]	Speed: 57682.13 samples/sec	accuracy=nan
2021-05-21 11:08:12,017 Node[0] Epoch[19] Batch [20-40]	Speed: 57621.94 samples/sec	accuracy=nan
2021-05-21 11:08:14,189 Node[0] Epoch[19] Batch [40-60]	Speed: 56582.75 samples/sec	accuracy=nan
2021-05-21 11:08:16,421 Node[0] Epoch[19] Batch [60-80]	Speed: 55060.91 samples/sec	accuracy=nan
2021-05-21 11:08:18,675 Node[0] Epoch[19] Batch [80-100]	Speed: 54522.26 samples/sec	accuracy=nan
2021-05-21 11:08:20,929 Node[0] Epoch[19] Batch [100-120]	Speed: 54529.22 samples/sec	accuracy=nan
2021-05-21 11:08:23,195 Node[0] Epoch[19] Batch [120-140]	Speed: 54234.61 samples/sec	accuracy=nan
2021-05-21 11:08:25,441 Node[0] Epoch[19] Batch [140-160]	Speed: 54708.74 samples/sec	accuracy=nan
2021-05-21 11:08:27,699 Node[0] Epoch[19] Batch [160-180]	Speed: 54423.42 samples/sec	accuracy=nan
2021-05-21 11:08:29,906 Node[0] Epoch[19] Batch [180-200]	Speed: 55693.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613310757, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 20}}
2021-05-21 11:08:30,758 Node[0] Epoch[19] Time cost=23.110
:::MLLOG {"namespace": "", "time_ms": 1621613310758, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55437.07378014514}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621613310758, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55437.07378014514, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613310861, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 20}}
2021-05-21 11:08:31,129 Node[0] Epoch[19] Validation-accuracy=0.613058
2021-05-21 11:08:31,129 Node[0] Epoch[19] Validation-correct-count=1277.000000
2021-05-21 11:08:31,129 Node[0] Epoch[19] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613311137, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621613311137, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6082, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621613311138, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621613311138, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 21, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613311138, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 21}}
2021-05-21 11:08:33,301 Node[0] Epoch[20] Batch [0-20]	Speed: 57059.45 samples/sec	accuracy=nan
2021-05-21 11:08:35,427 Node[0] Epoch[20] Batch [20-40]	Speed: 57809.14 samples/sec	accuracy=nan
2021-05-21 11:08:37,605 Node[0] Epoch[20] Batch [40-60]	Speed: 56408.88 samples/sec	accuracy=nan
2021-05-21 11:08:39,829 Node[0] Epoch[20] Batch [60-80]	Speed: 55261.91 samples/sec	accuracy=nan
2021-05-21 11:08:42,078 Node[0] Epoch[20] Batch [80-100]	Speed: 54643.98 samples/sec	accuracy=nan
2021-05-21 11:08:44,327 Node[0] Epoch[20] Batch [100-120]	Speed: 54641.22 samples/sec	accuracy=nan
2021-05-21 11:08:46,588 Node[0] Epoch[20] Batch [120-140]	Speed: 54362.37 samples/sec	accuracy=nan
2021-05-21 11:08:48,843 Node[0] Epoch[20] Batch [140-160]	Speed: 54496.32 samples/sec	accuracy=nan
2021-05-21 11:08:51,101 Node[0] Epoch[20] Batch [160-180]	Speed: 54418.97 samples/sec	accuracy=nan
2021-05-21 11:08:53,317 Node[0] Epoch[20] Batch [180-200]	Speed: 55465.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613334167, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 21}}
2021-05-21 11:08:54,167 Node[0] Epoch[20] Time cost=23.029
:::MLLOG {"namespace": "", "time_ms": 1621613334167, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55631.78584817464}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621613334167, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55631.78584817464, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613334168, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 22}}
2021-05-21 11:08:56,399 Node[0] Epoch[21] Batch [0-20]	Speed: 57828.76 samples/sec	accuracy=nan
2021-05-21 11:08:58,525 Node[0] Epoch[21] Batch [20-40]	Speed: 57791.41 samples/sec	accuracy=nan
2021-05-21 11:09:00,704 Node[0] Epoch[21] Batch [40-60]	Speed: 56417.63 samples/sec	accuracy=nan
2021-05-21 11:09:02,938 Node[0] Epoch[21] Batch [60-80]	Speed: 54995.01 samples/sec	accuracy=nan
2021-05-21 11:09:05,184 Node[0] Epoch[21] Batch [80-100]	Speed: 54712.16 samples/sec	accuracy=nan
2021-05-21 11:09:07,424 Node[0] Epoch[21] Batch [100-120]	Speed: 54873.80 samples/sec	accuracy=nan
2021-05-21 11:09:09,678 Node[0] Epoch[21] Batch [120-140]	Speed: 54516.41 samples/sec	accuracy=nan
2021-05-21 11:09:11,921 Node[0] Epoch[21] Batch [140-160]	Speed: 54804.36 samples/sec	accuracy=nan
2021-05-21 11:09:14,171 Node[0] Epoch[21] Batch [160-180]	Speed: 54604.42 samples/sec	accuracy=nan
2021-05-21 11:09:16,377 Node[0] Epoch[21] Batch [180-200]	Speed: 55708.88 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613357227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 22}}
2021-05-21 11:09:17,227 Node[0] Epoch[21] Time cost=23.060
:::MLLOG {"namespace": "", "time_ms": 1621613357228, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55558.43541338606}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621613357228, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55558.43541338606, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613357228, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 23}}
2021-05-21 11:09:19,459 Node[0] Epoch[22] Batch [0-20]	Speed: 57831.17 samples/sec	accuracy=nan
2021-05-21 11:09:21,584 Node[0] Epoch[22] Batch [20-40]	Speed: 57824.58 samples/sec	accuracy=nan
2021-05-21 11:09:23,769 Node[0] Epoch[22] Batch [40-60]	Speed: 56238.32 samples/sec	accuracy=nan
2021-05-21 11:09:26,005 Node[0] Epoch[22] Batch [60-80]	Speed: 54950.01 samples/sec	accuracy=nan
2021-05-21 11:09:28,266 Node[0] Epoch[22] Batch [80-100]	Speed: 54372.75 samples/sec	accuracy=nan
2021-05-21 11:09:30,539 Node[0] Epoch[22] Batch [100-120]	Speed: 54046.70 samples/sec	accuracy=nan
2021-05-21 11:09:32,795 Node[0] Epoch[22] Batch [120-140]	Speed: 54473.66 samples/sec	accuracy=nan
2021-05-21 11:09:35,044 Node[0] Epoch[22] Batch [140-160]	Speed: 54645.65 samples/sec	accuracy=nan
2021-05-21 11:09:37,308 Node[0] Epoch[22] Batch [160-180]	Speed: 54297.33 samples/sec	accuracy=nan
2021-05-21 11:09:39,501 Node[0] Epoch[22] Batch [180-200]	Speed: 56035.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613380350, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 23}}
2021-05-21 11:09:40,350 Node[0] Epoch[22] Time cost=23.123
:::MLLOG {"namespace": "", "time_ms": 1621613380351, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55407.52530047291}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621613380351, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55407.52530047291, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613380351, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 24}}
2021-05-21 11:09:42,583 Node[0] Epoch[23] Batch [0-20]	Speed: 57830.49 samples/sec	accuracy=nan
2021-05-21 11:09:44,708 Node[0] Epoch[23] Batch [20-40]	Speed: 57817.60 samples/sec	accuracy=nan
2021-05-21 11:09:46,892 Node[0] Epoch[23] Batch [40-60]	Speed: 56284.89 samples/sec	accuracy=nan
2021-05-21 11:09:49,122 Node[0] Epoch[23] Batch [60-80]	Speed: 55098.50 samples/sec	accuracy=nan
2021-05-21 11:09:51,384 Node[0] Epoch[23] Batch [80-100]	Speed: 54343.48 samples/sec	accuracy=nan
2021-05-21 11:09:53,636 Node[0] Epoch[23] Batch [100-120]	Speed: 54568.48 samples/sec	accuracy=nan
2021-05-21 11:09:55,882 Node[0] Epoch[23] Batch [120-140]	Speed: 54710.18 samples/sec	accuracy=nan
2021-05-21 11:09:58,132 Node[0] Epoch[23] Batch [140-160]	Speed: 54617.69 samples/sec	accuracy=nan
2021-05-21 11:10:00,386 Node[0] Epoch[23] Batch [160-180]	Speed: 54517.84 samples/sec	accuracy=nan
2021-05-21 11:10:02,584 Node[0] Epoch[23] Batch [180-200]	Speed: 55904.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613403435, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 24}}
2021-05-21 11:10:03,436 Node[0] Epoch[23] Time cost=23.085
:::MLLOG {"namespace": "", "time_ms": 1621613403436, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55498.43194804551}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621613403436, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55498.43194804551, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613403538, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 24}}
2021-05-21 11:10:03,806 Node[0] Epoch[23] Validation-accuracy=0.674508
2021-05-21 11:10:03,806 Node[0] Epoch[23] Validation-correct-count=1405.000000
2021-05-21 11:10:03,806 Node[0] Epoch[23] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613403815, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621613403815, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67386, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621613403815, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621613403815, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 25, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613403815, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 25}}
2021-05-21 11:10:05,977 Node[0] Epoch[24] Batch [0-20]	Speed: 57103.52 samples/sec	accuracy=nan
2021-05-21 11:10:08,103 Node[0] Epoch[24] Batch [20-40]	Speed: 57784.31 samples/sec	accuracy=nan
2021-05-21 11:10:10,286 Node[0] Epoch[24] Batch [40-60]	Speed: 56293.41 samples/sec	accuracy=nan
2021-05-21 11:10:12,520 Node[0] Epoch[24] Batch [60-80]	Speed: 55031.37 samples/sec	accuracy=nan
2021-05-21 11:10:14,760 Node[0] Epoch[24] Batch [80-100]	Speed: 54856.14 samples/sec	accuracy=nan
2021-05-21 11:10:17,016 Node[0] Epoch[24] Batch [100-120]	Speed: 54463.04 samples/sec	accuracy=nan
2021-05-21 11:10:19,268 Node[0] Epoch[24] Batch [120-140]	Speed: 54575.60 samples/sec	accuracy=nan
2021-05-21 11:10:21,533 Node[0] Epoch[24] Batch [140-160]	Speed: 54249.72 samples/sec	accuracy=nan
2021-05-21 11:10:23,788 Node[0] Epoch[24] Batch [160-180]	Speed: 54508.71 samples/sec	accuracy=nan
2021-05-21 11:10:25,987 Node[0] Epoch[24] Batch [180-200]	Speed: 55866.42 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613426837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 25}}
2021-05-21 11:10:26,837 Node[0] Epoch[24] Time cost=23.022
:::MLLOG {"namespace": "", "time_ms": 1621613426837, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55650.2630871955}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621613426837, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55650.2630871955, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613426838, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 26}}
2021-05-21 11:10:29,069 Node[0] Epoch[25] Batch [0-20]	Speed: 57829.68 samples/sec	accuracy=nan
2021-05-21 11:10:31,198 Node[0] Epoch[25] Batch [20-40]	Speed: 57725.62 samples/sec	accuracy=nan
2021-05-21 11:10:33,387 Node[0] Epoch[25] Batch [40-60]	Speed: 56152.34 samples/sec	accuracy=nan
2021-05-21 11:10:35,622 Node[0] Epoch[25] Batch [60-80]	Speed: 54968.93 samples/sec	accuracy=nan
2021-05-21 11:10:37,876 Node[0] Epoch[25] Batch [80-100]	Speed: 54540.65 samples/sec	accuracy=nan
2021-05-21 11:10:40,121 Node[0] Epoch[25] Batch [100-120]	Speed: 54736.61 samples/sec	accuracy=nan
2021-05-21 11:10:42,384 Node[0] Epoch[25] Batch [120-140]	Speed: 54287.19 samples/sec	accuracy=nan
2021-05-21 11:10:44,642 Node[0] Epoch[25] Batch [140-160]	Speed: 54425.63 samples/sec	accuracy=nan
2021-05-21 11:10:46,898 Node[0] Epoch[25] Batch [160-180]	Speed: 54471.27 samples/sec	accuracy=nan
2021-05-21 11:10:49,094 Node[0] Epoch[25] Batch [180-200]	Speed: 55955.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613449944, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 26}}
2021-05-21 11:10:49,945 Node[0] Epoch[25] Time cost=23.107
:::MLLOG {"namespace": "", "time_ms": 1621613449945, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55445.201376545614}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621613449945, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55445.201376545614, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613449945, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 27}}
2021-05-21 11:10:52,179 Node[0] Epoch[26] Batch [0-20]	Speed: 57783.55 samples/sec	accuracy=nan
2021-05-21 11:10:54,305 Node[0] Epoch[26] Batch [20-40]	Speed: 57812.92 samples/sec	accuracy=nan
2021-05-21 11:10:56,496 Node[0] Epoch[26] Batch [40-60]	Speed: 56085.57 samples/sec	accuracy=nan
2021-05-21 11:10:58,735 Node[0] Epoch[26] Batch [60-80]	Speed: 54876.86 samples/sec	accuracy=nan
2021-05-21 11:11:00,996 Node[0] Epoch[26] Batch [80-100]	Speed: 54352.19 samples/sec	accuracy=nan
2021-05-21 11:11:03,257 Node[0] Epoch[26] Batch [100-120]	Speed: 54343.05 samples/sec	accuracy=nan
2021-05-21 11:11:05,522 Node[0] Epoch[26] Batch [120-140]	Speed: 54273.00 samples/sec	accuracy=nan
2021-05-21 11:11:07,781 Node[0] Epoch[26] Batch [140-160]	Speed: 54384.58 samples/sec	accuracy=nan
2021-05-21 11:11:10,034 Node[0] Epoch[26] Batch [160-180]	Speed: 54546.87 samples/sec	accuracy=nan
2021-05-21 11:11:12,234 Node[0] Epoch[26] Batch [180-200]	Speed: 55878.05 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613473081, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 27}}
2021-05-21 11:11:13,082 Node[0] Epoch[26] Time cost=23.137
:::MLLOG {"namespace": "", "time_ms": 1621613473082, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55372.60257565265}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621613473082, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55372.60257565265, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613473082, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 28}}
2021-05-21 11:11:15,314 Node[0] Epoch[27] Batch [0-20]	Speed: 57815.91 samples/sec	accuracy=nan
2021-05-21 11:11:17,443 Node[0] Epoch[27] Batch [20-40]	Speed: 57736.17 samples/sec	accuracy=nan
2021-05-21 11:11:19,628 Node[0] Epoch[27] Batch [40-60]	Speed: 56239.77 samples/sec	accuracy=nan
2021-05-21 11:11:21,868 Node[0] Epoch[27] Batch [60-80]	Speed: 54847.61 samples/sec	accuracy=nan
2021-05-21 11:11:24,113 Node[0] Epoch[27] Batch [80-100]	Speed: 54740.67 samples/sec	accuracy=nan
2021-05-21 11:11:26,365 Node[0] Epoch[27] Batch [100-120]	Speed: 54582.89 samples/sec	accuracy=nan
2021-05-21 11:11:28,616 Node[0] Epoch[27] Batch [120-140]	Speed: 54585.74 samples/sec	accuracy=nan
2021-05-21 11:11:30,866 Node[0] Epoch[27] Batch [140-160]	Speed: 54615.28 samples/sec	accuracy=nan
2021-05-21 11:11:33,128 Node[0] Epoch[27] Batch [160-180]	Speed: 54329.53 samples/sec	accuracy=nan
2021-05-21 11:11:35,321 Node[0] Epoch[27] Batch [180-200]	Speed: 56042.54 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613496170, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 28}}
2021-05-21 11:11:36,171 Node[0] Epoch[27] Time cost=23.089
:::MLLOG {"namespace": "", "time_ms": 1621613496171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55489.04760999398}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621613496171, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55489.04760999398, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613496273, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 28}}
2021-05-21 11:11:36,540 Node[0] Epoch[27] Validation-accuracy=0.721075
2021-05-21 11:11:36,540 Node[0] Epoch[27] Validation-correct-count=1502.000000
2021-05-21 11:11:36,540 Node[0] Epoch[27] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613496548, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621613496548, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.71006, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621613496548, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621613496548, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 29, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613496548, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 29}}
2021-05-21 11:11:38,712 Node[0] Epoch[28] Batch [0-20]	Speed: 57062.33 samples/sec	accuracy=nan
2021-05-21 11:11:40,842 Node[0] Epoch[28] Batch [20-40]	Speed: 57690.22 samples/sec	accuracy=nan
2021-05-21 11:11:43,029 Node[0] Epoch[28] Batch [40-60]	Speed: 56192.74 samples/sec	accuracy=nan
2021-05-21 11:11:45,272 Node[0] Epoch[28] Batch [60-80]	Speed: 54777.86 samples/sec	accuracy=nan
2021-05-21 11:11:47,523 Node[0] Epoch[28] Batch [80-100]	Speed: 54608.73 samples/sec	accuracy=nan
2021-05-21 11:11:49,772 Node[0] Epoch[28] Batch [100-120]	Speed: 54623.64 samples/sec	accuracy=nan
2021-05-21 11:11:52,022 Node[0] Epoch[28] Batch [120-140]	Speed: 54637.59 samples/sec	accuracy=nan
2021-05-21 11:11:54,277 Node[0] Epoch[28] Batch [140-160]	Speed: 54481.47 samples/sec	accuracy=nan
2021-05-21 11:11:56,529 Node[0] Epoch[28] Batch [160-180]	Speed: 54575.22 samples/sec	accuracy=nan
2021-05-21 11:11:58,720 Node[0] Epoch[28] Batch [180-200]	Speed: 56093.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613519569, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 29}}
2021-05-21 11:11:59,569 Node[0] Epoch[28] Time cost=23.021
:::MLLOG {"namespace": "", "time_ms": 1621613519570, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55651.75811900839}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621613519570, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55651.75811900839, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613519570, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 30}}
2021-05-21 11:12:01,801 Node[0] Epoch[29] Batch [0-20]	Speed: 57846.07 samples/sec	accuracy=nan
2021-05-21 11:12:03,930 Node[0] Epoch[29] Batch [20-40]	Speed: 57723.50 samples/sec	accuracy=nan
2021-05-21 11:12:06,121 Node[0] Epoch[29] Batch [40-60]	Speed: 56085.90 samples/sec	accuracy=nan
2021-05-21 11:12:08,357 Node[0] Epoch[29] Batch [60-80]	Speed: 54974.05 samples/sec	accuracy=nan
2021-05-21 11:12:10,618 Node[0] Epoch[29] Batch [80-100]	Speed: 54350.94 samples/sec	accuracy=nan
2021-05-21 11:12:12,876 Node[0] Epoch[29] Batch [100-120]	Speed: 54411.47 samples/sec	accuracy=nan
2021-05-21 11:12:15,138 Node[0] Epoch[29] Batch [120-140]	Speed: 54321.81 samples/sec	accuracy=nan
2021-05-21 11:12:17,402 Node[0] Epoch[29] Batch [140-160]	Speed: 54281.23 samples/sec	accuracy=nan
2021-05-21 11:12:19,670 Node[0] Epoch[29] Batch [160-180]	Speed: 54199.84 samples/sec	accuracy=nan
2021-05-21 11:12:21,850 Node[0] Epoch[29] Batch [180-200]	Speed: 56359.38 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613542700, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 30}}
2021-05-21 11:12:22,701 Node[0] Epoch[29] Time cost=23.131
:::MLLOG {"namespace": "", "time_ms": 1621613542701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55388.58884743899}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621613542701, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55388.58884743899, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613542701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 31}}
2021-05-21 11:12:24,933 Node[0] Epoch[30] Batch [0-20]	Speed: 57792.43 samples/sec	accuracy=nan
2021-05-21 11:12:27,062 Node[0] Epoch[30] Batch [20-40]	Speed: 57717.48 samples/sec	accuracy=nan
2021-05-21 11:12:29,257 Node[0] Epoch[30] Batch [40-60]	Speed: 56002.39 samples/sec	accuracy=nan
2021-05-21 11:12:31,493 Node[0] Epoch[30] Batch [60-80]	Speed: 54958.55 samples/sec	accuracy=nan
2021-05-21 11:12:33,745 Node[0] Epoch[30] Batch [80-100]	Speed: 54570.32 samples/sec	accuracy=nan
2021-05-21 11:12:36,003 Node[0] Epoch[30] Batch [100-120]	Speed: 54409.09 samples/sec	accuracy=nan
2021-05-21 11:12:38,252 Node[0] Epoch[30] Batch [120-140]	Speed: 54660.65 samples/sec	accuracy=nan
2021-05-21 11:12:40,504 Node[0] Epoch[30] Batch [140-160]	Speed: 54556.41 samples/sec	accuracy=nan
2021-05-21 11:12:42,764 Node[0] Epoch[30] Batch [160-180]	Speed: 54387.45 samples/sec	accuracy=nan
2021-05-21 11:12:44,943 Node[0] Epoch[30] Batch [180-200]	Speed: 56402.38 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613565791, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 31}}
2021-05-21 11:12:45,792 Node[0] Epoch[30] Time cost=23.091
:::MLLOG {"namespace": "", "time_ms": 1621613565792, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55483.6052886196}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621613565792, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55483.6052886196, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613565792, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 32}}
2021-05-21 11:12:48,025 Node[0] Epoch[31] Batch [0-20]	Speed: 57798.72 samples/sec	accuracy=nan
2021-05-21 11:12:50,156 Node[0] Epoch[31] Batch [20-40]	Speed: 57672.55 samples/sec	accuracy=nan
2021-05-21 11:12:52,350 Node[0] Epoch[31] Batch [40-60]	Speed: 56017.90 samples/sec	accuracy=nan
2021-05-21 11:12:54,595 Node[0] Epoch[31] Batch [60-80]	Speed: 54717.05 samples/sec	accuracy=nan
2021-05-21 11:12:56,845 Node[0] Epoch[31] Batch [80-100]	Speed: 54623.69 samples/sec	accuracy=nan
2021-05-21 11:12:59,096 Node[0] Epoch[31] Batch [100-120]	Speed: 54592.17 samples/sec	accuracy=nan
2021-05-21 11:13:01,342 Node[0] Epoch[31] Batch [120-140]	Speed: 54729.92 samples/sec	accuracy=nan
2021-05-21 11:13:03,598 Node[0] Epoch[31] Batch [140-160]	Speed: 54477.58 samples/sec	accuracy=nan
2021-05-21 11:13:05,853 Node[0] Epoch[31] Batch [160-180]	Speed: 54484.64 samples/sec	accuracy=nan
2021-05-21 11:13:08,021 Node[0] Epoch[31] Batch [180-200]	Speed: 56675.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613588871, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 32}}
2021-05-21 11:13:08,871 Node[0] Epoch[31] Time cost=23.079
:::MLLOG {"namespace": "", "time_ms": 1621613588871, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55512.86050384207}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621613588871, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55512.86050384207, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613588975, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 32}}
2021-05-21 11:13:09,282 Node[0] Epoch[31] Validation-accuracy=0.741719
2021-05-21 11:13:09,282 Node[0] Epoch[31] Validation-correct-count=1545.000000
2021-05-21 11:13:09,282 Node[0] Epoch[31] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613589329, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621613589329, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73074, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621613589329, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621613589330, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 33, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613589330, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 33}}
2021-05-21 11:13:11,483 Node[0] Epoch[32] Batch [0-20]	Speed: 57309.59 samples/sec	accuracy=nan
2021-05-21 11:13:13,616 Node[0] Epoch[32] Batch [20-40]	Speed: 57626.99 samples/sec	accuracy=nan
2021-05-21 11:13:15,811 Node[0] Epoch[32] Batch [40-60]	Speed: 55991.46 samples/sec	accuracy=nan
2021-05-21 11:13:18,044 Node[0] Epoch[32] Batch [60-80]	Speed: 55021.64 samples/sec	accuracy=nan
2021-05-21 11:13:20,295 Node[0] Epoch[32] Batch [80-100]	Speed: 54601.85 samples/sec	accuracy=nan
2021-05-21 11:13:22,542 Node[0] Epoch[32] Batch [100-120]	Speed: 54694.77 samples/sec	accuracy=nan
2021-05-21 11:13:24,785 Node[0] Epoch[32] Batch [120-140]	Speed: 54797.93 samples/sec	accuracy=nan
2021-05-21 11:13:27,045 Node[0] Epoch[32] Batch [140-160]	Speed: 54369.53 samples/sec	accuracy=nan
2021-05-21 11:13:29,301 Node[0] Epoch[32] Batch [160-180]	Speed: 54475.06 samples/sec	accuracy=nan
2021-05-21 11:13:31,471 Node[0] Epoch[32] Batch [180-200]	Speed: 56628.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613612321, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 33}}
2021-05-21 11:13:32,322 Node[0] Epoch[32] Time cost=22.992
:::MLLOG {"namespace": "", "time_ms": 1621613612322, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55722.72609623439}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621613612322, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55722.72609623439, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613612322, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 34}}
2021-05-21 11:13:34,555 Node[0] Epoch[33] Batch [0-20]	Speed: 57793.00 samples/sec	accuracy=nan
2021-05-21 11:13:36,686 Node[0] Epoch[33] Batch [20-40]	Speed: 57661.96 samples/sec	accuracy=nan
2021-05-21 11:13:38,886 Node[0] Epoch[33] Batch [40-60]	Speed: 55875.37 samples/sec	accuracy=nan
2021-05-21 11:13:41,130 Node[0] Epoch[33] Batch [60-80]	Speed: 54774.35 samples/sec	accuracy=nan
2021-05-21 11:13:43,389 Node[0] Epoch[33] Batch [80-100]	Speed: 54401.38 samples/sec	accuracy=nan
2021-05-21 11:13:45,633 Node[0] Epoch[33] Batch [100-120]	Speed: 54756.18 samples/sec	accuracy=nan
2021-05-21 11:13:47,878 Node[0] Epoch[33] Batch [120-140]	Speed: 54743.80 samples/sec	accuracy=nan
2021-05-21 11:13:50,133 Node[0] Epoch[33] Batch [140-160]	Speed: 54481.95 samples/sec	accuracy=nan
2021-05-21 11:13:52,384 Node[0] Epoch[33] Batch [160-180]	Speed: 54588.14 samples/sec	accuracy=nan
2021-05-21 11:13:54,559 Node[0] Epoch[33] Batch [180-200]	Speed: 56514.14 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613635409, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 34}}
2021-05-21 11:13:55,410 Node[0] Epoch[33] Time cost=23.088
:::MLLOG {"namespace": "", "time_ms": 1621613635410, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55490.14262015867}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621613635411, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55490.14262015867, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613635411, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 35}}
2021-05-21 11:13:57,642 Node[0] Epoch[34] Batch [0-20]	Speed: 57831.01 samples/sec	accuracy=nan
2021-05-21 11:13:59,774 Node[0] Epoch[34] Batch [20-40]	Speed: 57642.19 samples/sec	accuracy=nan
2021-05-21 11:14:01,977 Node[0] Epoch[34] Batch [40-60]	Speed: 55768.88 samples/sec	accuracy=nan
2021-05-21 11:14:04,222 Node[0] Epoch[34] Batch [60-80]	Speed: 54736.83 samples/sec	accuracy=nan
2021-05-21 11:14:06,471 Node[0] Epoch[34] Batch [80-100]	Speed: 54644.42 samples/sec	accuracy=nan
2021-05-21 11:14:08,721 Node[0] Epoch[34] Batch [100-120]	Speed: 54628.62 samples/sec	accuracy=nan
2021-05-21 11:14:10,983 Node[0] Epoch[34] Batch [120-140]	Speed: 54329.41 samples/sec	accuracy=nan
2021-05-21 11:14:13,253 Node[0] Epoch[34] Batch [140-160]	Speed: 54119.14 samples/sec	accuracy=nan
2021-05-21 11:14:15,505 Node[0] Epoch[34] Batch [160-180]	Speed: 54581.20 samples/sec	accuracy=nan
2021-05-21 11:14:17,667 Node[0] Epoch[34] Batch [180-200]	Speed: 56844.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613658518, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 35}}
2021-05-21 11:14:18,519 Node[0] Epoch[34] Time cost=23.108
:::MLLOG {"namespace": "", "time_ms": 1621613658519, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55442.06937568773}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621613658519, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55442.06937568773, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613658519, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 36}}
2021-05-21 11:14:20,752 Node[0] Epoch[35] Batch [0-20]	Speed: 57800.62 samples/sec	accuracy=nan
2021-05-21 11:14:22,885 Node[0] Epoch[35] Batch [20-40]	Speed: 57628.86 samples/sec	accuracy=nan
2021-05-21 11:14:25,087 Node[0] Epoch[35] Batch [40-60]	Speed: 55786.78 samples/sec	accuracy=nan
2021-05-21 11:14:27,340 Node[0] Epoch[35] Batch [60-80]	Speed: 54553.65 samples/sec	accuracy=nan
2021-05-21 11:14:29,593 Node[0] Epoch[35] Batch [80-100]	Speed: 54547.54 samples/sec	accuracy=nan
2021-05-21 11:14:31,850 Node[0] Epoch[35] Batch [100-120]	Speed: 54440.80 samples/sec	accuracy=nan
2021-05-21 11:14:34,104 Node[0] Epoch[35] Batch [120-140]	Speed: 54525.87 samples/sec	accuracy=nan
2021-05-21 11:14:36,359 Node[0] Epoch[35] Batch [140-160]	Speed: 54502.81 samples/sec	accuracy=nan
2021-05-21 11:14:38,615 Node[0] Epoch[35] Batch [160-180]	Speed: 54468.79 samples/sec	accuracy=nan
2021-05-21 11:14:40,774 Node[0] Epoch[35] Batch [180-200]	Speed: 56927.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613681624, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 36}}
2021-05-21 11:14:41,624 Node[0] Epoch[35] Time cost=23.105
:::MLLOG {"namespace": "", "time_ms": 1621613681624, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55449.908910237544}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621613681625, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55449.908910237544, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613681727, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 36}}
2021-05-21 11:14:42,113 Node[0] Epoch[35] Validation-accuracy=0.756601
2021-05-21 11:14:42,114 Node[0] Epoch[35] Validation-correct-count=1576.000000
2021-05-21 11:14:42,114 Node[0] Epoch[35] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613682131, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621613682131, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7503, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621613682131, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621613682131, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 37, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613682131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 37}}
2021-05-21 11:14:44,272 Node[0] Epoch[36] Batch [0-20]	Speed: 57654.20 samples/sec	accuracy=nan
2021-05-21 11:14:46,406 Node[0] Epoch[36] Batch [20-40]	Speed: 57587.41 samples/sec	accuracy=nan
2021-05-21 11:14:48,604 Node[0] Epoch[36] Batch [40-60]	Speed: 55908.77 samples/sec	accuracy=nan
2021-05-21 11:14:50,854 Node[0] Epoch[36] Batch [60-80]	Speed: 54617.96 samples/sec	accuracy=nan
2021-05-21 11:14:53,105 Node[0] Epoch[36] Batch [80-100]	Speed: 54581.82 samples/sec	accuracy=nan
2021-05-21 11:14:55,357 Node[0] Epoch[36] Batch [100-120]	Speed: 54572.95 samples/sec	accuracy=nan
2021-05-21 11:14:57,624 Node[0] Epoch[36] Batch [120-140]	Speed: 54198.89 samples/sec	accuracy=nan
2021-05-21 11:14:59,882 Node[0] Epoch[36] Batch [140-160]	Speed: 54439.76 samples/sec	accuracy=nan
2021-05-21 11:15:02,139 Node[0] Epoch[36] Batch [160-180]	Speed: 54447.71 samples/sec	accuracy=nan
2021-05-21 11:15:04,298 Node[0] Epoch[36] Batch [180-200]	Speed: 56930.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613705150, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 37}}
2021-05-21 11:15:05,150 Node[0] Epoch[36] Time cost=23.019
:::MLLOG {"namespace": "", "time_ms": 1621613705150, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55657.43005718223}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621613705151, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55657.43005718223, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613705151, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 38}}
2021-05-21 11:15:07,384 Node[0] Epoch[37] Batch [0-20]	Speed: 57772.25 samples/sec	accuracy=nan
2021-05-21 11:15:09,518 Node[0] Epoch[37] Batch [20-40]	Speed: 57602.78 samples/sec	accuracy=nan
2021-05-21 11:15:11,727 Node[0] Epoch[37] Batch [40-60]	Speed: 55615.28 samples/sec	accuracy=nan
2021-05-21 11:15:13,968 Node[0] Epoch[37] Batch [60-80]	Speed: 54859.16 samples/sec	accuracy=nan
2021-05-21 11:15:16,218 Node[0] Epoch[37] Batch [80-100]	Speed: 54606.90 samples/sec	accuracy=nan
2021-05-21 11:15:18,472 Node[0] Epoch[37] Batch [100-120]	Speed: 54516.32 samples/sec	accuracy=nan
2021-05-21 11:15:20,728 Node[0] Epoch[37] Batch [120-140]	Speed: 54484.77 samples/sec	accuracy=nan
2021-05-21 11:15:23,002 Node[0] Epoch[37] Batch [140-160]	Speed: 54032.18 samples/sec	accuracy=nan
2021-05-21 11:15:25,260 Node[0] Epoch[37] Batch [160-180]	Speed: 54425.70 samples/sec	accuracy=nan
2021-05-21 11:15:27,419 Node[0] Epoch[37] Batch [180-200]	Speed: 56926.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613728269, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 38}}
2021-05-21 11:15:28,270 Node[0] Epoch[37] Time cost=23.119
:::MLLOG {"namespace": "", "time_ms": 1621613728270, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55416.168855675605}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621613728270, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55416.168855675605, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613728270, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 39}}
2021-05-21 11:15:30,503 Node[0] Epoch[38] Batch [0-20]	Speed: 57808.38 samples/sec	accuracy=nan
2021-05-21 11:15:32,639 Node[0] Epoch[38] Batch [20-40]	Speed: 57535.47 samples/sec	accuracy=nan
2021-05-21 11:15:34,841 Node[0] Epoch[38] Batch [40-60]	Speed: 55808.37 samples/sec	accuracy=nan
2021-05-21 11:15:37,086 Node[0] Epoch[38] Batch [60-80]	Speed: 54734.21 samples/sec	accuracy=nan
2021-05-21 11:15:39,335 Node[0] Epoch[38] Batch [80-100]	Speed: 54638.94 samples/sec	accuracy=nan
2021-05-21 11:15:41,589 Node[0] Epoch[38] Batch [100-120]	Speed: 54521.37 samples/sec	accuracy=nan
2021-05-21 11:15:43,857 Node[0] Epoch[38] Batch [120-140]	Speed: 54201.00 samples/sec	accuracy=nan
2021-05-21 11:15:46,111 Node[0] Epoch[38] Batch [140-160]	Speed: 54527.35 samples/sec	accuracy=nan
2021-05-21 11:15:48,376 Node[0] Epoch[38] Batch [160-180]	Speed: 54232.33 samples/sec	accuracy=nan
2021-05-21 11:15:50,531 Node[0] Epoch[38] Batch [180-200]	Speed: 57040.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613751381, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 39}}
2021-05-21 11:15:51,382 Node[0] Epoch[38] Time cost=23.111
:::MLLOG {"namespace": "", "time_ms": 1621613751382, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55434.4242034758}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621613751382, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55434.4242034758, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613751382, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 40}}
2021-05-21 11:15:53,615 Node[0] Epoch[39] Batch [0-20]	Speed: 57819.02 samples/sec	accuracy=nan
2021-05-21 11:15:55,753 Node[0] Epoch[39] Batch [20-40]	Speed: 57473.33 samples/sec	accuracy=nan
2021-05-21 11:15:57,963 Node[0] Epoch[39] Batch [40-60]	Speed: 55597.05 samples/sec	accuracy=nan
2021-05-21 11:16:00,219 Node[0] Epoch[39] Batch [60-80]	Speed: 54484.49 samples/sec	accuracy=nan
2021-05-21 11:16:02,481 Node[0] Epoch[39] Batch [80-100]	Speed: 54330.25 samples/sec	accuracy=nan
2021-05-21 11:16:04,731 Node[0] Epoch[39] Batch [100-120]	Speed: 54605.82 samples/sec	accuracy=nan
2021-05-21 11:16:06,993 Node[0] Epoch[39] Batch [120-140]	Speed: 54339.34 samples/sec	accuracy=nan
2021-05-21 11:16:09,250 Node[0] Epoch[39] Batch [140-160]	Speed: 54440.39 samples/sec	accuracy=nan
2021-05-21 11:16:11,535 Node[0] Epoch[39] Batch [160-180]	Speed: 53776.57 samples/sec	accuracy=nan
2021-05-21 11:16:13,688 Node[0] Epoch[39] Batch [180-200]	Speed: 57090.95 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613774538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 40}}
2021-05-21 11:16:14,538 Node[0] Epoch[39] Time cost=23.156
:::MLLOG {"namespace": "", "time_ms": 1621613774538, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55327.64180694701}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621613774539, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55327.64180694701, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613774641, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 40}}
2021-05-21 11:16:15,021 Node[0] Epoch[39] Validation-accuracy=0.762842
2021-05-21 11:16:15,021 Node[0] Epoch[39] Validation-correct-count=1589.000000
2021-05-21 11:16:15,021 Node[0] Epoch[39] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613775082, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621613775082, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75938, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621613775082, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621613775083, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "status": "success"}}
ENDING TIMING RUN AT 2021-05-21 11:16:22 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:22 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:22 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:40 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:23 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 10:59:41 AM
ENDING TIMING RUN AT 2021-05-21 11:16:24 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 10:59:41 AM
