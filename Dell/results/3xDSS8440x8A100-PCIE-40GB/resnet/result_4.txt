+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node070 node071 node072 '
+ echo 'hosts=node070 node071 node072 '
hosts=node070 node071 node072 
+ for node in $hosts
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1621613786842, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621613786849, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621613786849, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621613786849, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621613786849, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "3xDSS8440x8A100-PCIE-40GB", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 87}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node070 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node070
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node070 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621613795280, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node071 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node071
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node071 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621613807015, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node072 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node072
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node072 mpirun --allow-run-as-root -np 1 singularity exec -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import mx_resnet_print_event
mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1621613822720, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ export SEED=6782
+ SEED=6782
+ MPIRUN='mpirun --allow-run-as-root --bind-to none -report-bindings -np 24'
+ mpirun --allow-run-as-root --bind-to none -report-bindings -np 24 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training1.0/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification resnet_20210517.mxnet.sif bash ./run_and_time_multi.sh
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:12 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
running benchmark
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:13 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
running benchmark
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2021-05-21 11:17:14 AM
running benchmark
PARAMS=--gpus 0,1,2,3,4,5,6,7 --batch-size 256 --kv-store horovod --lr 12.8 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 1 --eval-period 4 --eval-offset 3 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 44 --accuracy-threshold 0.759 --seed 6782 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 4 --dali-cache-size 12288 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 177784164 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node070:1047540] MCW rank 1 is not bound (or bound to all available processors)
[node070:1047510] MCW rank 4 is not bound (or bound to all available processors)
[node070:1047536] MCW rank 5 is not bound (or bound to all available processors)
[node070:1047537] MCW rank 2 is not bound (or bound to all available processors)
[node070:1047427] MCW rank 7 is not bound (or bound to all available processors)
[node070:1047580] MCW rank 0 is not bound (or bound to all available processors)
[node070:1047535] MCW rank 6 is not bound (or bound to all available processors)
[node070:1047538] MCW rank 3 is not bound (or bound to all available processors)
[node071:1709498] MCW rank 14 is not bound (or bound to all available processors)
[node071:1709500] MCW rank 8 is not bound (or bound to all available processors)
[node071:1709526] MCW rank 12 is not bound (or bound to all available processors)
[node071:1709503] MCW rank 13 is not bound (or bound to all available processors)
[node071:1709497] MCW rank 11 is not bound (or bound to all available processors)
[node071:1709501] MCW rank 9 is not bound (or bound to all available processors)
[node071:1709499] MCW rank 15 is not bound (or bound to all available processors)
[node071:1709502] MCW rank 10 is not bound (or bound to all available processors)
[node072:616391] MCW rank 21 is not bound (or bound to all available processors)
[node072:616394] MCW rank 20 is not bound (or bound to all available processors)
[node072:616393] MCW rank 16 is not bound (or bound to all available processors)
[node072:616395] MCW rank 19 is not bound (or bound to all available processors)
[node072:616418] MCW rank 17 is not bound (or bound to all available processors)
[node072:616392] MCW rank 18 is not bound (or bound to all available processors)
[node072:616396] MCW rank 23 is not bound (or bound to all available processors)
[node072:616390] MCW rank 22 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840117, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
:::MLLOG {"namespace": "", "time_ms": 1621613840116, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 121}}
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621613864364, "event_type": "POINT_IN_TIME", "key": "seed", "value": 6782, "metadata": {"file": "train_imagenet.py", "lineno": 178}}
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:44] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:46] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:17:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.9.8+cuda11.3
:::MLLOG {"namespace": "", "time_ms": 1621613873106, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 256, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 286}}
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621613879698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 82, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 92, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 87, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621613879748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 77, "tensor": "stage4_unit3_conv3_weight"}}
[11:17:59] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:18:00] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,837 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22001, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621613881837, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 232}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,838 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2888, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,838 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58708, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,838 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10226, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24098, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31447, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7726, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38625, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43294, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40567, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63440, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9436, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4342, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45816, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38109, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44260, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,839 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39817, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61112, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=298, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17930, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43434, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14259, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28013, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2021-05-21 11:18:01,840 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=256, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=4, dali_tmp_buffer_hint=177784164, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=12.8, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=44, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16966, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=1, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1621613881840, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 691}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 692}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 693}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 694}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1212}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1213}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1214}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1215}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 6144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1216}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1217}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1219}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1220}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1226}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1228}}
:::MLLOG {"namespace": "", "time_ms": 1621613881842, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1230}}
:::MLLOG {"namespace": "", "time_ms": 1621613881843, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1232}}
:::MLLOG {"namespace": "", "time_ms": 1621613881843, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.8, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1233}}
:::MLLOG {"namespace": "", "time_ms": 1621613881843, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1234}}
:::MLLOG {"namespace": "", "time_ms": 1621613881843, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 44, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1235}}
:::MLLOG {"namespace": "", "time_ms": 1621613898788, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1291}}
:::MLLOG {"namespace": "", "time_ms": 1621613898790, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 463}}
:::MLLOG {"namespace": "", "time_ms": 1621613899029, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 482}}
:::MLLOG {"namespace": "", "time_ms": 1621613899030, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 877, "first_epoch_num": 1, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613899030, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 1}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:18:21,914 Node[0] Epoch[0] Batch [0-20]	Speed: 48456.22 samples/sec	accuracy=nan
2021-05-21 11:18:24,212 Node[0] Epoch[0] Batch [20-40]	Speed: 53468.88 samples/sec	accuracy=nan
2021-05-21 11:18:26,480 Node[0] Epoch[0] Batch [40-60]	Speed: 54196.34 samples/sec	accuracy=nan
2021-05-21 11:18:28,743 Node[0] Epoch[0] Batch [60-80]	Speed: 54294.89 samples/sec	accuracy=nan
2021-05-21 11:18:30,998 Node[0] Epoch[0] Batch [80-100]	Speed: 54506.55 samples/sec	accuracy=nan
2021-05-21 11:18:33,253 Node[0] Epoch[0] Batch [100-120]	Speed: 54508.71 samples/sec	accuracy=nan
2021-05-21 11:18:35,509 Node[0] Epoch[0] Batch [120-140]	Speed: 54459.60 samples/sec	accuracy=nan
2021-05-21 11:18:37,763 Node[0] Epoch[0] Batch [140-160]	Speed: 54534.15 samples/sec	accuracy=nan
2021-05-21 11:18:40,088 Node[0] Epoch[0] Batch [160-180]	Speed: 52855.74 samples/sec	accuracy=nan
2021-05-21 11:18:42,337 Node[0] Epoch[0] Batch [180-200]	Speed: 54639.63 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613923206, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 1}}
2021-05-21 11:18:43,207 Node[0] Epoch[0] Time cost=24.177
:::MLLOG {"namespace": "", "time_ms": 1621613923207, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 52992.12468295573}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621613923207, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 52992.12468295573, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613923207, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 2}}
2021-05-21 11:18:45,436 Node[0] Epoch[1] Batch [0-20]	Speed: 57883.94 samples/sec	accuracy=nan
2021-05-21 11:18:47,557 Node[0] Epoch[1] Batch [20-40]	Speed: 57957.99 samples/sec	accuracy=nan
2021-05-21 11:18:49,696 Node[0] Epoch[1] Batch [40-60]	Speed: 57450.58 samples/sec	accuracy=nan
2021-05-21 11:18:51,897 Node[0] Epoch[1] Batch [60-80]	Speed: 55827.63 samples/sec	accuracy=nan
2021-05-21 11:18:54,154 Node[0] Epoch[1] Batch [80-100]	Speed: 54450.66 samples/sec	accuracy=nan
2021-05-21 11:18:56,405 Node[0] Epoch[1] Batch [100-120]	Speed: 54593.69 samples/sec	accuracy=nan
2021-05-21 11:18:58,655 Node[0] Epoch[1] Batch [120-140]	Speed: 54619.72 samples/sec	accuracy=nan
2021-05-21 11:19:00,909 Node[0] Epoch[1] Batch [140-160]	Speed: 54516.16 samples/sec	accuracy=nan
2021-05-21 11:19:03,167 Node[0] Epoch[1] Batch [160-180]	Speed: 54437.77 samples/sec	accuracy=nan
2021-05-21 11:19:05,428 Node[0] Epoch[1] Batch [180-200]	Speed: 54357.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613946292, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 2}}
2021-05-21 11:19:06,293 Node[0] Epoch[1] Time cost=23.085
:::MLLOG {"namespace": "", "time_ms": 1621613946293, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55497.25751423609}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621613946293, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55497.25751423609, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613946293, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 3}}
2021-05-21 11:19:08,522 Node[0] Epoch[2] Batch [0-20]	Speed: 57907.76 samples/sec	accuracy=nan
2021-05-21 11:19:10,649 Node[0] Epoch[2] Batch [20-40]	Speed: 57781.97 samples/sec	accuracy=nan
2021-05-21 11:19:12,794 Node[0] Epoch[2] Batch [40-60]	Speed: 57279.83 samples/sec	accuracy=nan
2021-05-21 11:19:14,996 Node[0] Epoch[2] Batch [60-80]	Speed: 55804.83 samples/sec	accuracy=nan
2021-05-21 11:19:17,242 Node[0] Epoch[2] Batch [80-100]	Speed: 54729.07 samples/sec	accuracy=nan
2021-05-21 11:19:19,491 Node[0] Epoch[2] Batch [100-120]	Speed: 54655.76 samples/sec	accuracy=nan
2021-05-21 11:19:21,742 Node[0] Epoch[2] Batch [120-140]	Speed: 54577.81 samples/sec	accuracy=nan
2021-05-21 11:19:24,001 Node[0] Epoch[2] Batch [140-160]	Speed: 54400.68 samples/sec	accuracy=nan
2021-05-21 11:19:26,258 Node[0] Epoch[2] Batch [160-180]	Speed: 54458.66 samples/sec	accuracy=nan
2021-05-21 11:19:28,518 Node[0] Epoch[2] Batch [180-200]	Speed: 54375.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613969373, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 3}}
2021-05-21 11:19:29,376 Node[0] Epoch[2] Time cost=23.083
:::MLLOG {"namespace": "", "time_ms": 1621613969376, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55503.31821795847}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621613969376, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55503.31821795847, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621613969376, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 4}}
2021-05-21 11:19:31,607 Node[0] Epoch[3] Batch [0-20]	Speed: 57794.56 samples/sec	accuracy=nan
2021-05-21 11:19:33,733 Node[0] Epoch[3] Batch [20-40]	Speed: 57803.59 samples/sec	accuracy=nan
2021-05-21 11:19:35,883 Node[0] Epoch[3] Batch [40-60]	Speed: 57150.56 samples/sec	accuracy=nan
2021-05-21 11:19:38,101 Node[0] Epoch[3] Batch [60-80]	Speed: 55422.45 samples/sec	accuracy=nan
2021-05-21 11:19:40,354 Node[0] Epoch[3] Batch [80-100]	Speed: 54527.51 samples/sec	accuracy=nan
2021-05-21 11:19:42,600 Node[0] Epoch[3] Batch [100-120]	Speed: 54725.51 samples/sec	accuracy=nan
2021-05-21 11:19:44,864 Node[0] Epoch[3] Batch [120-140]	Speed: 54278.63 samples/sec	accuracy=nan
2021-05-21 11:19:47,118 Node[0] Epoch[3] Batch [140-160]	Speed: 54531.17 samples/sec	accuracy=nan
2021-05-21 11:19:49,376 Node[0] Epoch[3] Batch [160-180]	Speed: 54414.07 samples/sec	accuracy=nan
2021-05-21 11:19:51,633 Node[0] Epoch[3] Batch [180-200]	Speed: 54449.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621613992489, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 4}}
2021-05-21 11:19:52,489 Node[0] Epoch[3] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621613992489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55430.392277413936}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613992489, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55430.392277413936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,590 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,591 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1621613992592, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 4}}
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 11:19:52,592 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/workspace/image_classification/common/fit.py:1278: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.00016276041666666666 vs. 0.00390625). Is this intended?
  model.init_optimizer(kvstore=kv, optimizer=opt,
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:85: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2021-05-21 11:19:52,592 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2021-05-21 11:19:53,188 Node[0] Epoch[3] Validation-accuracy=0.357177
2021-05-21 11:19:53,188 Node[0] Epoch[3] Validation-correct-count=744.000000
2021-05-21 11:19:53,188 Node[0] Epoch[3] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621613993214, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613993214, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.37212, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613993214, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621613993214, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 5, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621613993214, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 5}}
2021-05-21 11:19:55,348 Node[0] Epoch[4] Batch [0-20]	Speed: 57824.90 samples/sec	accuracy=nan
2021-05-21 11:19:57,470 Node[0] Epoch[4] Batch [20-40]	Speed: 57935.42 samples/sec	accuracy=nan
2021-05-21 11:19:59,618 Node[0] Epoch[4] Batch [40-60]	Speed: 57191.44 samples/sec	accuracy=nan
2021-05-21 11:20:01,835 Node[0] Epoch[4] Batch [60-80]	Speed: 55449.17 samples/sec	accuracy=nan
2021-05-21 11:20:04,085 Node[0] Epoch[4] Batch [80-100]	Speed: 54616.96 samples/sec	accuracy=nan
2021-05-21 11:20:06,349 Node[0] Epoch[4] Batch [100-120]	Speed: 54294.59 samples/sec	accuracy=nan
2021-05-21 11:20:08,599 Node[0] Epoch[4] Batch [120-140]	Speed: 54598.80 samples/sec	accuracy=nan
2021-05-21 11:20:10,860 Node[0] Epoch[4] Batch [140-160]	Speed: 54361.69 samples/sec	accuracy=nan
2021-05-21 11:20:13,106 Node[0] Epoch[4] Batch [160-180]	Speed: 54713.48 samples/sec	accuracy=nan
2021-05-21 11:20:15,363 Node[0] Epoch[4] Batch [180-200]	Speed: 54454.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614016216, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 5}}
2021-05-21 11:20:16,217 Node[0] Epoch[4] Time cost=23.003
:::MLLOG {"namespace": "", "time_ms": 1621614016217, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55696.28449860522}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621614016217, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55696.28449860522, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614016217, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 6}}
2021-05-21 11:20:18,448 Node[0] Epoch[5] Batch [0-20]	Speed: 57844.45 samples/sec	accuracy=nan
2021-05-21 11:20:20,573 Node[0] Epoch[5] Batch [20-40]	Speed: 57839.17 samples/sec	accuracy=nan
2021-05-21 11:20:22,724 Node[0] Epoch[5] Batch [40-60]	Speed: 57137.18 samples/sec	accuracy=nan
2021-05-21 11:20:24,925 Node[0] Epoch[5] Batch [60-80]	Speed: 55828.70 samples/sec	accuracy=nan
2021-05-21 11:20:27,169 Node[0] Epoch[5] Batch [80-100]	Speed: 54779.01 samples/sec	accuracy=nan
2021-05-21 11:20:29,421 Node[0] Epoch[5] Batch [100-120]	Speed: 54555.32 samples/sec	accuracy=nan
2021-05-21 11:20:31,673 Node[0] Epoch[5] Batch [120-140]	Speed: 54576.48 samples/sec	accuracy=nan
2021-05-21 11:20:33,928 Node[0] Epoch[5] Batch [140-160]	Speed: 54503.20 samples/sec	accuracy=nan
2021-05-21 11:20:36,181 Node[0] Epoch[5] Batch [160-180]	Speed: 54548.17 samples/sec	accuracy=nan
2021-05-21 11:20:38,434 Node[0] Epoch[5] Batch [180-200]	Speed: 54547.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614039285, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 6}}
2021-05-21 11:20:39,287 Node[0] Epoch[5] Time cost=23.069
:::MLLOG {"namespace": "", "time_ms": 1621614039287, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55535.1981014202}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621614039287, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55535.1981014202, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614039287, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 7}}
2021-05-21 11:20:41,517 Node[0] Epoch[6] Batch [0-20]	Speed: 57836.38 samples/sec	accuracy=nan
2021-05-21 11:20:43,642 Node[0] Epoch[6] Batch [20-40]	Speed: 57853.52 samples/sec	accuracy=nan
2021-05-21 11:20:45,793 Node[0] Epoch[6] Batch [40-60]	Speed: 57109.24 samples/sec	accuracy=nan
2021-05-21 11:20:48,016 Node[0] Epoch[6] Batch [60-80]	Speed: 55300.68 samples/sec	accuracy=nan
2021-05-21 11:20:50,268 Node[0] Epoch[6] Batch [80-100]	Speed: 54554.54 samples/sec	accuracy=nan
2021-05-21 11:20:52,523 Node[0] Epoch[6] Batch [100-120]	Speed: 54509.58 samples/sec	accuracy=nan
2021-05-21 11:20:54,781 Node[0] Epoch[6] Batch [120-140]	Speed: 54412.40 samples/sec	accuracy=nan
2021-05-21 11:20:57,035 Node[0] Epoch[6] Batch [140-160]	Speed: 54532.11 samples/sec	accuracy=nan
2021-05-21 11:20:59,288 Node[0] Epoch[6] Batch [160-180]	Speed: 54550.92 samples/sec	accuracy=nan
2021-05-21 11:21:01,549 Node[0] Epoch[6] Batch [180-200]	Speed: 54343.05 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614062399, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 7}}
2021-05-21 11:21:02,400 Node[0] Epoch[6] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621614062400, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55430.16470922936}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621614062400, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55430.16470922936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614062401, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 8}}
2021-05-21 11:21:04,628 Node[0] Epoch[7] Batch [0-20]	Speed: 57918.01 samples/sec	accuracy=nan
2021-05-21 11:21:06,751 Node[0] Epoch[7] Batch [20-40]	Speed: 57902.71 samples/sec	accuracy=nan
2021-05-21 11:21:08,907 Node[0] Epoch[7] Batch [40-60]	Speed: 56998.17 samples/sec	accuracy=nan
2021-05-21 11:21:11,115 Node[0] Epoch[7] Batch [60-80]	Speed: 55646.88 samples/sec	accuracy=nan
2021-05-21 11:21:13,367 Node[0] Epoch[7] Batch [80-100]	Speed: 54586.86 samples/sec	accuracy=nan
2021-05-21 11:21:15,619 Node[0] Epoch[7] Batch [100-120]	Speed: 54575.17 samples/sec	accuracy=nan
2021-05-21 11:21:17,876 Node[0] Epoch[7] Batch [120-140]	Speed: 54441.72 samples/sec	accuracy=nan
2021-05-21 11:21:20,133 Node[0] Epoch[7] Batch [140-160]	Speed: 54449.71 samples/sec	accuracy=nan
2021-05-21 11:21:22,385 Node[0] Epoch[7] Batch [160-180]	Speed: 54575.47 samples/sec	accuracy=nan
2021-05-21 11:21:24,636 Node[0] Epoch[7] Batch [180-200]	Speed: 54590.47 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614085484, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 8}}
2021-05-21 11:21:25,485 Node[0] Epoch[7] Time cost=23.084
:::MLLOG {"namespace": "", "time_ms": 1621614085485, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55500.42212213255}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621614085485, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55500.42212213255, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614085587, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 8}}
2021-05-21 11:21:25,948 Node[0] Epoch[7] Validation-accuracy=0.467115
2021-05-21 11:21:25,948 Node[0] Epoch[7] Validation-correct-count=973.000000
2021-05-21 11:21:25,948 Node[0] Epoch[7] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614085990, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621614085991, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.47398, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621614085991, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621614085991, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 9, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614085991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 9}}
2021-05-21 11:21:28,136 Node[0] Epoch[8] Batch [0-20]	Speed: 57547.56 samples/sec	accuracy=nan
2021-05-21 11:21:30,269 Node[0] Epoch[8] Batch [20-40]	Speed: 57618.99 samples/sec	accuracy=nan
2021-05-21 11:21:32,429 Node[0] Epoch[8] Batch [40-60]	Speed: 56903.57 samples/sec	accuracy=nan
2021-05-21 11:21:34,642 Node[0] Epoch[8] Batch [60-80]	Speed: 55520.71 samples/sec	accuracy=nan
2021-05-21 11:21:36,899 Node[0] Epoch[8] Batch [80-100]	Speed: 54452.07 samples/sec	accuracy=nan
2021-05-21 11:21:39,150 Node[0] Epoch[8] Batch [100-120]	Speed: 54592.64 samples/sec	accuracy=nan
2021-05-21 11:21:41,395 Node[0] Epoch[8] Batch [120-140]	Speed: 54747.85 samples/sec	accuracy=nan
2021-05-21 11:21:43,655 Node[0] Epoch[8] Batch [140-160]	Speed: 54388.15 samples/sec	accuracy=nan
2021-05-21 11:21:45,903 Node[0] Epoch[8] Batch [160-180]	Speed: 54664.90 samples/sec	accuracy=nan
2021-05-21 11:21:48,156 Node[0] Epoch[8] Batch [180-200]	Speed: 54529.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614109006, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 9}}
2021-05-21 11:21:49,007 Node[0] Epoch[8] Time cost=23.016
:::MLLOG {"namespace": "", "time_ms": 1621614109007, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55663.54309537161}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621614109007, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55663.54309537161, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614109007, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 10}}
2021-05-21 11:21:51,243 Node[0] Epoch[9] Batch [0-20]	Speed: 57732.51 samples/sec	accuracy=nan
2021-05-21 11:21:53,371 Node[0] Epoch[9] Batch [20-40]	Speed: 57756.66 samples/sec	accuracy=nan
2021-05-21 11:21:55,533 Node[0] Epoch[9] Batch [40-60]	Speed: 56820.34 samples/sec	accuracy=nan
2021-05-21 11:21:57,752 Node[0] Epoch[9] Batch [60-80]	Speed: 55388.24 samples/sec	accuracy=nan
2021-05-21 11:22:00,012 Node[0] Epoch[9] Batch [80-100]	Speed: 54387.92 samples/sec	accuracy=nan
2021-05-21 11:22:02,271 Node[0] Epoch[9] Batch [100-120]	Speed: 54411.78 samples/sec	accuracy=nan
2021-05-21 11:22:04,523 Node[0] Epoch[9] Batch [120-140]	Speed: 54559.12 samples/sec	accuracy=nan
2021-05-21 11:22:06,781 Node[0] Epoch[9] Batch [140-160]	Speed: 54433.75 samples/sec	accuracy=nan
2021-05-21 11:22:09,041 Node[0] Epoch[9] Batch [160-180]	Speed: 54384.79 samples/sec	accuracy=nan
2021-05-21 11:22:11,289 Node[0] Epoch[9] Batch [180-200]	Speed: 54663.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614132140, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 10}}
2021-05-21 11:22:12,141 Node[0] Epoch[9] Time cost=23.134
:::MLLOG {"namespace": "", "time_ms": 1621614132141, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55381.3710806946}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621614132141, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55381.3710806946, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614132141, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 11}}
2021-05-21 11:22:14,378 Node[0] Epoch[10] Batch [0-20]	Speed: 57672.19 samples/sec	accuracy=nan
2021-05-21 11:22:16,509 Node[0] Epoch[10] Batch [20-40]	Speed: 57686.55 samples/sec	accuracy=nan
2021-05-21 11:22:18,675 Node[0] Epoch[10] Batch [40-60]	Speed: 56735.35 samples/sec	accuracy=nan
2021-05-21 11:22:20,894 Node[0] Epoch[10] Batch [60-80]	Speed: 55372.25 samples/sec	accuracy=nan
2021-05-21 11:22:23,147 Node[0] Epoch[10] Batch [80-100]	Speed: 54546.10 samples/sec	accuracy=nan
2021-05-21 11:22:25,403 Node[0] Epoch[10] Batch [100-120]	Speed: 54469.51 samples/sec	accuracy=nan
2021-05-21 11:22:27,655 Node[0] Epoch[10] Batch [120-140]	Speed: 54567.28 samples/sec	accuracy=nan
2021-05-21 11:22:29,907 Node[0] Epoch[10] Batch [140-160]	Speed: 54579.70 samples/sec	accuracy=nan
2021-05-21 11:22:32,162 Node[0] Epoch[10] Batch [160-180]	Speed: 54503.32 samples/sec	accuracy=nan
2021-05-21 11:22:34,401 Node[0] Epoch[10] Batch [180-200]	Speed: 54876.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614155252, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 11}}
2021-05-21 11:22:35,252 Node[0] Epoch[10] Time cost=23.111
:::MLLOG {"namespace": "", "time_ms": 1621614155252, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55436.106681044665}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621614155253, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55436.106681044665, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614155253, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 12}}
2021-05-21 11:22:37,488 Node[0] Epoch[11] Batch [0-20]	Speed: 57727.82 samples/sec	accuracy=nan
2021-05-21 11:22:39,620 Node[0] Epoch[11] Batch [20-40]	Speed: 57655.39 samples/sec	accuracy=nan
2021-05-21 11:22:41,781 Node[0] Epoch[11] Batch [40-60]	Speed: 56856.25 samples/sec	accuracy=nan
2021-05-21 11:22:44,004 Node[0] Epoch[11] Batch [60-80]	Speed: 55280.49 samples/sec	accuracy=nan
2021-05-21 11:22:46,253 Node[0] Epoch[11] Batch [80-100]	Speed: 54637.48 samples/sec	accuracy=nan
2021-05-21 11:22:48,502 Node[0] Epoch[11] Batch [100-120]	Speed: 54654.60 samples/sec	accuracy=nan
2021-05-21 11:22:50,753 Node[0] Epoch[11] Batch [120-140]	Speed: 54608.15 samples/sec	accuracy=nan
2021-05-21 11:22:53,007 Node[0] Epoch[11] Batch [140-160]	Speed: 54511.48 samples/sec	accuracy=nan
2021-05-21 11:22:55,268 Node[0] Epoch[11] Batch [160-180]	Speed: 54348.62 samples/sec	accuracy=nan
2021-05-21 11:22:57,502 Node[0] Epoch[11] Batch [180-200]	Speed: 55016.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614178353, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 12}}
2021-05-21 11:22:58,354 Node[0] Epoch[11] Time cost=23.101
:::MLLOG {"namespace": "", "time_ms": 1621614178354, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55458.59946463129}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621614178354, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55458.59946463129, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614178457, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 12}}
2021-05-21 11:22:58,760 Node[0] Epoch[11] Validation-accuracy=0.527604
2021-05-21 11:22:58,760 Node[0] Epoch[11] Validation-correct-count=1099.000000
2021-05-21 11:22:58,760 Node[0] Epoch[11] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614178767, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621614178767, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53406, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621614178767, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621614178768, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 13, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614178768, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 13}}
2021-05-21 11:23:00,921 Node[0] Epoch[12] Batch [0-20]	Speed: 57349.55 samples/sec	accuracy=nan
2021-05-21 11:23:03,049 Node[0] Epoch[12] Batch [20-40]	Speed: 57731.64 samples/sec	accuracy=nan
2021-05-21 11:23:05,213 Node[0] Epoch[12] Batch [40-60]	Speed: 56788.39 samples/sec	accuracy=nan
2021-05-21 11:23:07,433 Node[0] Epoch[12] Batch [60-80]	Speed: 55374.41 samples/sec	accuracy=nan
2021-05-21 11:23:09,681 Node[0] Epoch[12] Batch [80-100]	Speed: 54654.72 samples/sec	accuracy=nan
2021-05-21 11:23:11,940 Node[0] Epoch[12] Batch [100-120]	Speed: 54412.91 samples/sec	accuracy=nan
2021-05-21 11:23:14,195 Node[0] Epoch[12] Batch [120-140]	Speed: 54495.69 samples/sec	accuracy=nan
2021-05-21 11:23:16,442 Node[0] Epoch[12] Batch [140-160]	Speed: 54685.02 samples/sec	accuracy=nan
2021-05-21 11:23:18,701 Node[0] Epoch[12] Batch [160-180]	Speed: 54399.02 samples/sec	accuracy=nan
2021-05-21 11:23:20,940 Node[0] Epoch[12] Batch [180-200]	Speed: 54884.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614201791, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 13}}
2021-05-21 11:23:21,792 Node[0] Epoch[12] Time cost=23.024
:::MLLOG {"namespace": "", "time_ms": 1621614201792, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55643.872933451516}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621614201792, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55643.872933451516, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614201793, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 14}}
2021-05-21 11:23:24,029 Node[0] Epoch[13] Batch [0-20]	Speed: 57734.42 samples/sec	accuracy=nan
2021-05-21 11:23:26,156 Node[0] Epoch[13] Batch [20-40]	Speed: 57783.06 samples/sec	accuracy=nan
2021-05-21 11:23:28,323 Node[0] Epoch[13] Batch [40-60]	Speed: 56689.76 samples/sec	accuracy=nan
2021-05-21 11:23:30,544 Node[0] Epoch[13] Batch [60-80]	Speed: 55353.63 samples/sec	accuracy=nan
2021-05-21 11:23:32,796 Node[0] Epoch[13] Batch [80-100]	Speed: 54565.95 samples/sec	accuracy=nan
2021-05-21 11:23:35,058 Node[0] Epoch[13] Batch [100-120]	Speed: 54335.37 samples/sec	accuracy=nan
2021-05-21 11:23:37,323 Node[0] Epoch[13] Batch [120-140]	Speed: 54245.32 samples/sec	accuracy=nan
2021-05-21 11:23:39,580 Node[0] Epoch[13] Batch [140-160]	Speed: 54444.42 samples/sec	accuracy=nan
2021-05-21 11:23:41,834 Node[0] Epoch[13] Batch [160-180]	Speed: 54532.23 samples/sec	accuracy=nan
2021-05-21 11:23:44,067 Node[0] Epoch[13] Batch [180-200]	Speed: 55041.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614224918, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 14}}
2021-05-21 11:23:44,918 Node[0] Epoch[13] Time cost=23.125
:::MLLOG {"namespace": "", "time_ms": 1621614224918, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55400.66757228452}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621614224918, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55400.66757228452, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614224919, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 15}}
2021-05-21 11:23:47,156 Node[0] Epoch[14] Batch [0-20]	Speed: 57690.06 samples/sec	accuracy=nan
2021-05-21 11:23:49,285 Node[0] Epoch[14] Batch [20-40]	Speed: 57714.22 samples/sec	accuracy=nan
2021-05-21 11:23:51,456 Node[0] Epoch[14] Batch [40-60]	Speed: 56600.44 samples/sec	accuracy=nan
2021-05-21 11:23:53,677 Node[0] Epoch[14] Batch [60-80]	Speed: 55348.85 samples/sec	accuracy=nan
2021-05-21 11:23:55,932 Node[0] Epoch[14] Batch [80-100]	Speed: 54498.43 samples/sec	accuracy=nan
2021-05-21 11:23:58,180 Node[0] Epoch[14] Batch [100-120]	Speed: 54663.91 samples/sec	accuracy=nan
2021-05-21 11:24:00,430 Node[0] Epoch[14] Batch [120-140]	Speed: 54599.84 samples/sec	accuracy=nan
2021-05-21 11:24:02,682 Node[0] Epoch[14] Batch [140-160]	Speed: 54590.13 samples/sec	accuracy=nan
2021-05-21 11:24:04,936 Node[0] Epoch[14] Batch [160-180]	Speed: 54501.99 samples/sec	accuracy=nan
2021-05-21 11:24:07,161 Node[0] Epoch[14] Batch [180-200]	Speed: 55245.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614248011, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 15}}
2021-05-21 11:24:08,012 Node[0] Epoch[14] Time cost=23.093
:::MLLOG {"namespace": "", "time_ms": 1621614248012, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55477.45323909951}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621614248012, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55477.45323909951, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614248012, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 16}}
2021-05-21 11:24:10,251 Node[0] Epoch[15] Batch [0-20]	Speed: 57630.79 samples/sec	accuracy=nan
2021-05-21 11:24:12,380 Node[0] Epoch[15] Batch [20-40]	Speed: 57720.28 samples/sec	accuracy=nan
2021-05-21 11:24:14,559 Node[0] Epoch[15] Batch [40-60]	Speed: 56421.17 samples/sec	accuracy=nan
2021-05-21 11:24:16,791 Node[0] Epoch[15] Batch [60-80]	Speed: 55057.27 samples/sec	accuracy=nan
2021-05-21 11:24:19,042 Node[0] Epoch[15] Batch [80-100]	Speed: 54585.74 samples/sec	accuracy=nan
2021-05-21 11:24:21,291 Node[0] Epoch[15] Batch [100-120]	Speed: 54649.66 samples/sec	accuracy=nan
2021-05-21 11:24:23,550 Node[0] Epoch[15] Batch [120-140]	Speed: 54386.68 samples/sec	accuracy=nan
2021-05-21 11:24:25,815 Node[0] Epoch[15] Batch [140-160]	Speed: 54265.98 samples/sec	accuracy=nan
2021-05-21 11:24:28,067 Node[0] Epoch[15] Batch [160-180]	Speed: 54573.56 samples/sec	accuracy=nan
2021-05-21 11:24:30,293 Node[0] Epoch[15] Batch [180-200]	Speed: 55202.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614271145, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 16}}
2021-05-21 11:24:31,145 Node[0] Epoch[15] Time cost=23.133
:::MLLOG {"namespace": "", "time_ms": 1621614271145, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55382.90307194012}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621614271146, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55382.90307194012, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614271248, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 16}}
2021-05-21 11:24:31,523 Node[0] Epoch[15] Validation-accuracy=0.602976
2021-05-21 11:24:31,523 Node[0] Epoch[15] Validation-correct-count=1256.000000
2021-05-21 11:24:31,523 Node[0] Epoch[15] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614271530, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621614271530, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6014, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621614271530, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621614271530, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 17, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614271530, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 17}}
2021-05-21 11:24:33,695 Node[0] Epoch[16] Batch [0-20]	Speed: 56989.94 samples/sec	accuracy=nan
2021-05-21 11:24:35,825 Node[0] Epoch[16] Batch [20-40]	Speed: 57707.32 samples/sec	accuracy=nan
2021-05-21 11:24:38,003 Node[0] Epoch[16] Batch [40-60]	Speed: 56420.23 samples/sec	accuracy=nan
2021-05-21 11:24:40,229 Node[0] Epoch[16] Batch [60-80]	Speed: 55219.73 samples/sec	accuracy=nan
2021-05-21 11:24:42,482 Node[0] Epoch[16] Batch [80-100]	Speed: 54534.83 samples/sec	accuracy=nan
2021-05-21 11:24:44,739 Node[0] Epoch[16] Batch [100-120]	Speed: 54443.34 samples/sec	accuracy=nan
2021-05-21 11:24:46,994 Node[0] Epoch[16] Batch [120-140]	Speed: 54515.95 samples/sec	accuracy=nan
2021-05-21 11:24:49,248 Node[0] Epoch[16] Batch [140-160]	Speed: 54516.77 samples/sec	accuracy=nan
2021-05-21 11:24:51,502 Node[0] Epoch[16] Batch [160-180]	Speed: 54534.15 samples/sec	accuracy=nan
2021-05-21 11:24:53,732 Node[0] Epoch[16] Batch [180-200]	Speed: 55104.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614294583, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 17}}
2021-05-21 11:24:54,584 Node[0] Epoch[16] Time cost=23.054
:::MLLOG {"namespace": "", "time_ms": 1621614294584, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55573.55958018868}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621614294584, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55573.55958018868, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614294584, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 18}}
2021-05-21 11:24:56,823 Node[0] Epoch[17] Batch [0-20]	Speed: 57639.03 samples/sec	accuracy=nan
2021-05-21 11:24:58,952 Node[0] Epoch[17] Batch [20-40]	Speed: 57700.23 samples/sec	accuracy=nan
2021-05-21 11:25:01,128 Node[0] Epoch[17] Batch [40-60]	Speed: 56497.31 samples/sec	accuracy=nan
2021-05-21 11:25:03,358 Node[0] Epoch[17] Batch [60-80]	Speed: 55095.88 samples/sec	accuracy=nan
2021-05-21 11:25:05,605 Node[0] Epoch[17] Batch [80-100]	Speed: 54705.10 samples/sec	accuracy=nan
2021-05-21 11:25:07,859 Node[0] Epoch[17] Batch [100-120]	Speed: 54523.65 samples/sec	accuracy=nan
2021-05-21 11:25:10,114 Node[0] Epoch[17] Batch [120-140]	Speed: 54499.44 samples/sec	accuracy=nan
2021-05-21 11:25:12,368 Node[0] Epoch[17] Batch [140-160]	Speed: 54519.46 samples/sec	accuracy=nan
2021-05-21 11:25:14,625 Node[0] Epoch[17] Batch [160-180]	Speed: 54441.93 samples/sec	accuracy=nan
2021-05-21 11:25:16,849 Node[0] Epoch[17] Batch [180-200]	Speed: 55267.54 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614317701, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 18}}
2021-05-21 11:25:17,701 Node[0] Epoch[17] Time cost=23.117
:::MLLOG {"namespace": "", "time_ms": 1621614317702, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55420.18728131958}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621614317702, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55420.18728131958, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614317702, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 19}}
2021-05-21 11:25:19,941 Node[0] Epoch[18] Batch [0-20]	Speed: 57646.71 samples/sec	accuracy=nan
2021-05-21 11:25:22,074 Node[0] Epoch[18] Batch [20-40]	Speed: 57611.77 samples/sec	accuracy=nan
2021-05-21 11:25:24,249 Node[0] Epoch[18] Batch [40-60]	Speed: 56500.94 samples/sec	accuracy=nan
2021-05-21 11:25:26,480 Node[0] Epoch[18] Batch [60-80]	Speed: 55085.34 samples/sec	accuracy=nan
2021-05-21 11:25:28,732 Node[0] Epoch[18] Batch [80-100]	Speed: 54561.10 samples/sec	accuracy=nan
2021-05-21 11:25:30,983 Node[0] Epoch[18] Batch [100-120]	Speed: 54613.51 samples/sec	accuracy=nan
2021-05-21 11:25:33,233 Node[0] Epoch[18] Batch [120-140]	Speed: 54614.86 samples/sec	accuracy=nan
2021-05-21 11:25:35,488 Node[0] Epoch[18] Batch [140-160]	Speed: 54490.84 samples/sec	accuracy=nan
2021-05-21 11:25:37,741 Node[0] Epoch[18] Batch [160-180]	Speed: 54568.42 samples/sec	accuracy=nan
2021-05-21 11:25:39,965 Node[0] Epoch[18] Batch [180-200]	Speed: 55244.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614340816, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 19}}
2021-05-21 11:25:40,817 Node[0] Epoch[18] Time cost=23.115
:::MLLOG {"namespace": "", "time_ms": 1621614340817, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55425.55542628391}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621614340817, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55425.55542628391, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614340817, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 20}}
2021-05-21 11:25:43,055 Node[0] Epoch[19] Batch [0-20]	Speed: 57661.42 samples/sec	accuracy=nan
2021-05-21 11:25:45,186 Node[0] Epoch[19] Batch [20-40]	Speed: 57687.53 samples/sec	accuracy=nan
2021-05-21 11:25:47,365 Node[0] Epoch[19] Batch [40-60]	Speed: 56387.01 samples/sec	accuracy=nan
2021-05-21 11:25:49,606 Node[0] Epoch[19] Batch [60-80]	Speed: 54829.89 samples/sec	accuracy=nan
2021-05-21 11:25:51,859 Node[0] Epoch[19] Batch [80-100]	Speed: 54549.45 samples/sec	accuracy=nan
2021-05-21 11:25:54,119 Node[0] Epoch[19] Batch [100-120]	Speed: 54380.33 samples/sec	accuracy=nan
2021-05-21 11:25:56,375 Node[0] Epoch[19] Batch [120-140]	Speed: 54475.32 samples/sec	accuracy=nan
2021-05-21 11:25:58,631 Node[0] Epoch[19] Batch [140-160]	Speed: 54490.71 samples/sec	accuracy=nan
2021-05-21 11:26:00,891 Node[0] Epoch[19] Batch [160-180]	Speed: 54360.34 samples/sec	accuracy=nan
2021-05-21 11:26:03,123 Node[0] Epoch[19] Batch [180-200]	Speed: 55060.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614363973, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 20}}
2021-05-21 11:26:03,974 Node[0] Epoch[19] Time cost=23.156
:::MLLOG {"namespace": "", "time_ms": 1621614363974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55326.609595282374}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621614363974, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55326.609595282374, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614364077, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 20}}
2021-05-21 11:26:04,347 Node[0] Epoch[19] Validation-accuracy=0.634662
2021-05-21 11:26:04,347 Node[0] Epoch[19] Validation-correct-count=1322.000000
2021-05-21 11:26:04,347 Node[0] Epoch[19] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614364354, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621614364355, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63938, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621614364355, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621614364355, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 21, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614364356, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 21}}
2021-05-21 11:26:06,520 Node[0] Epoch[20] Batch [0-20]	Speed: 57053.91 samples/sec	accuracy=nan
2021-05-21 11:26:08,649 Node[0] Epoch[20] Batch [20-40]	Speed: 57717.19 samples/sec	accuracy=nan
2021-05-21 11:26:10,822 Node[0] Epoch[20] Batch [40-60]	Speed: 56543.01 samples/sec	accuracy=nan
2021-05-21 11:26:13,059 Node[0] Epoch[20] Batch [60-80]	Speed: 54948.05 samples/sec	accuracy=nan
2021-05-21 11:26:15,318 Node[0] Epoch[20] Batch [80-100]	Speed: 54400.85 samples/sec	accuracy=nan
2021-05-21 11:26:17,582 Node[0] Epoch[20] Batch [100-120]	Speed: 54273.32 samples/sec	accuracy=nan
2021-05-21 11:26:19,839 Node[0] Epoch[20] Batch [120-140]	Speed: 54462.87 samples/sec	accuracy=nan
2021-05-21 11:26:22,093 Node[0] Epoch[20] Batch [140-160]	Speed: 54514.31 samples/sec	accuracy=nan
2021-05-21 11:26:24,347 Node[0] Epoch[20] Batch [160-180]	Speed: 54514.39 samples/sec	accuracy=nan
2021-05-21 11:26:26,551 Node[0] Epoch[20] Batch [180-200]	Speed: 55765.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614387402, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 21}}
2021-05-21 11:26:27,402 Node[0] Epoch[20] Time cost=23.047
:::MLLOG {"namespace": "", "time_ms": 1621614387402, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55590.2256899673}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621614387403, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55590.2256899673, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614387403, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 22}}
2021-05-21 11:26:29,638 Node[0] Epoch[21] Batch [0-20]	Speed: 57732.15 samples/sec	accuracy=nan
2021-05-21 11:26:31,768 Node[0] Epoch[21] Batch [20-40]	Speed: 57700.00 samples/sec	accuracy=nan
2021-05-21 11:26:33,947 Node[0] Epoch[21] Batch [40-60]	Speed: 56390.44 samples/sec	accuracy=nan
2021-05-21 11:26:36,186 Node[0] Epoch[21] Batch [60-80]	Speed: 54889.71 samples/sec	accuracy=nan
2021-05-21 11:26:38,445 Node[0] Epoch[21] Batch [80-100]	Speed: 54397.30 samples/sec	accuracy=nan
2021-05-21 11:26:40,699 Node[0] Epoch[21] Batch [100-120]	Speed: 54518.48 samples/sec	accuracy=nan
2021-05-21 11:26:42,946 Node[0] Epoch[21] Batch [120-140]	Speed: 54704.09 samples/sec	accuracy=nan
2021-05-21 11:26:45,196 Node[0] Epoch[21] Batch [140-160]	Speed: 54622.03 samples/sec	accuracy=nan
2021-05-21 11:26:47,458 Node[0] Epoch[21] Batch [160-180]	Speed: 54319.15 samples/sec	accuracy=nan
2021-05-21 11:26:49,668 Node[0] Epoch[21] Batch [180-200]	Speed: 55622.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614410515, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 22}}
2021-05-21 11:26:50,516 Node[0] Epoch[21] Time cost=23.113
:::MLLOG {"namespace": "", "time_ms": 1621614410517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55429.463147716626}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621614410517, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55429.463147716626, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614410517, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 23}}
2021-05-21 11:26:52,754 Node[0] Epoch[22] Batch [0-20]	Speed: 57675.54 samples/sec	accuracy=nan
2021-05-21 11:26:54,886 Node[0] Epoch[22] Batch [20-40]	Speed: 57637.69 samples/sec	accuracy=nan
2021-05-21 11:26:57,067 Node[0] Epoch[22] Batch [40-60]	Speed: 56355.22 samples/sec	accuracy=nan
2021-05-21 11:26:59,304 Node[0] Epoch[22] Batch [60-80]	Speed: 54937.02 samples/sec	accuracy=nan
2021-05-21 11:27:01,565 Node[0] Epoch[22] Batch [80-100]	Speed: 54356.97 samples/sec	accuracy=nan
2021-05-21 11:27:03,816 Node[0] Epoch[22] Batch [100-120]	Speed: 54598.39 samples/sec	accuracy=nan
2021-05-21 11:27:06,070 Node[0] Epoch[22] Batch [120-140]	Speed: 54521.15 samples/sec	accuracy=nan
2021-05-21 11:27:08,324 Node[0] Epoch[22] Batch [140-160]	Speed: 54524.12 samples/sec	accuracy=nan
2021-05-21 11:27:10,587 Node[0] Epoch[22] Batch [160-180]	Speed: 54289.12 samples/sec	accuracy=nan
2021-05-21 11:27:12,792 Node[0] Epoch[22] Batch [180-200]	Speed: 55741.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614433646, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 23}}
2021-05-21 11:27:13,646 Node[0] Epoch[22] Time cost=23.129
:::MLLOG {"namespace": "", "time_ms": 1621614433646, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55391.91122786717}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621614433646, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55391.91122786717, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614433646, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 24}}
2021-05-21 11:27:15,885 Node[0] Epoch[23] Batch [0-20]	Speed: 57645.18 samples/sec	accuracy=nan
2021-05-21 11:27:18,017 Node[0] Epoch[23] Batch [20-40]	Speed: 57633.26 samples/sec	accuracy=nan
2021-05-21 11:27:20,201 Node[0] Epoch[23] Batch [40-60]	Speed: 56270.52 samples/sec	accuracy=nan
2021-05-21 11:27:22,430 Node[0] Epoch[23] Batch [60-80]	Speed: 55141.49 samples/sec	accuracy=nan
2021-05-21 11:27:24,677 Node[0] Epoch[23] Batch [80-100]	Speed: 54700.46 samples/sec	accuracy=nan
2021-05-21 11:27:26,930 Node[0] Epoch[23] Batch [100-120]	Speed: 54527.04 samples/sec	accuracy=nan
2021-05-21 11:27:29,184 Node[0] Epoch[23] Batch [120-140]	Speed: 54520.04 samples/sec	accuracy=nan
2021-05-21 11:27:31,443 Node[0] Epoch[23] Batch [140-160]	Speed: 54409.64 samples/sec	accuracy=nan
2021-05-21 11:27:33,705 Node[0] Epoch[23] Batch [160-180]	Speed: 54332.94 samples/sec	accuracy=nan
2021-05-21 11:27:35,907 Node[0] Epoch[23] Batch [180-200]	Speed: 55800.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614456755, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 24}}
2021-05-21 11:27:36,756 Node[0] Epoch[23] Time cost=23.109
:::MLLOG {"namespace": "", "time_ms": 1621614456756, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55439.68585983439}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621614456756, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55439.68585983439, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614456861, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 24}}
2021-05-21 11:27:37,131 Node[0] Epoch[23] Validation-accuracy=0.681709
2021-05-21 11:27:37,131 Node[0] Epoch[23] Validation-correct-count=1420.000000
2021-05-21 11:27:37,131 Node[0] Epoch[23] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614457136, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621614457136, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67942, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621614457136, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621614457136, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 25, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614457136, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 25}}
2021-05-21 11:27:39,298 Node[0] Epoch[24] Batch [0-20]	Speed: 57081.72 samples/sec	accuracy=nan
2021-05-21 11:27:41,424 Node[0] Epoch[24] Batch [20-40]	Speed: 57812.57 samples/sec	accuracy=nan
2021-05-21 11:27:43,605 Node[0] Epoch[24] Batch [40-60]	Speed: 56361.31 samples/sec	accuracy=nan
2021-05-21 11:27:45,840 Node[0] Epoch[24] Batch [60-80]	Speed: 54990.62 samples/sec	accuracy=nan
2021-05-21 11:27:48,088 Node[0] Epoch[24] Batch [80-100]	Speed: 54644.94 samples/sec	accuracy=nan
2021-05-21 11:27:50,344 Node[0] Epoch[24] Batch [100-120]	Speed: 54480.20 samples/sec	accuracy=nan
2021-05-21 11:27:52,600 Node[0] Epoch[24] Batch [120-140]	Speed: 54486.77 samples/sec	accuracy=nan
2021-05-21 11:27:54,854 Node[0] Epoch[24] Batch [140-160]	Speed: 54511.45 samples/sec	accuracy=nan
2021-05-21 11:27:57,115 Node[0] Epoch[24] Batch [160-180]	Speed: 54352.09 samples/sec	accuracy=nan
2021-05-21 11:27:59,315 Node[0] Epoch[24] Batch [180-200]	Speed: 55863.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614480165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 25}}
2021-05-21 11:28:00,165 Node[0] Epoch[24] Time cost=23.029
:::MLLOG {"namespace": "", "time_ms": 1621614480166, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55632.03235335368}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621614480166, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55632.03235335368, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614480166, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 26}}
2021-05-21 11:28:02,393 Node[0] Epoch[25] Batch [0-20]	Speed: 57938.42 samples/sec	accuracy=nan
2021-05-21 11:28:04,517 Node[0] Epoch[25] Batch [20-40]	Speed: 57873.82 samples/sec	accuracy=nan
2021-05-21 11:28:06,705 Node[0] Epoch[25] Batch [40-60]	Speed: 56165.92 samples/sec	accuracy=nan
2021-05-21 11:28:08,941 Node[0] Epoch[25] Batch [60-80]	Speed: 54965.12 samples/sec	accuracy=nan
2021-05-21 11:28:11,197 Node[0] Epoch[25] Batch [80-100]	Speed: 54460.16 samples/sec	accuracy=nan
2021-05-21 11:28:13,449 Node[0] Epoch[25] Batch [100-120]	Speed: 54581.53 samples/sec	accuracy=nan
2021-05-21 11:28:15,705 Node[0] Epoch[25] Batch [120-140]	Speed: 54467.12 samples/sec	accuracy=nan
2021-05-21 11:28:17,959 Node[0] Epoch[25] Batch [140-160]	Speed: 54533.10 samples/sec	accuracy=nan
2021-05-21 11:28:20,216 Node[0] Epoch[25] Batch [160-180]	Speed: 54426.50 samples/sec	accuracy=nan
2021-05-21 11:28:22,420 Node[0] Epoch[25] Batch [180-200]	Speed: 55775.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614503269, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 26}}
2021-05-21 11:28:23,269 Node[0] Epoch[25] Time cost=23.103
:::MLLOG {"namespace": "", "time_ms": 1621614503269, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55453.72278167751}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621614503269, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55453.72278167751, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614503270, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 27}}
2021-05-21 11:28:25,500 Node[0] Epoch[26] Batch [0-20]	Speed: 57851.75 samples/sec	accuracy=nan
2021-05-21 11:28:27,627 Node[0] Epoch[26] Batch [20-40]	Speed: 57796.95 samples/sec	accuracy=nan
2021-05-21 11:28:29,810 Node[0] Epoch[26] Batch [40-60]	Speed: 56299.84 samples/sec	accuracy=nan
2021-05-21 11:28:32,045 Node[0] Epoch[26] Batch [60-80]	Speed: 54962.24 samples/sec	accuracy=nan
2021-05-21 11:28:34,303 Node[0] Epoch[26] Batch [80-100]	Speed: 54442.32 samples/sec	accuracy=nan
2021-05-21 11:28:36,549 Node[0] Epoch[26] Batch [100-120]	Speed: 54702.89 samples/sec	accuracy=nan
2021-05-21 11:28:38,803 Node[0] Epoch[26] Batch [120-140]	Speed: 54532.23 samples/sec	accuracy=nan
2021-05-21 11:28:41,062 Node[0] Epoch[26] Batch [140-160]	Speed: 54411.11 samples/sec	accuracy=nan
2021-05-21 11:28:43,323 Node[0] Epoch[26] Batch [160-180]	Speed: 54343.01 samples/sec	accuracy=nan
2021-05-21 11:28:45,513 Node[0] Epoch[26] Batch [180-200]	Speed: 56111.65 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614526361, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 27}}
2021-05-21 11:28:46,362 Node[0] Epoch[26] Time cost=23.093
:::MLLOG {"namespace": "", "time_ms": 1621614526362, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55479.42415223999}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621614526362, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55479.42415223999, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614526363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 28}}
2021-05-21 11:28:48,591 Node[0] Epoch[27] Batch [0-20]	Speed: 57909.59 samples/sec	accuracy=nan
2021-05-21 11:28:50,716 Node[0] Epoch[27] Batch [20-40]	Speed: 57826.36 samples/sec	accuracy=nan
2021-05-21 11:28:52,903 Node[0] Epoch[27] Batch [40-60]	Speed: 56208.37 samples/sec	accuracy=nan
2021-05-21 11:28:55,142 Node[0] Epoch[27] Batch [60-80]	Speed: 54886.26 samples/sec	accuracy=nan
2021-05-21 11:28:57,397 Node[0] Epoch[27] Batch [80-100]	Speed: 54482.64 samples/sec	accuracy=nan
2021-05-21 11:28:59,651 Node[0] Epoch[27] Batch [100-120]	Speed: 54540.21 samples/sec	accuracy=nan
2021-05-21 11:29:01,909 Node[0] Epoch[27] Batch [120-140]	Speed: 54407.95 samples/sec	accuracy=nan
2021-05-21 11:29:04,164 Node[0] Epoch[27] Batch [140-160]	Speed: 54511.16 samples/sec	accuracy=nan
2021-05-21 11:29:06,421 Node[0] Epoch[27] Batch [160-180]	Speed: 54449.14 samples/sec	accuracy=nan
2021-05-21 11:29:08,604 Node[0] Epoch[27] Batch [180-200]	Speed: 56282.14 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614549454, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 28}}
2021-05-21 11:29:09,455 Node[0] Epoch[27] Time cost=23.092
:::MLLOG {"namespace": "", "time_ms": 1621614549455, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55479.79246104129}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621614549455, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55479.79246104129, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614549557, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 28}}
2021-05-21 11:29:09,828 Node[0] Epoch[27] Validation-accuracy=0.721555
2021-05-21 11:29:09,828 Node[0] Epoch[27] Validation-correct-count=1503.000000
2021-05-21 11:29:09,828 Node[0] Epoch[27] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614549831, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621614549831, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.70944, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621614549831, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621614549831, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 29, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614549831, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 29}}
2021-05-21 11:29:11,995 Node[0] Epoch[28] Batch [0-20]	Speed: 57064.25 samples/sec	accuracy=nan
2021-05-21 11:29:14,121 Node[0] Epoch[28] Batch [20-40]	Speed: 57802.44 samples/sec	accuracy=nan
2021-05-21 11:29:16,311 Node[0] Epoch[28] Batch [40-60]	Speed: 56105.12 samples/sec	accuracy=nan
2021-05-21 11:29:18,561 Node[0] Epoch[28] Batch [60-80]	Speed: 54619.45 samples/sec	accuracy=nan
2021-05-21 11:29:20,835 Node[0] Epoch[28] Batch [80-100]	Speed: 54037.35 samples/sec	accuracy=nan
2021-05-21 11:29:23,100 Node[0] Epoch[28] Batch [100-120]	Speed: 54258.53 samples/sec	accuracy=nan
2021-05-21 11:29:25,355 Node[0] Epoch[28] Batch [120-140]	Speed: 54509.00 samples/sec	accuracy=nan
2021-05-21 11:29:27,613 Node[0] Epoch[28] Batch [140-160]	Speed: 54421.23 samples/sec	accuracy=nan
2021-05-21 11:29:29,874 Node[0] Epoch[28] Batch [160-180]	Speed: 54362.45 samples/sec	accuracy=nan
2021-05-21 11:29:32,061 Node[0] Epoch[28] Batch [180-200]	Speed: 56186.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614572912, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 29}}
2021-05-21 11:29:32,913 Node[0] Epoch[28] Time cost=23.081
:::MLLOG {"namespace": "", "time_ms": 1621614572913, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55506.570093485265}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621614572913, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55506.570093485265, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614572913, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 30}}
2021-05-21 11:29:35,155 Node[0] Epoch[29] Batch [0-20]	Speed: 57561.27 samples/sec	accuracy=nan
2021-05-21 11:29:37,288 Node[0] Epoch[29] Batch [20-40]	Speed: 57628.95 samples/sec	accuracy=nan
2021-05-21 11:29:39,481 Node[0] Epoch[29] Batch [40-60]	Speed: 56027.87 samples/sec	accuracy=nan
2021-05-21 11:29:41,729 Node[0] Epoch[29] Batch [60-80]	Speed: 54669.47 samples/sec	accuracy=nan
2021-05-21 11:29:43,982 Node[0] Epoch[29] Batch [80-100]	Speed: 54553.86 samples/sec	accuracy=nan
2021-05-21 11:29:46,233 Node[0] Epoch[29] Batch [100-120]	Speed: 54579.49 samples/sec	accuracy=nan
2021-05-21 11:29:48,488 Node[0] Epoch[29] Batch [120-140]	Speed: 54513.73 samples/sec	accuracy=nan
2021-05-21 11:29:50,749 Node[0] Epoch[29] Batch [140-160]	Speed: 54359.68 samples/sec	accuracy=nan
2021-05-21 11:29:53,013 Node[0] Epoch[29] Batch [160-180]	Speed: 54279.09 samples/sec	accuracy=nan
2021-05-21 11:29:55,206 Node[0] Epoch[29] Batch [180-200]	Speed: 56036.51 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614596063, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 30}}
2021-05-21 11:29:56,064 Node[0] Epoch[29] Time cost=23.151
:::MLLOG {"namespace": "", "time_ms": 1621614596064, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55340.19377918834}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621614596064, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55340.19377918834, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614596064, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 31}}
2021-05-21 11:29:58,305 Node[0] Epoch[30] Batch [0-20]	Speed: 57594.49 samples/sec	accuracy=nan
2021-05-21 11:30:00,441 Node[0] Epoch[30] Batch [20-40]	Speed: 57548.67 samples/sec	accuracy=nan
2021-05-21 11:30:02,634 Node[0] Epoch[30] Batch [40-60]	Speed: 56028.89 samples/sec	accuracy=nan
2021-05-21 11:30:04,879 Node[0] Epoch[30] Batch [60-80]	Speed: 54747.02 samples/sec	accuracy=nan
2021-05-21 11:30:07,133 Node[0] Epoch[30] Batch [80-100]	Speed: 54513.40 samples/sec	accuracy=nan
2021-05-21 11:30:09,377 Node[0] Epoch[30] Batch [100-120]	Speed: 54774.22 samples/sec	accuracy=nan
2021-05-21 11:30:11,632 Node[0] Epoch[30] Batch [120-140]	Speed: 54493.87 samples/sec	accuracy=nan
2021-05-21 11:30:13,887 Node[0] Epoch[30] Batch [140-160]	Speed: 54490.01 samples/sec	accuracy=nan
2021-05-21 11:30:16,145 Node[0] Epoch[30] Batch [160-180]	Speed: 54432.18 samples/sec	accuracy=nan
2021-05-21 11:30:18,335 Node[0] Epoch[30] Batch [180-200]	Speed: 56117.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614619185, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 31}}
2021-05-21 11:30:19,186 Node[0] Epoch[30] Time cost=23.121
:::MLLOG {"namespace": "", "time_ms": 1621614619186, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55410.81681315336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621614619186, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55410.81681315336, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614619186, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 32}}
2021-05-21 11:30:21,423 Node[0] Epoch[31] Batch [0-20]	Speed: 57676.55 samples/sec	accuracy=nan
2021-05-21 11:30:23,556 Node[0] Epoch[31] Batch [20-40]	Speed: 57617.83 samples/sec	accuracy=nan
2021-05-21 11:30:25,744 Node[0] Epoch[31] Batch [40-60]	Speed: 56163.05 samples/sec	accuracy=nan
2021-05-21 11:30:27,996 Node[0] Epoch[31] Batch [60-80]	Speed: 54580.61 samples/sec	accuracy=nan
2021-05-21 11:30:30,262 Node[0] Epoch[31] Batch [80-100]	Speed: 54235.38 samples/sec	accuracy=nan
2021-05-21 11:30:32,529 Node[0] Epoch[31] Batch [100-120]	Speed: 54197.34 samples/sec	accuracy=nan
2021-05-21 11:30:34,781 Node[0] Epoch[31] Batch [120-140]	Speed: 54591.47 samples/sec	accuracy=nan
2021-05-21 11:30:37,033 Node[0] Epoch[31] Batch [140-160]	Speed: 54555.20 samples/sec	accuracy=nan
2021-05-21 11:30:39,300 Node[0] Epoch[31] Batch [160-180]	Speed: 54222.70 samples/sec	accuracy=nan
2021-05-21 11:30:41,481 Node[0] Epoch[31] Batch [180-200]	Speed: 56342.43 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614642330, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 32}}
2021-05-21 11:30:42,330 Node[0] Epoch[31] Time cost=23.144
:::MLLOG {"namespace": "", "time_ms": 1621614642331, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55355.3396207515}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621614642331, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55355.3396207515, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614642433, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 32}}
2021-05-21 11:30:42,800 Node[0] Epoch[31] Validation-accuracy=0.724916
2021-05-21 11:30:42,801 Node[0] Epoch[31] Validation-correct-count=1510.000000
2021-05-21 11:30:42,801 Node[0] Epoch[31] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614642802, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621614642803, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621614642803, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621614642803, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 33, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614642803, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 33}}
2021-05-21 11:30:44,960 Node[0] Epoch[32] Batch [0-20]	Speed: 57249.31 samples/sec	accuracy=nan
2021-05-21 11:30:47,090 Node[0] Epoch[32] Batch [20-40]	Speed: 57693.79 samples/sec	accuracy=nan
2021-05-21 11:30:49,286 Node[0] Epoch[32] Batch [40-60]	Speed: 55949.35 samples/sec	accuracy=nan
2021-05-21 11:30:51,526 Node[0] Epoch[32] Batch [60-80]	Speed: 54866.52 samples/sec	accuracy=nan
2021-05-21 11:30:53,785 Node[0] Epoch[32] Batch [80-100]	Speed: 54398.42 samples/sec	accuracy=nan
2021-05-21 11:30:56,045 Node[0] Epoch[32] Batch [100-120]	Speed: 54388.17 samples/sec	accuracy=nan
2021-05-21 11:30:58,300 Node[0] Epoch[32] Batch [120-140]	Speed: 54498.91 samples/sec	accuracy=nan
2021-05-21 11:31:00,560 Node[0] Epoch[32] Batch [140-160]	Speed: 54362.00 samples/sec	accuracy=nan
2021-05-21 11:31:02,831 Node[0] Epoch[32] Batch [160-180]	Speed: 54120.63 samples/sec	accuracy=nan
2021-05-21 11:31:05,008 Node[0] Epoch[32] Batch [180-200]	Speed: 56438.39 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614665858, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 33}}
2021-05-21 11:31:05,859 Node[0] Epoch[32] Time cost=23.055
:::MLLOG {"namespace": "", "time_ms": 1621614665859, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55568.98330920358}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621614665859, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55568.98330920358, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614665859, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 34}}
2021-05-21 11:31:08,092 Node[0] Epoch[33] Batch [0-20]	Speed: 57781.10 samples/sec	accuracy=nan
2021-05-21 11:31:10,222 Node[0] Epoch[33] Batch [20-40]	Speed: 57685.27 samples/sec	accuracy=nan
2021-05-21 11:31:12,434 Node[0] Epoch[33] Batch [40-60]	Speed: 55553.43 samples/sec	accuracy=nan
2021-05-21 11:31:14,686 Node[0] Epoch[33] Batch [60-80]	Speed: 54570.40 samples/sec	accuracy=nan
2021-05-21 11:31:16,937 Node[0] Epoch[33] Batch [80-100]	Speed: 54588.04 samples/sec	accuracy=nan
2021-05-21 11:31:19,185 Node[0] Epoch[33] Batch [100-120]	Speed: 54681.16 samples/sec	accuracy=nan
2021-05-21 11:31:21,456 Node[0] Epoch[33] Batch [120-140]	Speed: 54106.79 samples/sec	accuracy=nan
2021-05-21 11:31:23,715 Node[0] Epoch[33] Batch [140-160]	Speed: 54408.44 samples/sec	accuracy=nan
2021-05-21 11:31:25,978 Node[0] Epoch[33] Batch [160-180]	Speed: 54295.96 samples/sec	accuracy=nan
2021-05-21 11:31:28,155 Node[0] Epoch[33] Batch [180-200]	Speed: 56468.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614689003, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 34}}
2021-05-21 11:31:29,004 Node[0] Epoch[33] Time cost=23.145
:::MLLOG {"namespace": "", "time_ms": 1621614689005, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55353.20303503363}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621614689005, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55353.20303503363, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614689005, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 35}}
2021-05-21 11:31:31,236 Node[0] Epoch[34] Batch [0-20]	Speed: 57813.12 samples/sec	accuracy=nan
2021-05-21 11:31:33,370 Node[0] Epoch[34] Batch [20-40]	Speed: 57614.28 samples/sec	accuracy=nan
2021-05-21 11:31:35,570 Node[0] Epoch[34] Batch [40-60]	Speed: 55854.37 samples/sec	accuracy=nan
2021-05-21 11:31:37,818 Node[0] Epoch[34] Batch [60-80]	Speed: 54653.99 samples/sec	accuracy=nan
2021-05-21 11:31:40,069 Node[0] Epoch[34] Batch [80-100]	Speed: 54598.05 samples/sec	accuracy=nan
2021-05-21 11:31:42,333 Node[0] Epoch[34] Batch [100-120]	Speed: 54295.64 samples/sec	accuracy=nan
2021-05-21 11:31:44,592 Node[0] Epoch[34] Batch [120-140]	Speed: 54382.26 samples/sec	accuracy=nan
2021-05-21 11:31:46,857 Node[0] Epoch[34] Batch [140-160]	Speed: 54258.53 samples/sec	accuracy=nan
2021-05-21 11:31:49,119 Node[0] Epoch[34] Batch [160-180]	Speed: 54345.35 samples/sec	accuracy=nan
2021-05-21 11:31:51,283 Node[0] Epoch[34] Batch [180-200]	Speed: 56791.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614712133, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 35}}
2021-05-21 11:31:52,134 Node[0] Epoch[34] Time cost=23.129
:::MLLOG {"namespace": "", "time_ms": 1621614712134, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55392.6158361371}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621614712134, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55392.6158361371, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614712134, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 36}}
2021-05-21 11:31:54,366 Node[0] Epoch[35] Batch [0-20]	Speed: 57832.98 samples/sec	accuracy=nan
2021-05-21 11:31:56,499 Node[0] Epoch[35] Batch [20-40]	Speed: 57613.38 samples/sec	accuracy=nan
2021-05-21 11:31:58,696 Node[0] Epoch[35] Batch [40-60]	Speed: 55918.81 samples/sec	accuracy=nan
2021-05-21 11:32:00,950 Node[0] Epoch[35] Batch [60-80]	Speed: 54527.24 samples/sec	accuracy=nan
2021-05-21 11:32:03,211 Node[0] Epoch[35] Batch [80-100]	Speed: 54358.85 samples/sec	accuracy=nan
2021-05-21 11:32:05,466 Node[0] Epoch[35] Batch [100-120]	Speed: 54485.56 samples/sec	accuracy=nan
2021-05-21 11:32:07,709 Node[0] Epoch[35] Batch [120-140]	Speed: 54786.64 samples/sec	accuracy=nan
2021-05-21 11:32:09,968 Node[0] Epoch[35] Batch [140-160]	Speed: 54403.06 samples/sec	accuracy=nan
2021-05-21 11:32:12,227 Node[0] Epoch[35] Batch [160-180]	Speed: 54417.91 samples/sec	accuracy=nan
2021-05-21 11:32:14,387 Node[0] Epoch[35] Batch [180-200]	Speed: 56890.29 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614735240, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 36}}
2021-05-21 11:32:15,241 Node[0] Epoch[35] Time cost=23.107
:::MLLOG {"namespace": "", "time_ms": 1621614735241, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55445.6825061125}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621614735241, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55445.6825061125, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614735343, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 36}}
2021-05-21 11:32:15,749 Node[0] Epoch[35] Validation-accuracy=0.759482
2021-05-21 11:32:15,749 Node[0] Epoch[35] Validation-correct-count=1582.000000
2021-05-21 11:32:15,749 Node[0] Epoch[35] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614735755, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621614735756, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75182, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621614735756, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621614735756, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1016, "first_epoch_num": 37, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621614735756, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 37}}
2021-05-21 11:32:17,898 Node[0] Epoch[36] Batch [0-20]	Speed: 57582.96 samples/sec	accuracy=nan
2021-05-21 11:32:20,030 Node[0] Epoch[36] Batch [20-40]	Speed: 57655.46 samples/sec	accuracy=nan
2021-05-21 11:32:22,234 Node[0] Epoch[36] Batch [40-60]	Speed: 55746.49 samples/sec	accuracy=nan
2021-05-21 11:32:24,476 Node[0] Epoch[36] Batch [60-80]	Speed: 54817.06 samples/sec	accuracy=nan
2021-05-21 11:32:26,736 Node[0] Epoch[36] Batch [80-100]	Speed: 54386.19 samples/sec	accuracy=nan
2021-05-21 11:32:28,988 Node[0] Epoch[36] Batch [100-120]	Speed: 54567.98 samples/sec	accuracy=nan
2021-05-21 11:32:31,251 Node[0] Epoch[36] Batch [120-140]	Speed: 54298.21 samples/sec	accuracy=nan
2021-05-21 11:32:33,509 Node[0] Epoch[36] Batch [140-160]	Speed: 54430.13 samples/sec	accuracy=nan
2021-05-21 11:32:35,763 Node[0] Epoch[36] Batch [160-180]	Speed: 54522.87 samples/sec	accuracy=nan
2021-05-21 11:32:37,918 Node[0] Epoch[36] Batch [180-200]	Speed: 57002.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614758769, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 37}}
2021-05-21 11:32:38,770 Node[0] Epoch[36] Time cost=23.014
:::MLLOG {"namespace": "", "time_ms": 1621614758770, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55669.55770267847}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621614758770, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55669.55770267847, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614758770, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 38}}
2021-05-21 11:32:41,002 Node[0] Epoch[37] Batch [0-20]	Speed: 57818.14 samples/sec	accuracy=nan
2021-05-21 11:32:43,135 Node[0] Epoch[37] Batch [20-40]	Speed: 57620.49 samples/sec	accuracy=nan
2021-05-21 11:32:45,344 Node[0] Epoch[37] Batch [40-60]	Speed: 55640.33 samples/sec	accuracy=nan
2021-05-21 11:32:47,598 Node[0] Epoch[37] Batch [60-80]	Speed: 54518.09 samples/sec	accuracy=nan
2021-05-21 11:32:49,858 Node[0] Epoch[37] Batch [80-100]	Speed: 54364.00 samples/sec	accuracy=nan
2021-05-21 11:32:52,119 Node[0] Epoch[37] Batch [100-120]	Speed: 54354.93 samples/sec	accuracy=nan
2021-05-21 11:32:54,357 Node[0] Epoch[37] Batch [120-140]	Speed: 54919.93 samples/sec	accuracy=nan
2021-05-21 11:32:56,615 Node[0] Epoch[37] Batch [140-160]	Speed: 54418.21 samples/sec	accuracy=nan
2021-05-21 11:32:58,873 Node[0] Epoch[37] Batch [160-180]	Speed: 54422.50 samples/sec	accuracy=nan
2021-05-21 11:33:01,036 Node[0] Epoch[37] Batch [180-200]	Speed: 56829.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614781885, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 38}}
2021-05-21 11:33:01,886 Node[0] Epoch[37] Time cost=23.115
:::MLLOG {"namespace": "", "time_ms": 1621614781886, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55424.91000490898}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621614781886, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55424.91000490898, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614781886, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 39}}
2021-05-21 11:33:04,116 Node[0] Epoch[38] Batch [0-20]	Speed: 57880.85 samples/sec	accuracy=nan
2021-05-21 11:33:06,253 Node[0] Epoch[38] Batch [20-40]	Speed: 57497.55 samples/sec	accuracy=nan
2021-05-21 11:33:08,461 Node[0] Epoch[38] Batch [40-60]	Speed: 55654.33 samples/sec	accuracy=nan
2021-05-21 11:33:10,718 Node[0] Epoch[38] Batch [60-80]	Speed: 54458.41 samples/sec	accuracy=nan
2021-05-21 11:33:12,978 Node[0] Epoch[38] Batch [80-100]	Speed: 54378.26 samples/sec	accuracy=nan
2021-05-21 11:33:15,235 Node[0] Epoch[38] Batch [100-120]	Speed: 54437.24 samples/sec	accuracy=nan
2021-05-21 11:33:17,493 Node[0] Epoch[38] Batch [120-140]	Speed: 54420.06 samples/sec	accuracy=nan
2021-05-21 11:33:19,759 Node[0] Epoch[38] Batch [140-160]	Speed: 54252.95 samples/sec	accuracy=nan
2021-05-21 11:33:22,019 Node[0] Epoch[38] Batch [160-180]	Speed: 54360.64 samples/sec	accuracy=nan
2021-05-21 11:33:24,172 Node[0] Epoch[38] Batch [180-200]	Speed: 57085.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614805022, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 39}}
2021-05-21 11:33:25,023 Node[0] Epoch[38] Time cost=23.137
:::MLLOG {"namespace": "", "time_ms": 1621614805023, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55373.63022747596}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621614805023, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55373.63022747596, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614805023, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 887, "epoch_num": 40}}
2021-05-21 11:33:27,253 Node[0] Epoch[39] Batch [0-20]	Speed: 57879.16 samples/sec	accuracy=nan
2021-05-21 11:33:29,391 Node[0] Epoch[39] Batch [20-40]	Speed: 57471.54 samples/sec	accuracy=nan
2021-05-21 11:33:31,600 Node[0] Epoch[39] Batch [40-60]	Speed: 55641.09 samples/sec	accuracy=nan
2021-05-21 11:33:33,847 Node[0] Epoch[39] Batch [60-80]	Speed: 54683.02 samples/sec	accuracy=nan
2021-05-21 11:33:36,099 Node[0] Epoch[39] Batch [80-100]	Speed: 54582.83 samples/sec	accuracy=nan
2021-05-21 11:33:38,356 Node[0] Epoch[39] Batch [100-120]	Speed: 54447.25 samples/sec	accuracy=nan
2021-05-21 11:33:40,623 Node[0] Epoch[39] Batch [120-140]	Speed: 54212.60 samples/sec	accuracy=nan
2021-05-21 11:33:42,882 Node[0] Epoch[39] Batch [140-160]	Speed: 54393.10 samples/sec	accuracy=nan
2021-05-21 11:33:45,140 Node[0] Epoch[39] Batch [160-180]	Speed: 54432.14 samples/sec	accuracy=nan
2021-05-21 11:33:47,295 Node[0] Epoch[39] Batch [180-200]	Speed: 57010.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1621614828143, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 939, "epoch_num": 40}}
2021-05-21 11:33:48,144 Node[0] Epoch[39] Time cost=23.121
:::MLLOG {"namespace": "", "time_ms": 1621614828144, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 55411.16421310857}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 955, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621614828145, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 55411.16421310857, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 958}}
:::MLLOG {"namespace": "", "time_ms": 1621614828247, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 976, "epoch_num": 40}}
2021-05-21 11:33:48,653 Node[0] Epoch[39] Validation-accuracy=0.772444
2021-05-21 11:33:48,653 Node[0] Epoch[39] Validation-correct-count=1609.000000
2021-05-21 11:33:48,653 Node[0] Epoch[39] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1621614828695, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 997, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621614828695, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75968, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 999, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621614828695, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1002, "first_epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621614828695, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "status": "success"}}
ENDING TIMING RUN AT 2021-05-21 11:33:55 AM
RESULT,IMAGE_CLASSIFICATION,,1002,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 11:17:12 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 11:17:12 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:56 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1004,root,2021-05-21 11:17:13 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1003,root,2021-05-21 11:17:14 AM
ENDING TIMING RUN AT 2021-05-21 11:33:57 AM
RESULT,IMAGE_CLASSIFICATION,,1005,root,2021-05-21 11:17:12 AM
